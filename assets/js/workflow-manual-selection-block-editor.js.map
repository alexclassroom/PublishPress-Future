{"version":3,"file":"workflow-manual-selection-block-editor.js","mappings":"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","sources":["webpack://post-expirator/./node_modules/sprintf-js/src/sprintf.js","webpack://post-expirator/webpack/bootstrap","webpack://post-expirator/webpack/runtime/define property getters","webpack://post-expirator/webpack/runtime/hasOwnProperty shorthand","webpack://post-expirator/webpack/runtime/make namespace object","webpack://post-expirator/external var \"wp.data\"","webpack://post-expirator/./assets/jsx/workflow-manual-selection/store/reducer.jsx","webpack://post-expirator/./assets/jsx/workflow-manual-selection/store/selectors.jsx","webpack://post-expirator/./node_modules/memize/dist/index.js","webpack://post-expirator/./node_modules/@tannin/postfix/index.js","webpack://post-expirator/./assets/jsx/workflow-manual-selection/store/actions.jsx","webpack://post-expirator/./node_modules/@wordpress/i18n/build-module/sprintf.js","webpack://post-expirator/./node_modules/@tannin/evaluate/index.js","webpack://post-expirator/./node_modules/tannin/index.js","webpack://post-expirator/./node_modules/@tannin/plural-forms/index.js","webpack://post-expirator/./node_modules/@tannin/compile/index.js","webpack://post-expirator/./node_modules/@wordpress/i18n/build-module/create-i18n.js","webpack://post-expirator/./node_modules/@wordpress/i18n/build-module/default-i18n.js","webpack://post-expirator/external var \"wp.hooks\"","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/nonce.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/namespace-endpoint.js","webpack://post-expirator/external var \"wp.url\"","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/preloading.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/fetch-all-middleware.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/http-v1.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/utils/response.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/media-upload.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/index.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/user-locale.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/root-url.js","webpack://post-expirator/./node_modules/@wordpress/api-fetch/build-module/middlewares/theme-preview.js","webpack://post-expirator/./assets/jsx/workflow-manual-selection/store/controls.jsx","webpack://post-expirator/./node_modules/@wordpress/data-controls/build-module/index.js","webpack://post-expirator/./assets/jsx/workflow-manual-selection/store/index.jsx","webpack://post-expirator/./assets/jsx/workflow-manual-selection/store/name.jsx","webpack://post-expirator/external var \"wp.components\"","webpack://post-expirator/external var \"wp.element\"","webpack://post-expirator/./assets/jsx/workflow-manual-selection/fieldset/index.jsx","webpack://post-expirator/external var \"wp.plugins\"","webpack://post-expirator/external var \"React\"","webpack://post-expirator/./assets/jsx/workflow-manual-selection/block-editor/index.jsx"],"sourcesContent":["/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = wp.data;","\nexport const DEFAULT_STATE = {\n    workflowsWithManualTrigger: [],\n    workflowsEnabledForPost: [],\n}\n\nconst setWorkflowsWithManualTrigger = (state, action) => {\n    return {\n        ...state,\n        workflowsWithManualTrigger: [...action.payload],\n\n    };\n}\n\nconst setWorkflowsEnabledForPost = (state, action) => {\n    return {\n        ...state,\n        workflowsEnabledForPost: [...action.payload],\n    };\n}\n\nconst updateWorkflowsEnabledForPost = (state, action) => {\n    const { workflowId, enabled } = action.payload;\n\n    const newList = [...state.workflowsEnabledForPost];\n\n    if (enabled && !newList.includes(workflowId)) {\n        newList.push(workflowId);\n    }\n\n    if (!enabled && newList.includes(workflowId)) {\n        newList.splice(newList.indexOf(workflowId), 1);\n    }\n\n    return {\n        ...state,\n        workflowsEnabledForPost: newList,\n    };\n}\n\nexport const reducer = (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case 'SET_WORKFLOWS_WITH_MANUAL_TRIGGER':\n            return setWorkflowsWithManualTrigger(state, action);\n        case 'SET_WORKFLOWS_ENABLED_FOR_POST':\n            return setWorkflowsEnabledForPost(state, action);\n        case 'UPDATE_WORKFLOWS_ENABLED_FOR_POST':\n            return updateWorkflowsEnabledForPost(state, action);\n    }\n\n    return state;\n}\n\nexport default reducer;\n","\nexport const getWorkflowsWithManualTrigger = (state) => {\n    return state.workflowsWithManualTrigger;\n};\n\nexport const getWorkflowsEnabledForPost = (state) => {\n    return state.workflowsEnabledForPost;\n}\n","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n","var PRECEDENCE, OPENERS, TERMINATORS, PATTERN;\n\n/**\n * Operator precedence mapping.\n *\n * @type {Object}\n */\nPRECEDENCE = {\n\t'(': 9,\n\t'!': 8,\n\t'*': 7,\n\t'/': 7,\n\t'%': 7,\n\t'+': 6,\n\t'-': 6,\n\t'<': 5,\n\t'<=': 5,\n\t'>': 5,\n\t'>=': 5,\n\t'==': 4,\n\t'!=': 4,\n\t'&&': 3,\n\t'||': 2,\n\t'?': 1,\n\t'?:': 1,\n};\n\n/**\n * Characters which signal pair opening, to be terminated by terminators.\n *\n * @type {string[]}\n */\nOPENERS = [ '(', '?' ];\n\n/**\n * Characters which signal pair termination, the value an array with the\n * opener as its first member. The second member is an optional operator\n * replacement to push to the stack.\n *\n * @type {string[]}\n */\nTERMINATORS = {\n\t')': [ '(' ],\n\t':': [ '?', '?:' ],\n};\n\n/**\n * Pattern matching operators and openers.\n *\n * @type {RegExp}\n */\nPATTERN = /<=|>=|==|!=|&&|\\|\\||\\?:|\\(|!|\\*|\\/|%|\\+|-|<|>|\\?|\\)|:/;\n\n/**\n * Given a C expression, returns the equivalent postfix (Reverse Polish)\n * notation terms as an array.\n *\n * If a postfix string is desired, simply `.join( ' ' )` the result.\n *\n * @example\n *\n * ```js\n * import postfix from '@tannin/postfix';\n *\n * postfix( 'n > 1' );\n * // ⇒ [ 'n', '1', '>' ]\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {string[]} Postfix terms.\n */\nexport default function postfix( expression ) {\n\tvar terms = [],\n\t\tstack = [],\n\t\tmatch, operator, term, element;\n\n\twhile ( ( match = expression.match( PATTERN ) ) ) {\n\t\toperator = match[ 0 ];\n\n\t\t// Term is the string preceding the operator match. It may contain\n\t\t// whitespace, and may be empty (if operator is at beginning).\n\t\tterm = expression.substr( 0, match.index ).trim();\n\t\tif ( term ) {\n\t\t\tterms.push( term );\n\t\t}\n\n\t\twhile ( ( element = stack.pop() ) ) {\n\t\t\tif ( TERMINATORS[ operator ] ) {\n\t\t\t\tif ( TERMINATORS[ operator ][ 0 ] === element ) {\n\t\t\t\t\t// Substitution works here under assumption that because\n\t\t\t\t\t// the assigned operator will no longer be a terminator, it\n\t\t\t\t\t// will be pushed to the stack during the condition below.\n\t\t\t\t\toperator = TERMINATORS[ operator ][ 1 ] || operator;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if ( OPENERS.indexOf( element ) >= 0 || PRECEDENCE[ element ] < PRECEDENCE[ operator ] ) {\n\t\t\t\t// Push to stack if either an opener or when pop reveals an\n\t\t\t\t// element of lower precedence.\n\t\t\t\tstack.push( element );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// For each popped from stack, push to terms.\n\t\t\tterms.push( element );\n\t\t}\n\n\t\tif ( ! TERMINATORS[ operator ] ) {\n\t\t\tstack.push( operator );\n\t\t}\n\n\t\t// Slice matched fragment from expression to continue match.\n\t\texpression = expression.substr( match.index + operator.length );\n\t}\n\n\t// Push remainder of operand, if exists, to terms.\n\texpression = expression.trim();\n\tif ( expression ) {\n\t\tterms.push( expression );\n\t}\n\n\t// Pop remaining items from stack into terms.\n\treturn terms.concat( stack.reverse() );\n}\n","\nexport function setWorkflowsWithManualTrigger(workflows) {\n    return {\n        type: 'SET_WORKFLOWS_WITH_MANUAL_TRIGGER',\n        payload: workflows,\n    };\n}\n\nexport function setWorkflowsEnabledForPost(workflows) {\n    return {\n        type: 'SET_WORKFLOWS_ENABLED_FOR_POST',\n        payload: workflows,\n    };\n}\n\nexport function updateWorkflowsEnabledForPost(workflowId, enabled) {\n    return {\n        type: 'UPDATE_WORKFLOWS_ENABLED_FOR_POST',\n        payload: { workflowId, enabled },\n    };\n}\n","/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport sprintfjs from 'sprintf-js';\n\n/**\n * Log to console, once per message; or more precisely, per referentially equal\n * argument set. Because Jed throws errors, we log these to the console instead\n * to avoid crashing the application.\n *\n * @param {...*} args Arguments to pass to `console.error`\n */\nconst logErrorOnce = memoize(console.error); // eslint-disable-line no-console\n\n/**\n * Returns a formatted string. If an error occurs in applying the format, the\n * original format string is returned.\n *\n * @param {string} format The format of the string to generate.\n * @param {...*}   args   Arguments to apply to the format.\n *\n * @see https://www.npmjs.com/package/sprintf-js\n *\n * @return {string} The formatted string.\n */\nexport function sprintf(format, ...args) {\n  try {\n    return sprintfjs.sprintf(format, ...args);\n  } catch (error) {\n    if (error instanceof Error) {\n      logErrorOnce('sprintf error: \\n\\n' + error.toString());\n    }\n    return format;\n  }\n}\n//# sourceMappingURL=sprintf.js.map","/**\n * Operator callback functions.\n *\n * @type {Object}\n */\nvar OPERATORS = {\n\t'!': function( a ) {\n\t\treturn ! a;\n\t},\n\t'*': function( a, b ) {\n\t\treturn a * b;\n\t},\n\t'/': function( a, b ) {\n\t\treturn a / b;\n\t},\n\t'%': function( a, b ) {\n\t\treturn a % b;\n\t},\n\t'+': function( a, b ) {\n\t\treturn a + b;\n\t},\n\t'-': function( a, b ) {\n\t\treturn a - b;\n\t},\n\t'<': function( a, b ) {\n\t\treturn a < b;\n\t},\n\t'<=': function( a, b ) {\n\t\treturn a <= b;\n\t},\n\t'>': function( a, b ) {\n\t\treturn a > b;\n\t},\n\t'>=': function( a, b ) {\n\t\treturn a >= b;\n\t},\n\t'==': function( a, b ) {\n\t\treturn a === b;\n\t},\n\t'!=': function( a, b ) {\n\t\treturn a !== b;\n\t},\n\t'&&': function( a, b ) {\n\t\treturn a && b;\n\t},\n\t'||': function( a, b ) {\n\t\treturn a || b;\n\t},\n\t'?:': function( a, b, c ) {\n\t\tif ( a ) {\n\t\t\tthrow b;\n\t\t}\n\n\t\treturn c;\n\t},\n};\n\n/**\n * Given an array of postfix terms and operand variables, returns the result of\n * the postfix evaluation.\n *\n * @example\n *\n * ```js\n * import evaluate from '@tannin/evaluate';\n *\n * // 3 + 4 * 5 / 6 ⇒ '3 4 5 * 6 / +'\n * const terms = [ '3', '4', '5', '*', '6', '/', '+' ];\n *\n * evaluate( terms, {} );\n * // ⇒ 6.333333333333334\n * ```\n *\n * @param {string[]} postfix   Postfix terms.\n * @param {Object}   variables Operand variables.\n *\n * @return {*} Result of evaluation.\n */\nexport default function evaluate( postfix, variables ) {\n\tvar stack = [],\n\t\ti, j, args, getOperatorResult, term, value;\n\n\tfor ( i = 0; i < postfix.length; i++ ) {\n\t\tterm = postfix[ i ];\n\n\t\tgetOperatorResult = OPERATORS[ term ];\n\t\tif ( getOperatorResult ) {\n\t\t\t// Pop from stack by number of function arguments.\n\t\t\tj = getOperatorResult.length;\n\t\t\targs = Array( j );\n\t\t\twhile ( j-- ) {\n\t\t\t\targs[ j ] = stack.pop();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvalue = getOperatorResult.apply( null, args );\n\t\t\t} catch ( earlyReturn ) {\n\t\t\t\treturn earlyReturn;\n\t\t\t}\n\t\t} else if ( variables.hasOwnProperty( term ) ) {\n\t\t\tvalue = variables[ term ];\n\t\t} else {\n\t\t\tvalue = +term;\n\t\t}\n\n\t\tstack.push( value );\n\t}\n\n\treturn stack[ 0 ];\n}\n","import pluralForms from '@tannin/plural-forms';\n\n/**\n * Tannin constructor options.\n *\n * @typedef {Object} TanninOptions\n *\n * @property {string}   [contextDelimiter] Joiner in string lookup with context.\n * @property {Function} [onMissingKey]     Callback to invoke when key missing.\n */\n\n/**\n * Domain metadata.\n *\n * @typedef {Object} TanninDomainMetadata\n *\n * @property {string}            [domain]       Domain name.\n * @property {string}            [lang]         Language code.\n * @property {(string|Function)} [plural_forms] Plural forms expression or\n *                                              function evaluator.\n */\n\n/**\n * Domain translation pair respectively representing the singular and plural\n * translation.\n *\n * @typedef {[string,string]} TanninTranslation\n */\n\n/**\n * Locale data domain. The key is used as reference for lookup, the value an\n * array of two string entries respectively representing the singular and plural\n * translation.\n *\n * @typedef {{[key:string]:TanninDomainMetadata|TanninTranslation,'':TanninDomainMetadata|TanninTranslation}} TanninLocaleDomain\n */\n\n/**\n * Jed-formatted locale data.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @typedef {{[domain:string]:TanninLocaleDomain}} TanninLocaleData\n */\n\n/**\n * Default Tannin constructor options.\n *\n * @type {TanninOptions}\n */\nvar DEFAULT_OPTIONS = {\n\tcontextDelimiter: '\\u0004',\n\tonMissingKey: null,\n};\n\n/**\n * Given a specific locale data's config `plural_forms` value, returns the\n * expression.\n *\n * @example\n *\n * ```\n * getPluralExpression( 'nplurals=2; plural=(n != 1);' ) === '(n != 1)'\n * ```\n *\n * @param {string} pf Locale data plural forms.\n *\n * @return {string} Plural forms expression.\n */\nfunction getPluralExpression( pf ) {\n\tvar parts, i, part;\n\n\tparts = pf.split( ';' );\n\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tpart = parts[ i ].trim();\n\t\tif ( part.indexOf( 'plural=' ) === 0 ) {\n\t\t\treturn part.substr( 7 );\n\t\t}\n\t}\n}\n\n/**\n * Tannin constructor.\n *\n * @class\n *\n * @param {TanninLocaleData} data      Jed-formatted locale data.\n * @param {TanninOptions}    [options] Tannin options.\n */\nexport default function Tannin( data, options ) {\n\tvar key;\n\n\t/**\n\t * Jed-formatted locale data.\n\t *\n\t * @name Tannin#data\n\t * @type {TanninLocaleData}\n\t */\n\tthis.data = data;\n\n\t/**\n\t * Plural forms function cache, keyed by plural forms string.\n\t *\n\t * @name Tannin#pluralForms\n\t * @type {Object<string,Function>}\n\t */\n\tthis.pluralForms = {};\n\n\t/**\n\t * Effective options for instance, including defaults.\n\t *\n\t * @name Tannin#options\n\t * @type {TanninOptions}\n\t */\n\tthis.options = {};\n\n\tfor ( key in DEFAULT_OPTIONS ) {\n\t\tthis.options[ key ] = options !== undefined && key in options\n\t\t\t? options[ key ]\n\t\t\t: DEFAULT_OPTIONS[ key ];\n\t}\n}\n\n/**\n * Returns the plural form index for the given domain and value.\n *\n * @param {string} domain Domain on which to calculate plural form.\n * @param {number} n      Value for which plural form is to be calculated.\n *\n * @return {number} Plural form index.\n */\nTannin.prototype.getPluralForm = function( domain, n ) {\n\tvar getPluralForm = this.pluralForms[ domain ],\n\t\tconfig, plural, pf;\n\n\tif ( ! getPluralForm ) {\n\t\tconfig = this.data[ domain ][ '' ];\n\n\t\tpf = (\n\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t// @ts-ignore\n\t\t\tconfig.plural_forms\n\t\t);\n\n\t\tif ( typeof pf !== 'function' ) {\n\t\t\tplural = getPluralExpression(\n\t\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t\t// @ts-ignore\n\t\t\t\tconfig.plural_forms\n\t\t\t);\n\n\t\t\tpf = pluralForms( plural );\n\t\t}\n\n\t\tgetPluralForm = this.pluralForms[ domain ] = pf;\n\t}\n\n\treturn getPluralForm( n );\n};\n\n/**\n * Translate a string.\n *\n * @param {string}      domain   Translation domain.\n * @param {string|void} context  Context distinguishing terms of the same name.\n * @param {string}      singular Primary key for translation lookup.\n * @param {string=}     plural   Fallback value used for non-zero plural\n *                               form index.\n * @param {number=}     n        Value to use in calculating plural form.\n *\n * @return {string} Translated string.\n */\nTannin.prototype.dcnpgettext = function( domain, context, singular, plural, n ) {\n\tvar index, key, entry;\n\n\tif ( n === undefined ) {\n\t\t// Default to singular.\n\t\tindex = 0;\n\t} else {\n\t\t// Find index by evaluating plural form for value.\n\t\tindex = this.getPluralForm( domain, n );\n\t}\n\n\tkey = singular;\n\n\t// If provided, context is prepended to key with delimiter.\n\tif ( context ) {\n\t\tkey = context + this.options.contextDelimiter + singular;\n\t}\n\n\tentry = this.data[ domain ][ key ];\n\n\t// Verify not only that entry exists, but that the intended index is within\n\t// range and non-empty.\n\tif ( entry && entry[ index ] ) {\n\t\treturn entry[ index ];\n\t}\n\n\tif ( this.options.onMissingKey ) {\n\t\tthis.options.onMissingKey( singular, domain );\n\t}\n\n\t// If entry not found, fall back to singular vs. plural with zero index\n\t// representing the singular value.\n\treturn index === 0 ? singular : plural;\n};\n","import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms( expression ) {\n\tvar evaluate = compile( expression );\n\n\treturn function( n ) {\n\t\treturn +evaluate( { n: n } );\n\t};\n}\n","import postfix from '@tannin/postfix';\nimport evaluate from '@tannin/evaluate';\n\n/**\n * Given a C expression, returns a function which can be called to evaluate its\n * result.\n *\n * @example\n *\n * ```js\n * import compile from '@tannin/compile';\n *\n * const evaluate = compile( 'n > 1' );\n *\n * evaluate( { n: 2 } );\n * // ⇒ true\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {(variables?:{[variable:string]:*})=>*} Compiled evaluator.\n */\nexport default function compile( expression ) {\n\tvar terms = postfix( expression );\n\n\treturn function( variables ) {\n\t\treturn evaluate( terms, variables );\n\t};\n}\n","/**\n * External dependencies\n */\nimport Tannin from 'tannin';\n\n/**\n * @typedef {Record<string,any>} LocaleData\n */\n\n/**\n * Default locale data to use for Tannin domain when not otherwise provided.\n * Assumes an English plural forms expression.\n *\n * @type {LocaleData}\n */\nconst DEFAULT_LOCALE_DATA = {\n  '': {\n    /** @param {number} n */\n    plural_forms(n) {\n      return n === 1 ? 0 : 1;\n    }\n  }\n};\n\n/*\n * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,\n * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.\n */\nconst I18N_HOOK_REGEXP = /^i18n\\.(n?gettext|has_translation)(_|$)/;\n\n/**\n * @typedef {(domain?: string) => LocaleData} GetLocaleData\n *\n * Returns locale data by domain in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will overwrite the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} AddLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will also merge the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData\n *\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/** @typedef {() => void} SubscribeCallback */\n/** @typedef {() => void} UnsubscribeCallback */\n/**\n * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe\n *\n * Subscribes to changes of locale data\n */\n/**\n * @typedef {(domain?: string) => string} GetFilterDomain\n * Retrieve the domain to use when calling domain-specific filters.\n */\n/**\n * @typedef {(text: string, domain?: string) => string} __\n *\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n */\n/**\n * @typedef {(text: string, context: string, domain?: string) => string} _x\n *\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n */\n/**\n * @typedef {() => boolean} IsRtl\n *\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n */\n/**\n * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation\n *\n * Check if there is a translation for a given string in singular form.\n */\n/** @typedef {import('@wordpress/hooks').Hooks} Hooks */\n\n/**\n * An i18n instance\n *\n * @typedef I18n\n * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.\n * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will overwrite the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {AddLocaleData}   addLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will also merge the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified\n *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.\n * @property {__}              __              Retrieve the translation of text.\n * @property {_x}              _x              Retrieve translated string with gettext context.\n * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied\n *                                             number.\n * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied\n *                                             number, with gettext context.\n * @property {IsRtl}           isRTL           Check if current locale is RTL.\n * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.\n */\n\n/**\n * Create an i18n instance\n *\n * @param {LocaleData} [initialData]   Locale data configuration.\n * @param {string}     [initialDomain] Domain for which configuration applies.\n * @param {Hooks}      [hooks]         Hooks implementation.\n *\n * @return {I18n} I18n instance.\n */\nexport const createI18n = (initialData, initialDomain, hooks) => {\n  /**\n   * The underlying instance of Tannin to which exported functions interface.\n   *\n   * @type {Tannin}\n   */\n  const tannin = new Tannin({});\n  const listeners = new Set();\n  const notifyListeners = () => {\n    listeners.forEach(listener => listener());\n  };\n\n  /**\n   * Subscribe to changes of locale data.\n   *\n   * @param {SubscribeCallback} callback Subscription callback.\n   * @return {UnsubscribeCallback} Unsubscribe callback.\n   */\n  const subscribe = callback => {\n    listeners.add(callback);\n    return () => listeners.delete(callback);\n  };\n\n  /** @type {GetLocaleData} */\n  const getLocaleData = (domain = 'default') => tannin.data[domain];\n\n  /**\n   * @param {LocaleData} [data]\n   * @param {string}     [domain]\n   */\n  const doSetLocaleData = (data, domain = 'default') => {\n    tannin.data[domain] = {\n      ...tannin.data[domain],\n      ...data\n    };\n\n    // Populate default domain configuration (supported locale date which omits\n    // a plural forms expression).\n    tannin.data[domain][''] = {\n      ...DEFAULT_LOCALE_DATA[''],\n      ...tannin.data[domain]?.['']\n    };\n\n    // Clean up cached plural forms functions cache as it might be updated.\n    delete tannin.pluralForms[domain];\n  };\n\n  /** @type {SetLocaleData} */\n  const setLocaleData = (data, domain) => {\n    doSetLocaleData(data, domain);\n    notifyListeners();\n  };\n\n  /** @type {AddLocaleData} */\n  const addLocaleData = (data, domain = 'default') => {\n    tannin.data[domain] = {\n      ...tannin.data[domain],\n      ...data,\n      // Populate default domain configuration (supported locale date which omits\n      // a plural forms expression).\n      '': {\n        ...DEFAULT_LOCALE_DATA[''],\n        ...tannin.data[domain]?.[''],\n        ...data?.['']\n      }\n    };\n\n    // Clean up cached plural forms functions cache as it might be updated.\n    delete tannin.pluralForms[domain];\n    notifyListeners();\n  };\n\n  /** @type {ResetLocaleData} */\n  const resetLocaleData = (data, domain) => {\n    // Reset all current Tannin locale data.\n    tannin.data = {};\n\n    // Reset cached plural forms functions cache.\n    tannin.pluralForms = {};\n    setLocaleData(data, domain);\n  };\n\n  /**\n   * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not\n   * otherwise previously assigned.\n   *\n   * @param {string|undefined} domain   Domain to retrieve the translated text.\n   * @param {string|undefined} context  Context information for the translators.\n   * @param {string}           single   Text to translate if non-plural. Used as\n   *                                    fallback return value on a caught error.\n   * @param {string}           [plural] The text to be used if the number is\n   *                                    plural.\n   * @param {number}           [number] The number to compare against to use\n   *                                    either the singular or plural form.\n   *\n   * @return {string} The translated string.\n   */\n  const dcnpgettext = (domain = 'default', context, single, plural, number) => {\n    if (!tannin.data[domain]) {\n      // Use `doSetLocaleData` to set silently, without notifying listeners.\n      doSetLocaleData(undefined, domain);\n    }\n    return tannin.dcnpgettext(domain, context, single, plural, number);\n  };\n\n  /** @type {GetFilterDomain} */\n  const getFilterDomain = (domain = 'default') => domain;\n\n  /** @type {__} */\n  const __ = (text, domain) => {\n    let translation = dcnpgettext(domain, undefined, text);\n    if (!hooks) {\n      return translation;\n    }\n\n    /**\n     * Filters text with its translation.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} text        Text to translate.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n    translation = /** @type {string} */\n    /** @type {*} */hooks.applyFilters('i18n.gettext', translation, text, domain);\n    return /** @type {string} */(\n      /** @type {*} */hooks.applyFilters('i18n.gettext_' + getFilterDomain(domain), translation, text, domain)\n    );\n  };\n\n  /** @type {_x} */\n  const _x = (text, context, domain) => {\n    let translation = dcnpgettext(domain, context, text);\n    if (!hooks) {\n      return translation;\n    }\n\n    /**\n     * Filters text with its translation based on context information.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} text        Text to translate.\n     * @param {string} context     Context information for the translators.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n    translation = /** @type {string} */\n    /** @type {*} */hooks.applyFilters('i18n.gettext_with_context', translation, text, context, domain);\n    return /** @type {string} */(\n      /** @type {*} */hooks.applyFilters('i18n.gettext_with_context_' + getFilterDomain(domain), translation, text, context, domain)\n    );\n  };\n\n  /** @type {_n} */\n  const _n = (single, plural, number, domain) => {\n    let translation = dcnpgettext(domain, undefined, single, plural, number);\n    if (!hooks) {\n      return translation;\n    }\n\n    /**\n     * Filters the singular or plural form of a string.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} single      The text to be used if the number is singular.\n     * @param {string} plural      The text to be used if the number is plural.\n     * @param {string} number      The number to compare against to use either the singular or plural form.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n    translation = /** @type {string} */\n    /** @type {*} */hooks.applyFilters('i18n.ngettext', translation, single, plural, number, domain);\n    return /** @type {string} */(\n      /** @type {*} */hooks.applyFilters('i18n.ngettext_' + getFilterDomain(domain), translation, single, plural, number, domain)\n    );\n  };\n\n  /** @type {_nx} */\n  const _nx = (single, plural, number, context, domain) => {\n    let translation = dcnpgettext(domain, context, single, plural, number);\n    if (!hooks) {\n      return translation;\n    }\n\n    /**\n     * Filters the singular or plural form of a string with gettext context.\n     *\n     * @param {string} translation Translated text.\n     * @param {string} single      The text to be used if the number is singular.\n     * @param {string} plural      The text to be used if the number is plural.\n     * @param {string} number      The number to compare against to use either the singular or plural form.\n     * @param {string} context     Context information for the translators.\n     * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n     */\n    translation = /** @type {string} */\n    /** @type {*} */hooks.applyFilters('i18n.ngettext_with_context', translation, single, plural, number, context, domain);\n    return /** @type {string} */(\n      /** @type {*} */hooks.applyFilters('i18n.ngettext_with_context_' + getFilterDomain(domain), translation, single, plural, number, context, domain)\n    );\n  };\n\n  /** @type {IsRtl} */\n  const isRTL = () => {\n    return 'rtl' === _x('ltr', 'text direction');\n  };\n\n  /** @type {HasTranslation} */\n  const hasTranslation = (single, context, domain) => {\n    const key = context ? context + '\\u0004' + single : single;\n    let result = !!tannin.data?.[domain !== null && domain !== void 0 ? domain : 'default']?.[key];\n    if (hooks) {\n      /**\n       * Filters the presence of a translation in the locale data.\n       *\n       * @param {boolean} hasTranslation Whether the translation is present or not..\n       * @param {string}  single         The singular form of the translated text (used as key in locale data)\n       * @param {string}  context        Context information for the translators.\n       * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.\n       */\n      result = /** @type { boolean } */\n      /** @type {*} */hooks.applyFilters('i18n.has_translation', result, single, context, domain);\n      result = /** @type { boolean } */\n      /** @type {*} */hooks.applyFilters('i18n.has_translation_' + getFilterDomain(domain), result, single, context, domain);\n    }\n    return result;\n  };\n  if (initialData) {\n    setLocaleData(initialData, initialDomain);\n  }\n  if (hooks) {\n    /**\n     * @param {string} hookName\n     */\n    const onHookAddedOrRemoved = hookName => {\n      if (I18N_HOOK_REGEXP.test(hookName)) {\n        notifyListeners();\n      }\n    };\n    hooks.addAction('hookAdded', 'core/i18n', onHookAddedOrRemoved);\n    hooks.addAction('hookRemoved', 'core/i18n', onHookAddedOrRemoved);\n  }\n  return {\n    getLocaleData,\n    setLocaleData,\n    addLocaleData,\n    resetLocaleData,\n    subscribe,\n    __,\n    _x,\n    _n,\n    _nx,\n    isRTL,\n    hasTranslation\n  };\n};\n//# sourceMappingURL=create-i18n.js.map","/**\n * Internal dependencies\n */\nimport { createI18n } from './create-i18n';\n\n/**\n * WordPress dependencies\n */\nimport { defaultHooks } from '@wordpress/hooks';\nconst i18n = createI18n(undefined, undefined, defaultHooks);\n\n/**\n * Default, singleton instance of `I18n`.\n */\nexport default i18n;\n\n/*\n * Comments in this file are duplicated from ./i18n due to\n * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722\n */\n\n/**\n * @typedef {import('./create-i18n').LocaleData} LocaleData\n * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback\n * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback\n */\n\n/**\n * Returns locale data by domain in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {string} [domain] Domain for which to get the data.\n * @return {LocaleData} Locale data.\n */\nexport const getLocaleData = i18n.getLocaleData.bind(i18n);\n\n/**\n * Merges locale data into the Tannin instance by domain. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const setLocaleData = i18n.setLocaleData.bind(i18n);\n\n/**\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const resetLocaleData = i18n.resetLocaleData.bind(i18n);\n\n/**\n * Subscribes to changes of locale data\n *\n * @param {SubscribeCallback} callback Subscription callback\n * @return {UnsubscribeCallback} Unsubscribe callback\n */\nexport const subscribe = i18n.subscribe.bind(i18n);\n\n/**\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n *\n * @param {string} text     Text to translate.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated text.\n */\nexport const __ = i18n.__.bind(i18n);\n\n/**\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n *\n * @param {string} text     Text to translate.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated context string without pipe.\n */\nexport const _x = i18n._x.bind(i18n);\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _n = i18n._n.bind(i18n);\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _nx = i18n._nx.bind(i18n);\n\n/**\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n *\n * @return {boolean} Whether locale is RTL.\n */\nexport const isRTL = i18n.isRTL.bind(i18n);\n\n/**\n * Check if there is a translation for a given string (in singular form).\n *\n * @param {string} single    Singular form of the string to look up.\n * @param {string} [context] Context information for the translators.\n * @param {string} [domain]  Domain to retrieve the translated text.\n * @return {boolean} Whether the translation exists or not.\n */\nexport const hasTranslation = i18n.hasTranslation.bind(i18n);\n//# sourceMappingURL=default-i18n.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = wp.hooks;","/**\n * @param {string} nonce\n * @return {import('../types').APIFetchMiddleware & { nonce: string }} A middleware to enhance a request with a nonce.\n */\nfunction createNonceMiddleware(nonce) {\n  /**\n   * @type {import('../types').APIFetchMiddleware & { nonce: string }}\n   */\n  const middleware = (options, next) => {\n    const {\n      headers = {}\n    } = options;\n\n    // If an 'X-WP-Nonce' header (or any case-insensitive variation\n    // thereof) was specified, no need to add a nonce header.\n    for (const headerName in headers) {\n      if (headerName.toLowerCase() === 'x-wp-nonce' && headers[headerName] === middleware.nonce) {\n        return next(options);\n      }\n    }\n    return next({\n      ...options,\n      headers: {\n        ...headers,\n        'X-WP-Nonce': middleware.nonce\n      }\n    });\n  };\n  middleware.nonce = nonce;\n  return middleware;\n}\nexport default createNonceMiddleware;\n//# sourceMappingURL=nonce.js.map","/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst namespaceAndEndpointMiddleware = (options, next) => {\n  let path = options.path;\n  let namespaceTrimmed, endpointTrimmed;\n  if (typeof options.namespace === 'string' && typeof options.endpoint === 'string') {\n    namespaceTrimmed = options.namespace.replace(/^\\/|\\/$/g, '');\n    endpointTrimmed = options.endpoint.replace(/^\\//, '');\n    if (endpointTrimmed) {\n      path = namespaceTrimmed + '/' + endpointTrimmed;\n    } else {\n      path = namespaceTrimmed;\n    }\n  }\n  delete options.namespace;\n  delete options.endpoint;\n  return next({\n    ...options,\n    path\n  });\n};\nexport default namespaceAndEndpointMiddleware;\n//# sourceMappingURL=namespace-endpoint.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = wp.url;","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, getQueryArgs, normalizePath } from '@wordpress/url';\n\n/**\n * @param {Record<string, any>} preloadedData\n * @return {import('../types').APIFetchMiddleware} Preloading middleware.\n */\nfunction createPreloadingMiddleware(preloadedData) {\n  const cache = Object.fromEntries(Object.entries(preloadedData).map(([path, data]) => [normalizePath(path), data]));\n  return (options, next) => {\n    const {\n      parse = true\n    } = options;\n    /** @type {string | void} */\n    let rawPath = options.path;\n    if (!rawPath && options.url) {\n      const {\n        rest_route: pathFromQuery,\n        ...queryArgs\n      } = getQueryArgs(options.url);\n      if (typeof pathFromQuery === 'string') {\n        rawPath = addQueryArgs(pathFromQuery, queryArgs);\n      }\n    }\n    if (typeof rawPath !== 'string') {\n      return next(options);\n    }\n    const method = options.method || 'GET';\n    const path = normalizePath(rawPath);\n    if ('GET' === method && cache[path]) {\n      const cacheData = cache[path];\n\n      // Unsetting the cache key ensures that the data is only used a single time.\n      delete cache[path];\n      return prepareResponse(cacheData, !!parse);\n    } else if ('OPTIONS' === method && cache[method] && cache[method][path]) {\n      const cacheData = cache[method][path];\n\n      // Unsetting the cache key ensures that the data is only used a single time.\n      delete cache[method][path];\n      return prepareResponse(cacheData, !!parse);\n    }\n    return next(options);\n  };\n}\n\n/**\n * This is a helper function that sends a success response.\n *\n * @param {Record<string, any>} responseData\n * @param {boolean}             parse\n * @return {Promise<any>} Promise with the response.\n */\nfunction prepareResponse(responseData, parse) {\n  return Promise.resolve(parse ? responseData.body : new window.Response(JSON.stringify(responseData.body), {\n    status: 200,\n    statusText: 'OK',\n    headers: responseData.headers\n  }));\n}\nexport default createPreloadingMiddleware;\n//# sourceMappingURL=preloading.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport apiFetch from '..';\n\n/**\n * Apply query arguments to both URL and Path, whichever is present.\n *\n * @param {import('../types').APIFetchOptions} props\n * @param {Record<string, string | number>}    queryArgs\n * @return {import('../types').APIFetchOptions} The request with the modified query args\n */\nconst modifyQuery = ({\n  path,\n  url,\n  ...options\n}, queryArgs) => ({\n  ...options,\n  url: url && addQueryArgs(url, queryArgs),\n  path: path && addQueryArgs(path, queryArgs)\n});\n\n/**\n * Duplicates parsing functionality from apiFetch.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response json.\n */\nconst parseResponse = response => response.json ? response.json() : Promise.reject(response);\n\n/**\n * @param {string | null} linkHeader\n * @return {{ next?: string }} The parsed link header.\n */\nconst parseLinkHeader = linkHeader => {\n  if (!linkHeader) {\n    return {};\n  }\n  const match = linkHeader.match(/<([^>]+)>; rel=\"next\"/);\n  return match ? {\n    next: match[1]\n  } : {};\n};\n\n/**\n * @param {Response} response\n * @return {string | undefined} The next page URL.\n */\nconst getNextPageUrl = response => {\n  const {\n    next\n  } = parseLinkHeader(response.headers.get('link'));\n  return next;\n};\n\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request contains an unbounded query.\n */\nconst requestContainsUnboundedQuery = options => {\n  const pathIsUnbounded = !!options.path && options.path.indexOf('per_page=-1') !== -1;\n  const urlIsUnbounded = !!options.url && options.url.indexOf('per_page=-1') !== -1;\n  return pathIsUnbounded || urlIsUnbounded;\n};\n\n/**\n * The REST API enforces an upper limit on the per_page option. To handle large\n * collections, apiFetch consumers can pass `per_page=-1`; this middleware will\n * then recursively assemble a full response array from all available pages.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst fetchAllMiddleware = async (options, next) => {\n  if (options.parse === false) {\n    // If a consumer has opted out of parsing, do not apply middleware.\n    return next(options);\n  }\n  if (!requestContainsUnboundedQuery(options)) {\n    // If neither url nor path is requesting all items, do not apply middleware.\n    return next(options);\n  }\n\n  // Retrieve requested page of results.\n  const response = await apiFetch({\n    ...modifyQuery(options, {\n      per_page: 100\n    }),\n    // Ensure headers are returned for page 1.\n    parse: false\n  });\n  const results = await parseResponse(response);\n  if (!Array.isArray(results)) {\n    // We have no reliable way of merging non-array results.\n    return results;\n  }\n  let nextPage = getNextPageUrl(response);\n  if (!nextPage) {\n    // There are no further pages to request.\n    return results;\n  }\n\n  // Iteratively fetch all remaining pages until no \"next\" header is found.\n  let mergedResults = /** @type {any[]} */[].concat(results);\n  while (nextPage) {\n    const nextResponse = await apiFetch({\n      ...options,\n      // Ensure the URL for the next page is used instead of any provided path.\n      path: undefined,\n      url: nextPage,\n      // Ensure we still get headers so we can identify the next page.\n      parse: false\n    });\n    const nextResults = await parseResponse(nextResponse);\n    mergedResults = mergedResults.concat(nextResults);\n    nextPage = getNextPageUrl(nextResponse);\n  }\n  return mergedResults;\n};\nexport default fetchAllMiddleware;\n//# sourceMappingURL=fetch-all-middleware.js.map","/**\n * Set of HTTP methods which are eligible to be overridden.\n *\n * @type {Set<string>}\n */\nconst OVERRIDE_METHODS = new Set(['PATCH', 'PUT', 'DELETE']);\n\n/**\n * Default request method.\n *\n * \"A request has an associated method (a method). Unless stated otherwise it\n * is `GET`.\"\n *\n * @see  https://fetch.spec.whatwg.org/#requests\n *\n * @type {string}\n */\nconst DEFAULT_METHOD = 'GET';\n\n/**\n * API Fetch middleware which overrides the request method for HTTP v1\n * compatibility leveraging the REST API X-HTTP-Method-Override header.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst httpV1Middleware = (options, next) => {\n  const {\n    method = DEFAULT_METHOD\n  } = options;\n  if (OVERRIDE_METHODS.has(method.toUpperCase())) {\n    options = {\n      ...options,\n      headers: {\n        ...options.headers,\n        'X-HTTP-Method-Override': method,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    };\n  }\n  return next(options);\n};\nexport default httpV1Middleware;\n//# sourceMappingURL=http-v1.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Parses the apiFetch response.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any> | null | Response} Parsed response.\n */\nconst parseResponse = (response, shouldParseResponse = true) => {\n  if (shouldParseResponse) {\n    if (response.status === 204) {\n      return null;\n    }\n    return response.json ? response.json() : Promise.reject(response);\n  }\n  return response;\n};\n\n/**\n * Calls the `json` function on the Response, throwing an error if the response\n * doesn't have a json function or if parsing the json itself fails.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response.\n */\nconst parseJsonAndNormalizeError = response => {\n  const invalidJsonError = {\n    code: 'invalid_json',\n    message: __('The response is not a valid JSON response.')\n  };\n  if (!response || !response.json) {\n    throw invalidJsonError;\n  }\n  return response.json().catch(() => {\n    throw invalidJsonError;\n  });\n};\n\n/**\n * Parses the apiFetch response properly and normalize response errors.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any>} Parsed response.\n */\nexport const parseResponseAndNormalizeError = (response, shouldParseResponse = true) => {\n  return Promise.resolve(parseResponse(response, shouldParseResponse)).catch(res => parseAndThrowError(res, shouldParseResponse));\n};\n\n/**\n * Parses a response, throwing an error if parsing the response fails.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n * @return {Promise<any>} Parsed response.\n */\nexport function parseAndThrowError(response, shouldParseResponse = true) {\n  if (!shouldParseResponse) {\n    throw response;\n  }\n  return parseJsonAndNormalizeError(response).then(error => {\n    const unknownError = {\n      code: 'unknown_error',\n      message: __('An unknown error occurred.')\n    };\n    throw error || unknownError;\n  });\n}\n//# sourceMappingURL=response.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { parseAndThrowError, parseResponseAndNormalizeError } from '../utils/response';\n\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request is for media upload.\n */\nfunction isMediaUploadRequest(options) {\n  const isCreateMethod = !!options.method && options.method === 'POST';\n  const isMediaEndpoint = !!options.path && options.path.indexOf('/wp/v2/media') !== -1 || !!options.url && options.url.indexOf('/wp/v2/media') !== -1;\n  return isMediaEndpoint && isCreateMethod;\n}\n\n/**\n * Middleware handling media upload failures and retries.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst mediaUploadMiddleware = (options, next) => {\n  if (!isMediaUploadRequest(options)) {\n    return next(options);\n  }\n  let retries = 0;\n  const maxRetries = 5;\n\n  /**\n   * @param {string} attachmentId\n   * @return {Promise<any>} Processed post response.\n   */\n  const postProcess = attachmentId => {\n    retries++;\n    return next({\n      path: `/wp/v2/media/${attachmentId}/post-process`,\n      method: 'POST',\n      data: {\n        action: 'create-image-subsizes'\n      },\n      parse: false\n    }).catch(() => {\n      if (retries < maxRetries) {\n        return postProcess(attachmentId);\n      }\n      next({\n        path: `/wp/v2/media/${attachmentId}?force=true`,\n        method: 'DELETE'\n      });\n      return Promise.reject();\n    });\n  };\n  return next({\n    ...options,\n    parse: false\n  }).catch(response => {\n    const attachmentId = response.headers.get('x-wp-upload-attachment-id');\n    if (response.status >= 500 && response.status < 600 && attachmentId) {\n      return postProcess(attachmentId).catch(() => {\n        if (options.parse !== false) {\n          return Promise.reject({\n            code: 'post_process',\n            message: __('Media upload failed. If this is a photo or a large image, please scale it down and try again.')\n          });\n        }\n        return Promise.reject(response);\n      });\n    }\n    return parseAndThrowError(response, options.parse);\n  }).then(response => parseResponseAndNormalizeError(response, options.parse));\n};\nexport default mediaUploadMiddleware;\n//# sourceMappingURL=media-upload.js.map","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport createNonceMiddleware from './middlewares/nonce';\nimport createRootURLMiddleware from './middlewares/root-url';\nimport createPreloadingMiddleware from './middlewares/preloading';\nimport fetchAllMiddleware from './middlewares/fetch-all-middleware';\nimport namespaceEndpointMiddleware from './middlewares/namespace-endpoint';\nimport httpV1Middleware from './middlewares/http-v1';\nimport userLocaleMiddleware from './middlewares/user-locale';\nimport mediaUploadMiddleware from './middlewares/media-upload';\nimport createThemePreviewMiddleware from './middlewares/theme-preview';\nimport { parseResponseAndNormalizeError, parseAndThrowError } from './utils/response';\n\n/**\n * Default set of header values which should be sent with every request unless\n * explicitly provided through apiFetch options.\n *\n * @type {Record<string, string>}\n */\nconst DEFAULT_HEADERS = {\n  // The backend uses the Accept header as a condition for considering an\n  // incoming request as a REST request.\n  //\n  // See: https://core.trac.wordpress.org/ticket/44534\n  Accept: 'application/json, */*;q=0.1'\n};\n\n/**\n * Default set of fetch option values which should be sent with every request\n * unless explicitly provided through apiFetch options.\n *\n * @type {Object}\n */\nconst DEFAULT_OPTIONS = {\n  credentials: 'include'\n};\n\n/** @typedef {import('./types').APIFetchMiddleware} APIFetchMiddleware */\n/** @typedef {import('./types').APIFetchOptions} APIFetchOptions */\n\n/**\n * @type {import('./types').APIFetchMiddleware[]}\n */\nconst middlewares = [userLocaleMiddleware, namespaceEndpointMiddleware, httpV1Middleware, fetchAllMiddleware];\n\n/**\n * Register a middleware\n *\n * @param {import('./types').APIFetchMiddleware} middleware\n */\nfunction registerMiddleware(middleware) {\n  middlewares.unshift(middleware);\n}\n\n/**\n * Checks the status of a response, throwing the Response as an error if\n * it is outside the 200 range.\n *\n * @param {Response} response\n * @return {Response} The response if the status is in the 200 range.\n */\nconst checkStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  throw response;\n};\n\n/** @typedef {(options: import('./types').APIFetchOptions) => Promise<any>} FetchHandler*/\n\n/**\n * @type {FetchHandler}\n */\nconst defaultFetchHandler = nextOptions => {\n  const {\n    url,\n    path,\n    data,\n    parse = true,\n    ...remainingOptions\n  } = nextOptions;\n  let {\n    body,\n    headers\n  } = nextOptions;\n\n  // Merge explicitly-provided headers with default values.\n  headers = {\n    ...DEFAULT_HEADERS,\n    ...headers\n  };\n\n  // The `data` property is a shorthand for sending a JSON body.\n  if (data) {\n    body = JSON.stringify(data);\n    headers['Content-Type'] = 'application/json';\n  }\n  const responsePromise = window.fetch(\n  // Fall back to explicitly passing `window.location` which is the behavior if `undefined` is passed.\n  url || path || window.location.href, {\n    ...DEFAULT_OPTIONS,\n    ...remainingOptions,\n    body,\n    headers\n  });\n  return responsePromise.then(value => Promise.resolve(value).then(checkStatus).catch(response => parseAndThrowError(response, parse)).then(response => parseResponseAndNormalizeError(response, parse)), err => {\n    // Re-throw AbortError for the users to handle it themselves.\n    if (err && err.name === 'AbortError') {\n      throw err;\n    }\n\n    // Otherwise, there is most likely no network connection.\n    // Unfortunately the message might depend on the browser.\n    throw {\n      code: 'fetch_error',\n      message: __('You are probably offline.')\n    };\n  });\n};\n\n/** @type {FetchHandler} */\nlet fetchHandler = defaultFetchHandler;\n\n/**\n * Defines a custom fetch handler for making the requests that will override\n * the default one using window.fetch\n *\n * @param {FetchHandler} newFetchHandler The new fetch handler\n */\nfunction setFetchHandler(newFetchHandler) {\n  fetchHandler = newFetchHandler;\n}\n\n/**\n * @template T\n * @param {import('./types').APIFetchOptions} options\n * @return {Promise<T>} A promise representing the request processed via the registered middlewares.\n */\nfunction apiFetch(options) {\n  // creates a nested function chain that calls all middlewares and finally the `fetchHandler`,\n  // converting `middlewares = [ m1, m2, m3 ]` into:\n  // ```\n  // opts1 => m1( opts1, opts2 => m2( opts2, opts3 => m3( opts3, fetchHandler ) ) );\n  // ```\n  const enhancedHandler = middlewares.reduceRight(( /** @type {FetchHandler} */next, middleware) => {\n    return workingOptions => middleware(workingOptions, next);\n  }, fetchHandler);\n  return enhancedHandler(options).catch(error => {\n    if (error.code !== 'rest_cookie_invalid_nonce') {\n      return Promise.reject(error);\n    }\n\n    // If the nonce is invalid, refresh it and try again.\n    return window\n    // @ts-ignore\n    .fetch(apiFetch.nonceEndpoint).then(checkStatus).then(data => data.text()).then(text => {\n      // @ts-ignore\n      apiFetch.nonceMiddleware.nonce = text;\n      return apiFetch(options);\n    });\n  });\n}\napiFetch.use = registerMiddleware;\napiFetch.setFetchHandler = setFetchHandler;\napiFetch.createNonceMiddleware = createNonceMiddleware;\napiFetch.createPreloadingMiddleware = createPreloadingMiddleware;\napiFetch.createRootURLMiddleware = createRootURLMiddleware;\napiFetch.fetchAllMiddleware = fetchAllMiddleware;\napiFetch.mediaUploadMiddleware = mediaUploadMiddleware;\napiFetch.createThemePreviewMiddleware = createThemePreviewMiddleware;\nexport default apiFetch;\n//# sourceMappingURL=index.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, hasQueryArg } from '@wordpress/url';\n\n/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst userLocaleMiddleware = (options, next) => {\n  if (typeof options.url === 'string' && !hasQueryArg(options.url, '_locale')) {\n    options.url = addQueryArgs(options.url, {\n      _locale: 'user'\n    });\n  }\n  if (typeof options.path === 'string' && !hasQueryArg(options.path, '_locale')) {\n    options.path = addQueryArgs(options.path, {\n      _locale: 'user'\n    });\n  }\n  return next(options);\n};\nexport default userLocaleMiddleware;\n//# sourceMappingURL=user-locale.js.map","/**\n * Internal dependencies\n */\nimport namespaceAndEndpointMiddleware from './namespace-endpoint';\n\n/**\n * @param {string} rootURL\n * @return {import('../types').APIFetchMiddleware} Root URL middleware.\n */\nconst createRootURLMiddleware = rootURL => (options, next) => {\n  return namespaceAndEndpointMiddleware(options, optionsWithPath => {\n    let url = optionsWithPath.url;\n    let path = optionsWithPath.path;\n    let apiRoot;\n    if (typeof path === 'string') {\n      apiRoot = rootURL;\n      if (-1 !== rootURL.indexOf('?')) {\n        path = path.replace('?', '&');\n      }\n      path = path.replace(/^\\//, '');\n\n      // API root may already include query parameter prefix if site is\n      // configured to use plain permalinks.\n      if ('string' === typeof apiRoot && -1 !== apiRoot.indexOf('?')) {\n        path = path.replace('?', '&');\n      }\n      url = apiRoot + path;\n    }\n    return next({\n      ...optionsWithPath,\n      url\n    });\n  });\n};\nexport default createRootURLMiddleware;\n//# sourceMappingURL=root-url.js.map","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, getQueryArg, removeQueryArgs } from '@wordpress/url';\n\n/**\n * This appends a `wp_theme_preview` parameter to the REST API request URL if\n * the admin URL contains a `theme` GET parameter.\n *\n * If the REST API request URL has contained the `wp_theme_preview` parameter as `''`,\n * then bypass this middleware.\n *\n * @param {Record<string, any>} themePath\n * @return {import('../types').APIFetchMiddleware} Preloading middleware.\n */\nconst createThemePreviewMiddleware = themePath => (options, next) => {\n  if (typeof options.url === 'string') {\n    const wpThemePreview = getQueryArg(options.url, 'wp_theme_preview');\n    if (wpThemePreview === undefined) {\n      options.url = addQueryArgs(options.url, {\n        wp_theme_preview: themePath\n      });\n    } else if (wpThemePreview === '') {\n      options.url = removeQueryArgs(options.url, 'wp_theme_preview');\n    }\n  }\n  if (typeof options.path === 'string') {\n    const wpThemePreview = getQueryArg(options.path, 'wp_theme_preview');\n    if (wpThemePreview === undefined) {\n      options.path = addQueryArgs(options.path, {\n        wp_theme_preview: themePath\n      });\n    } else if (wpThemePreview === '') {\n      options.path = removeQueryArgs(options.path, 'wp_theme_preview');\n    }\n  }\n  return next(options);\n};\nexport default createThemePreviewMiddleware;\n//# sourceMappingURL=theme-preview.js.map","import { controls as dataControls } from '@wordpress/data-controls';\n\nconst controls = {\n    ...dataControls,\n}\n\nexport default controls;\n","/**\n * WordPress dependencies\n */\nimport triggerFetch from '@wordpress/api-fetch';\nimport { controls as dataControls } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\n/**\n * Dispatches a control action for triggering an api fetch call.\n *\n * @param {Object} request Arguments for the fetch request.\n *\n * @example\n * ```js\n * import { apiFetch } from '@wordpress/data-controls';\n *\n * // Action generator using apiFetch\n * export function* myAction() {\n * \tconst path = '/v2/my-api/items';\n * \tconst items = yield apiFetch( { path } );\n * \t// do something with the items.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nexport function apiFetch(request) {\n  return {\n    type: 'API_FETCH',\n    request\n  };\n}\n\n/**\n * Control for resolving a selector in a registered data store.\n * Alias for the `resolveSelect` built-in control in the `@wordpress/data` package.\n *\n * @param storeNameOrDescriptor The store object or identifier.\n * @param selectorName          The selector name.\n * @param args                  Arguments passed without change to the `@wordpress/data` control.\n */\nexport function select(storeNameOrDescriptor, selectorName, ...args) {\n  deprecated('`select` control in `@wordpress/data-controls`', {\n    since: '5.7',\n    alternative: 'built-in `resolveSelect` control in `@wordpress/data`'\n  });\n  return dataControls.resolveSelect(storeNameOrDescriptor, selectorName, ...args);\n}\n\n/**\n * Control for calling a selector in a registered data store.\n * Alias for the `select` built-in control in the `@wordpress/data` package.\n *\n * @param storeNameOrDescriptor The store object or identifier.\n * @param selectorName          The selector name.\n * @param args                  Arguments passed without change to the `@wordpress/data` control.\n */\nexport function syncSelect(storeNameOrDescriptor, selectorName, ...args) {\n  deprecated('`syncSelect` control in `@wordpress/data-controls`', {\n    since: '5.7',\n    alternative: 'built-in `select` control in `@wordpress/data`'\n  });\n  return dataControls.select(storeNameOrDescriptor, selectorName, ...args);\n}\n\n/**\n * Control for dispatching an action in a registered data store.\n * Alias for the `dispatch` control in the `@wordpress/data` package.\n *\n * @param storeNameOrDescriptor The store object or identifier.\n * @param actionName            The action name.\n * @param args                  Arguments passed without change to the `@wordpress/data` control.\n */\nexport function dispatch(storeNameOrDescriptor, actionName, ...args) {\n  deprecated('`dispatch` control in `@wordpress/data-controls`', {\n    since: '5.7',\n    alternative: 'built-in `dispatch` control in `@wordpress/data`'\n  });\n  return dataControls.dispatch(storeNameOrDescriptor, actionName, ...args);\n}\n\n/**\n * Dispatches a control action for awaiting on a promise to be resolved.\n *\n * @param {Object} promise Promise to wait for.\n *\n * @example\n * ```js\n * import { __unstableAwaitPromise } from '@wordpress/data-controls';\n *\n * // Action generator using apiFetch\n * export function* myAction() {\n * \tconst promise = getItemsAsync();\n * \tconst items = yield __unstableAwaitPromise( promise );\n * \t// do something with the items.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nexport const __unstableAwaitPromise = function (promise) {\n  return {\n    type: 'AWAIT_PROMISE',\n    promise\n  };\n};\n\n/**\n * The default export is what you use to register the controls with your custom\n * store.\n *\n * @example\n * ```js\n * // WordPress dependencies\n * import { controls } from '@wordpress/data-controls';\n * import { registerStore } from '@wordpress/data';\n *\n * // Internal dependencies\n * import reducer from './reducer';\n * import * as selectors from './selectors';\n * import * as actions from './actions';\n * import * as resolvers from './resolvers';\n *\n * registerStore( 'my-custom-store', {\n * reducer,\n * controls,\n * actions,\n * selectors,\n * resolvers,\n * } );\n * ```\n * @return {Object} An object for registering the default controls with the\n * store.\n */\nexport const controls = {\n  AWAIT_PROMISE: ({\n    promise\n  }) => promise,\n  API_FETCH({\n    request\n  }) {\n    return triggerFetch(request);\n  }\n};\n//# sourceMappingURL=index.js.map","/*\n * WordPress dependencies\n */\nimport { register, createReduxStore } from '@wordpress/data';\n\n/*\n * Internal dependencies\n */\nimport { STORE_NAME } from './name';\nimport reducer, { DEFAULT_STATE } from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { default as controls} from './controls';\n\nexport const store = createReduxStore(\n    STORE_NAME,\n    {\n        reducer,\n        actions,\n        selectors,\n        controls,\n    }\n);\n\nregister(store);\n\nexport default store;\n","export const STORE_NAME = 'publishpress-future/manual-post-trigger';\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.components;","const __WEBPACK_NAMESPACE_OBJECT__ = wp.element;","import { useSelect, useDispatch } from '@wordpress/data';\nimport { CheckboxControl } from '@wordpress/components';\nimport { store } from '../store';\nimport { useEffect } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\n\nexport function Fieldset({context, postId, apiUrl, nonce, onChange}) {\n    const {\n        workflowsWithManualTrigger,\n        workflowsEnabledForPost\n    } = useSelect((select) => {\n        return {\n            workflowsWithManualTrigger: select(store).getWorkflowsWithManualTrigger(),\n            workflowsEnabledForPost: select(store).getWorkflowsEnabledForPost(),\n        };\n    });\n\n    const {\n        updateWorkflowsEnabledForPost,\n        setWorkflowsWithManualTrigger,\n        setWorkflowsEnabledForPost\n    } = useDispatch(store);\n\n    useEffect(() => {\n        setWorkflowsWithManualTrigger([]);\n        setWorkflowsEnabledForPost([]);\n\n        apiFetch({\n            path: `${apiUrl}/posts/workflow-settings/${postId}`,\n            headers: {\n                'X-WP-Nonce': nonce,\n            },\n        }).then((response) => {\n            setWorkflowsWithManualTrigger(response.workflowsWithManualTrigger);\n            setWorkflowsEnabledForPost(response.manuallyEnabledWorkflows);\n        });\n    }, [postId]);\n\n    const handleChange = (workflowId, checked) => {\n        updateWorkflowsEnabledForPost(workflowId, checked);\n\n        if (onChange) {\n            onChange(workflowId, checked);\n        }\n    }\n\n    const controls = Object.keys(workflowsWithManualTrigger).map((key) => {\n        const workflow = workflowsWithManualTrigger[key];\n        const checked = workflowsEnabledForPost.includes(workflow.workflowId);\n\n        return (\n            <CheckboxControl\n                key={'manual-workflow-trigger-' + key}\n                label={workflow.label}\n                name='future_workflow_manual_trigger[]'\n                checked={checked}\n                value={workflow.workflowId}\n                onChange={(value) => handleChange(workflow.workflowId, value)}\n            />\n        );\n    });\n\n    return (\n        <>\n            {controls.length > 0 && (\n                <div id={`post-expirator-${context}-wrapper`}>\n                    <input type='hidden' name='future_workflow_view' value={context} />\n                    {controls}\n                </div>\n            )}\n        </>\n    );\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.plugins;","const __WEBPACK_NAMESPACE_OBJECT__ = React;","import { useDispatch, useSelect } from '@wordpress/data';\nimport { store } from '../store';\nimport { Fieldset } from '../fieldset';\nimport { __ } from '@wordpress/i18n';\n\nimport { registerPlugin } from '@wordpress/plugins';\nimport { useEffect } from 'react';\n\nfunction BlockEditorWorkflowManualTrigger() {\n    const { PluginDocumentSettingPanel } = wp.editPost;\n\n    const {\n        workflowsEnabledForPost\n    } = useSelect((select) => {\n        return {\n            workflowsEnabledForPost: select(store).getWorkflowsEnabledForPost(),\n        };\n    });\n\n    const { editPost } = useDispatch('core/editor');\n\n    useEffect(() => {\n        editPostAttribute(workflowsEnabledForPost);\n    }, [workflowsEnabledForPost]);\n\n    const editPostAttribute = (enabledWorkflows) => {\n        const attribute = {\n            publishpress_future_workflow_manual_trigger: {\n                enabledWorkflows: [],\n            }\n        };\n\n        attribute.publishpress_future_workflow_manual_trigger = {enabledWorkflows};\n\n        editPost(attribute);\n    }\n\n    // Load the workflow settings for the post\n    const apiUrl = window.futureWorkflowManualSelection.apiUrl;\n    const nonce = window.futureWorkflowManualSelection.nonce;\n    const postId = window.futureWorkflowManualSelection.postId;\n\n    return (\n        <PluginDocumentSettingPanel\n            name={'publishpress-future-workflow-manual-trigger'}\n            title={__('Action Workflows', 'post-expirator')}\n            initialOpen={true}\n            className={'future-workflow-manual-trigger'}\n        >\n            <Fieldset\n                context='block-editor'\n                postId={postId}\n                apiUrl={apiUrl}\n                nonce={nonce}\n            />\n        </PluginDocumentSettingPanel>\n    );\n}\n\nregisterPlugin('publishpress-future-workflow-manual-trigger', {\n    render: BlockEditorWorkflowManualTrigger\n});\n"],"names":["re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key","key_access","index_access","sign","sprintf","parse_tree","argv","arg","i","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","length","output","keys","undefined","Error","param_no","test","type","Function","isNaN","TypeError","parseInt","toString","String","fromCharCode","JSON","stringify","width","precision","parseFloat","toExponential","toFixed","Number","toPrecision","substring","Object","prototype","call","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","repeat","align","sprintf_format","fmt","sprintf_cache","match","_fmt","arg_names","exec","push","SyntaxError","field_list","replacement_field","field_match","sprintf_parse","arguments","vsprintf","apply","concat","create","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","r","Symbol","toStringTag","value","wp","data","DEFAULT_STATE","workflowsWithManualTrigger","workflowsEnabledForPost","options","PRECEDENCE","OPENERS","TERMINATORS","PATTERN","getWorkflowsWithManualTrigger","state","getWorkflowsEnabledForPost","setWorkflowsWithManualTrigger","workflows","payload","setWorkflowsEnabledForPost","updateWorkflowsEnabledForPost","workflowId","enabled","console","error","OPERATORS","a","b","c","DEFAULT_OPTIONS","contextDelimiter","onMissingKey","Tannin","this","pluralForms","getPluralForm","domain","n","config","plural","pf","evaluate","plural_forms","parts","part","split","trim","indexOf","substr","getPluralExpression","expression","terms","operator","term","element","stack","index","pop","reverse","postfix","variables","j","args","getOperatorResult","Array","earlyReturn","compile","dcnpgettext","context","singular","entry","DEFAULT_LOCALE_DATA","I18N_HOOK_REGEXP","i18n","initialData","initialDomain","hooks","tannin","listeners","Set","notifyListeners","forEach","listener","doSetLocaleData","setLocaleData","single","getFilterDomain","_x","translation","applyFilters","onHookAddedOrRemoved","hookName","addAction","getLocaleData","addLocaleData","resetLocaleData","subscribe","callback","add","delete","__","_n","_nx","isRTL","hasTranslation","result","createI18n","defaultHooks","bind","next","namespaceTrimmed","endpointTrimmed","path","namespace","endpoint","url","prepareResponse","responseData","parse","Promise","resolve","body","Response","status","statusText","headers","modifyQuery","queryArgs","addQueryArgs","parseResponse","response","reject","getNextPageUrl","linkHeader","parseLinkHeader","async","pathIsUnbounded","urlIsUnbounded","requestContainsUnboundedQuery","per_page","results","isArray","nextPage","mergedResults","nextResponse","nextResults","OVERRIDE_METHODS","DEFAULT_METHOD","parseResponseAndNormalizeError","shouldParseResponse","catch","res","parseAndThrowError","invalidJsonError","code","message","parseJsonAndNormalizeError","then","unknownError","DEFAULT_HEADERS","Accept","credentials","middlewares","hasQueryArg","_locale","method","has","checkStatus","fetchHandler","nextOptions","remainingOptions","fetch","location","href","err","name","apiFetch","reduceRight","middleware","workingOptions","enhancedHandler","nonceEndpoint","nonceMiddleware","nonce","use","unshift","setFetchHandler","newFetchHandler","createNonceMiddleware","headerName","createPreloadingMiddleware","preloadedData","cache","fromEntries","entries","map","normalizePath","rawPath","rest_route","pathFromQuery","getQueryArgs","cacheData","createRootURLMiddleware","rootURL","optionsWithPath","apiRoot","fetchAllMiddleware","mediaUploadMiddleware","isCreateMethod","isMediaUploadRequest","retries","postProcess","attachmentId","action","createThemePreviewMiddleware","themePath","wpThemePreview","getQueryArg","wp_theme_preview","removeQueryArgs","_objectSpread","AWAIT_PROMISE","promise","API_FETCH","request","store","createReduxStore","reducer","_toConsumableArray","_action$payload","newList","includes","splice","actions","selectors","controls","register","components","Fieldset","_ref","postId","apiUrl","onChange","_useSelect","useSelect","select","_useDispatch","useDispatch","useEffect","manuallyEnabledWorkflows","workflow","checked","React","createElement","CheckboxControl","label","handleChange","Fragment","id","plugins","registerPlugin","render","PluginDocumentSettingPanel","editPost","editPostAttribute","enabledWorkflows","attribute","publishpress_future_workflow_manual_trigger","futureWorkflowManualSelection","title","initialOpen","className"],"sourceRoot":""}