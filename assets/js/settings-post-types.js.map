{"version":3,"file":"settings-post-types.js","mappings":"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","sources":["webpack://post-expirator/./assets/jsx/components/css/dateOffsetPreview.css","webpack://post-expirator/./node_modules/css-loader/dist/runtime/api.js","webpack://post-expirator/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://post-expirator/./node_modules/react-dom/client.js","webpack://post-expirator/./assets/jsx/components/css/dateOffsetPreview.css?541a","webpack://post-expirator/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://post-expirator/external var \"ReactDOM\"","webpack://post-expirator/webpack/bootstrap","webpack://post-expirator/webpack/runtime/compat get default export","webpack://post-expirator/webpack/runtime/define property getters","webpack://post-expirator/webpack/runtime/hasOwnProperty shorthand","webpack://post-expirator/webpack/runtime/make namespace object","webpack://post-expirator/webpack/runtime/nonce","webpack://post-expirator/./assets/jsx/components/ButtonsPanel.jsx","webpack://post-expirator/external var \"wp.components\"","webpack://post-expirator/external var \"wp.element\"","webpack://post-expirator/external var \"wp.plugins\"","webpack://post-expirator/./assets/jsx/components/FutureActionPanelTop.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanel.jsx","webpack://post-expirator/external var \"wp.data\"","webpack://post-expirator/external var \"wp.url\"","webpack://post-expirator/external var \"wp.hooks\"","webpack://post-expirator/external var \"wp\"","webpack://post-expirator/./assets/jsx/components/DateOffsetPreview.jsx","webpack://post-expirator/./assets/jsx/components/PostTypeSettingsPanel.jsx","webpack://post-expirator/./assets/jsx/components/PostTypesSettingsPanels.jsx","webpack://post-expirator/./assets/jsx/components/SettingRow.jsx","webpack://post-expirator/./assets/jsx/components/SettingsForm.jsx","webpack://post-expirator/./assets/jsx/components/SettingsSection.jsx","webpack://post-expirator/./assets/jsx/components/SettingsTable.jsx","webpack://post-expirator/./assets/jsx/components/SubmitButton.jsx","webpack://post-expirator/./assets/jsx/components/CheckboxControl.jsx","webpack://post-expirator/./assets/jsx/components/SelectControl.jsx","webpack://post-expirator/./assets/jsx/components/TextControl.jsx","webpack://post-expirator/./assets/jsx/components/TokensControl.jsx","webpack://post-expirator/./assets/jsx/components/NonceControl.jsx","webpack://post-expirator/./assets/jsx/components/Spinner.jsx","webpack://post-expirator/external var \"publishpressFutureSettingsConfig\"","webpack://post-expirator/./assets/jsx/settings-post-types.jsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.publishpress-future-date-preview .publishpress-future-date-preview-value {\n    font-family: monospace;\n    background-color: #e7e7e7;\n    padding: 2px 4px;\n}\n\n.publishpress-future-date-preview.compact .publishpress-future-date-preview-label {\n    display: block;\n}\n\n.publishpress-future-date-preview.compact {\n    margin-bottom: 8px;\n}\n\n.publishpress-future-date-preview.compact h4 {\n    font-size: 11px;\n    font-weight: 500;\n    line-height: 1.4;\n    text-transform: uppercase;\n    display: inline-block;\n    margin-bottom: calc(8px);\n    padding: 0px;\n    flex-shrink: 0;\n    margin-right: 12px;\n    max-width: 75%;\n    margin-top: 0;\n}\n\n.publishpress-future-notice.publishpress-future-notice-error {\n    color: #dc3232;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./assets/jsx/components/css/dateOffsetPreview.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,yBAAyB;IACzB,qBAAqB;IACrB,wBAAwB;IACxB,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB\",\"sourcesContent\":[\".publishpress-future-date-preview .publishpress-future-date-preview-value {\\n    font-family: monospace;\\n    background-color: #e7e7e7;\\n    padding: 2px 4px;\\n}\\n\\n.publishpress-future-date-preview.compact .publishpress-future-date-preview-label {\\n    display: block;\\n}\\n\\n.publishpress-future-date-preview.compact {\\n    margin-bottom: 8px;\\n}\\n\\n.publishpress-future-date-preview.compact h4 {\\n    font-size: 11px;\\n    font-weight: 500;\\n    line-height: 1.4;\\n    text-transform: uppercase;\\n    display: inline-block;\\n    margin-bottom: calc(8px);\\n    padding: 0px;\\n    flex-shrink: 0;\\n    margin-right: 12px;\\n    max-width: 75%;\\n    margin-top: 0;\\n}\\n\\n.publishpress-future-notice.publishpress-future-notice-error {\\n    color: #dc3232;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js!./dateOffsetPreview.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js!./dateOffsetPreview.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","module.exports = ReactDOM;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","/*\n * Copyright (c) 2024, Ramble Ventures\n */\n\nexport const ButtonsPanel = function (props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.components;","const __WEBPACK_NAMESPACE_OBJECT__ = wp.element;","const __WEBPACK_NAMESPACE_OBJECT__ = wp.plugins;","import { Slot, Fill } from '@wordpress/components';\n\nexport const FutureActionPanelTop = ({ children }) => (\n    <Fill name=\"FutureActionPanelTop\">\n        {children}\n    </Fill>\n);\n\nconst FutureActionPanelTopSlot = (props) => (\n    <Slot name=\"FutureActionPanelTop\" {...props} />\n);\n\nFutureActionPanelTop.Slot = FutureActionPanelTopSlot;\n\nexport default FutureActionPanelTop;\n","import { compact } from '../utils';\nimport { ToggleCalendarDatePicker } from './ToggleCalendarDatePicker';\nimport { PluginArea } from '@wordpress/plugins';\nimport { Fill, Slot, SlotFillProvider } from '@wordpress/components';\nimport { FutureActionPanelAfterActionField } from './FutureActionPanelAfterActionField';\nimport { FutureActionPanelTop } from './FutureActionPanelTop';\n\nconst { PanelRow, CheckboxControl, SelectControl, FormTokenField, Spinner, BaseControl } = wp.components;\nconst { Fragment, useEffect, useState } = wp.element;\nconst { decodeEntities } = wp.htmlEntities;\nconst { addQueryArgs } = wp.url;\nconst {\n    useSelect,\n    useDispatch\n} = wp.data;\nconst { apiFetch } = wp;\n\nexport const FutureActionPanel = (props) => {\n    const {\n        action,\n        date,\n        enabled,\n        terms,\n        taxonomy,\n        taxonomyName,\n        termsListByName,\n        termsListById,\n        isFetchingTerms,\n        calendarIsVisible,\n        hasValidData,\n        newStatus,\n    } = useSelect((select) => {\n        return {\n            action: select(props.storeName).getAction(),\n            date: select(props.storeName).getDate(),\n            enabled: select(props.storeName).getEnabled(),\n            terms: select(props.storeName).getTerms(),\n            taxonomy: select(props.storeName).getTaxonomy(),\n            taxonomyName: select(props.storeName).getTaxonomyName(),\n            termsListByName: select(props.storeName).getTermsListByName(),\n            termsListById: select(props.storeName).getTermsListById(),\n            isFetchingTerms: select(props.storeName).getIsFetchingTerms(),\n            calendarIsVisible: select(props.storeName).getCalendarIsVisible(),\n            hasValidData: select(props.storeName).getHasValidData(),\n            newStatus: select(props.storeName).getNewStatus(),\n        };\n    });\n\n    const [validationError, setValidationError] = useState('');\n\n    const {\n        setAction,\n        setDate,\n        setEnabled,\n        setTerms,\n        setTaxonomy,\n        setTermsListByName,\n        setTermsListById,\n        setTaxonomyName,\n        setIsFetchingTerms,\n        setCalendarIsVisible,\n        setHasValidData,\n        setNewStatus\n    } = useDispatch(props.storeName);\n\n    const mapTermsListById = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            return termsListById[term];\n        });\n    }\n\n    const insertTerm = (term) => {\n        termsListByName[term] = { id: term, count: 0, description: \"\", link: \"\", name: term, slug: term, taxonomy: taxonomy };\n        termsListById[term] = term;\n        setTermsListByName(termsListByName);\n        setTermsListById(termsListById);\n        setTerms([...terms, term]);\n\n    }\n\n    const mapTermsListByName = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            if (termsListByName[term]) {\n                return termsListByName[term].id;\n            }\n\n            insertTerm(term);\n\n            return term;\n        });\n    }\n\n    const callOnChangeData = (attribute, value) => {\n        if (typeof props.onChangeData === 'function') {\n            props.onChangeData(attribute, value);\n        }\n    }\n\n    const handleEnabledChange = (isChecked) => {\n        setEnabled(isChecked);\n\n        if (isChecked) {\n            setAction(props.action);\n            setDate(props.date);\n            setNewStatus(props.newStatus);\n            setTerms(props.terms);\n            setTaxonomy(props.taxonomy);\n\n            fetchTerms();\n        }\n\n        callOnChangeData('enabled', isChecked);\n    }\n\n    const handleActionChange = (value) => {\n        setAction(value);\n\n        callOnChangeData('action', value);\n    }\n\n    const handleNewStatusChange = (value) => {\n        setNewStatus(value);\n\n        callOnChangeData('newStatus', value);\n    }\n\n    const handleDateChange = (value) => {\n        setDate(value);\n\n        callOnChangeData('date', value);\n    }\n\n    const handleTermsChange = (value) => {\n        value = mapTermsListByName(value);\n\n        setTerms(value);\n\n        callOnChangeData('terms', value);\n    }\n\n    const fetchTerms = () => {\n        let termsListByName = {};\n        let termsListById = {};\n\n        if (!taxonomy) {\n            return;\n        }\n\n        setIsFetchingTerms(true);\n\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${taxonomy}`),\n        }).then((result) => {\n            result.terms.forEach(term => {\n                termsListByName[decodeEntities(term.name)] = term;\n                termsListById[term.id] = decodeEntities(term.name);\n            });\n\n            setTermsListByName(termsListByName);\n            setTermsListById(termsListById);\n            setTaxonomyName(decodeEntities(result.taxonomyName));\n            setIsFetchingTerms(false);\n        });\n    }\n\n    const storeCalendarIsVisibleOnStorage = (value) => {\n        localStorage.setItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context, value ? '1' : '0');\n    }\n\n    const getCalendarIsVisibleFromStorage = () => {\n        return localStorage.getItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context);\n    }\n\n    useEffect(() => {\n        if (props.autoEnableAndHideCheckbox) {\n            setEnabled(true);\n        } else {\n            setEnabled(props.enabled);\n        }\n\n        setAction(props.action);\n        setNewStatus(props.newStatus);\n        setDate(props.date);\n        setTerms(props.terms);\n        setTaxonomy(props.taxonomy);\n\n        if (getCalendarIsVisibleFromStorage() === null) {\n            setCalendarIsVisible(props.calendarIsVisible);\n        } else {\n            setCalendarIsVisible(getCalendarIsVisibleFromStorage() === '1' && ! props.hideCalendarByDefault);\n        }\n\n        // We need to get the value directly from the props because the value from the store is not updated yet\n        if (props.enabled) {\n            if (props.isCleanNewPost) {\n                // Force populate the default values\n                handleEnabledChange(true);\n            }\n\n            fetchTerms();\n        }\n    }, []);\n\n    useEffect(() => {\n        storeCalendarIsVisibleOnStorage(calendarIsVisible);\n    }, [calendarIsVisible]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid();\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid();\n        }\n    }, [hasValidData]);\n\n    let selectedTerms = [];\n    if (terms && terms.length > 0 && termsListById) {\n        selectedTerms = compact(mapTermsListById(terms));\n\n        if (typeof selectedTerms === 'string') {\n            selectedTerms = [];\n        }\n    }\n\n    let termsListByNameKeys = [];\n    if (typeof termsListByName === 'object' && termsListByName !== null) {\n        termsListByNameKeys = Object.keys(termsListByName);\n    }\n\n    const panelClass = calendarIsVisible ? 'future-action-panel' : 'future-action-panel hidden-calendar';\n    const contentPanelClass = calendarIsVisible ? 'future-action-panel-content' : 'future-action-panel-content hidden-calendar';\n    const datePanelClass = calendarIsVisible ? 'future-action-date-panel' : 'future-action-date-panel hidden-calendar';\n\n    let is24hour;\n    if (props.timeFormat === 'inherited') {\n        is24hour = !props.is12Hour;\n    } else {\n        is24hour = props.timeFormat === '24h';\n    }\n\n    const replaceCurlyBracketsWithLink = (string, href, target) => {\n        const parts = string.split('{');\n        const result = [];\n\n        result.push(parts.shift());\n\n        for (const part of parts) {\n            const [before, after] = part.split('}');\n\n            result.push(\n                <a href={href} target={target} key={href}>{before}</a>\n            );\n\n            result.push(after);\n        }\n\n        return result;\n    };\n\n    // Remove items from actions list if related to taxonomies and there is no taxonmoy for the post type\n    let actionsSelectOptions = props.actionsSelectOptions;\n    if (!props.taxonomy) {\n        actionsSelectOptions = props.actionsSelectOptions.filter((item) => {\n            return ['category', 'category-add', 'category-remove', 'category-remove-all'].indexOf(item.value) === -1;\n        });\n    }\n\n    const HelpText = replaceCurlyBracketsWithLink(props.strings.timezoneSettingsHelp, '/wp-admin/options-general.php#timezone_string', '_blank');\n    const displayTaxonomyField = String(action).includes('category') && action !== 'category-remove-all';\n\n    let termsFieldLabel = taxonomyName;\n    switch (action) {\n        case 'category':\n            termsFieldLabel = props.strings.newTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-remove':\n            termsFieldLabel = props.strings.removeTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-add':\n            termsFieldLabel = props.strings.addTerms.replace('%s', taxonomyName);\n            break;\n    }\n\n    const validateData = () => {\n        let valid = true;\n\n        if (!enabled) {\n            setValidationError('');\n            return true;\n        }\n\n        if (!action) {\n            setValidationError(props.strings.errorActionRequired);\n            valid = false;\n        }\n\n        if (!date) {\n            setValidationError(props.strings.errorDateRequired);\n            valid = false;\n        }\n\n        // Check if the date is in the past\n        if (date && new Date(date) < new Date()) {\n            setValidationError(props.strings.errorDateInPast);\n            valid = false;\n        }\n\n        const isTermRequired = ['category', 'category-add', 'category-remove'].includes(action);\n        const noTermIsSelected = terms.length === 0 || (terms.length === 1 && (terms[0] === '' || terms[0] === '0'));\n\n        if (isTermRequired && noTermIsSelected) {\n            setValidationError(props.strings.errorTermsRequired);\n            valid = false;\n        }\n\n        if (valid) {\n            setValidationError('');\n        }\n\n        return valid;\n    }\n\n    useEffect(() => {\n        if (!enabled) {\n            setHasValidData(true);\n            setValidationError('');\n\n            return;\n        }\n\n        setHasValidData(validateData());\n    }, [action, date, enabled, terms, taxonomy]);\n\n    // This adds a 'cancel' class to the input when the user clicks on the\n    // field to prevent the form from being submitted. This is a workaround\n    // for the issue on the quick-edit form where the form is submitted when\n    // the user presses the 'Enter' key trying to add a term to the field.\n    const forceIgnoreAutoSubmitOnEnter = (e) => {\n        jQuery(e.target).addClass('cancel');\n    }\n\n    return (\n        <SlotFillProvider>\n            <div className={panelClass}>\n                {props.autoEnableAndHideCheckbox && (\n                    <input type=\"hidden\" name={'future_action_enabled'} value={1} />\n                )}\n\n                <FutureActionPanelTop.Slot fillProps={{ storeName: props.storeName }} />\n\n                {!props.autoEnableAndHideCheckbox && (\n                    <PanelRow>\n                        <CheckboxControl\n                            label={props.strings.enablePostExpiration}\n                            checked={enabled || false}\n                            onChange={handleEnabledChange}\n                            className=\"future-action-enable-checkbox\"\n                        />\n                    </PanelRow>\n                )}\n\n                {enabled && (\n                    <Fragment>\n                        <PanelRow className={contentPanelClass + ' future-action-full-width'}>\n                            <SelectControl\n                                label={props.strings.action}\n                                value={action}\n                                options={actionsSelectOptions}\n                                onChange={handleActionChange}\n                                className=\"future-action-select-action\"\n                            />\n                        </PanelRow>\n\n                        <FutureActionPanelAfterActionField.Slot fillProps={{ storeName: props.storeName }} />\n\n                        {action === 'change-status' &&\n                            <PanelRow className=\"new-status\">\n                                <SelectControl\n                                    label={props.strings.newStatus}\n                                    options={props.statusesSelectOptions}\n                                    value={newStatus}\n                                    onChange={handleNewStatusChange}\n                                    className=\"future-action-select-new-status\"\n                                />\n                            </PanelRow>\n                        }\n\n                        {\n                            displayTaxonomyField && (\n                                isFetchingTerms && (\n                                    <PanelRow>\n                                        <BaseControl label={taxonomyName}>\n                                            {`${props.strings.loading} (${taxonomyName})`}\n                                            <Spinner />\n                                        </BaseControl>\n                                    </PanelRow>\n                                )\n                                || (!taxonomy && (\n                                    <PanelRow>\n                                        <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                            <div>\n                                                <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTaxonomyFound}\n                                            </div>\n                                        </BaseControl>\n                                    </PanelRow>\n                                )\n                                    || (\n                                        termsListByNameKeys.length === 0 && (\n                                            <PanelRow>\n                                                <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                                    <div>\n                                                        <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTermsFound}\n                                                    </div>\n                                                </BaseControl>\n                                            </PanelRow>\n                                        )\n                                        || (\n                                            <PanelRow className=\"future-action-full-width\">\n                                                <BaseControl>\n                                                    <FormTokenField\n                                                        label={termsFieldLabel}\n                                                        value={selectedTerms}\n                                                        suggestions={termsListByNameKeys}\n                                                        onChange={handleTermsChange}\n                                                        placeholder={props.strings.addTermsPlaceholder}\n                                                        className=\"future-action-terms\"\n                                                        maxSuggestions={1000}\n                                                        onFocus={forceIgnoreAutoSubmitOnEnter}\n                                                        __experimentalExpandOnFocus={true}\n                                                        __experimentalAutoSelectFirstMatch={true}\n                                                    />\n                                                </BaseControl>\n                                            </PanelRow>\n                                        )\n                                    )\n                                )\n                            )\n                        }\n\n                        <PanelRow className={datePanelClass}>\n                            <ToggleCalendarDatePicker\n                                currentDate={date}\n                                onChangeDate={handleDateChange}\n                                onToggleCalendar={() => setCalendarIsVisible(!calendarIsVisible)}\n                                is12Hour={!is24hour}\n                                startOfWeek={props.startOfWeek}\n                                isExpanded={calendarIsVisible}\n                                strings={props.strings}\n                            />\n                        </PanelRow>\n\n                        <PanelRow>\n                            <div className=\"future-action-help-text\">\n                                <hr />\n\n                                <span className=\"dashicons dashicons-info\"></span> {HelpText}\n                            </div>\n                        </PanelRow>\n\n                        {!hasValidData && (\n                            <PanelRow>\n                                <BaseControl className=\"notice notice-error\">\n                                    <div>{validationError}</div>\n                                </BaseControl>\n                            </PanelRow>\n                        )}\n                    </Fragment>\n                )}\n            </div>\n            <PluginArea scope='publishpress-future' />\n        </SlotFillProvider>\n    );\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.data;","const __WEBPACK_NAMESPACE_OBJECT__ = wp.url;","const __WEBPACK_NAMESPACE_OBJECT__ = wp.hooks;","const __WEBPACK_NAMESPACE_OBJECT__ = wp;","import {\n    useState,\n    useEffect,\n    useRef,\n    Fragment\n} from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { apiFetch } from '&wp';\n\nrequire('./css/dateOffsetPreview.css');\n\nexport const DateOffsetPreview = ({\n    offset,\n    label,\n    labelDatePreview,\n    labelOffsetPreview,\n    setValidationErrorCallback,\n    setHasPendingValidationCallback,\n    setHasValidDataCallback,\n    compactView = false\n}) => {\n    const [offsetPreview, setOffsetPreview] = useState('');\n    const [currentTime, setCurrentTime] = useState();\n\n    const apiRequestControllerRef = useRef(new AbortController());\n\n    const validateDateOffset = () => {\n        if (offset) {\n            const controller = apiRequestControllerRef.current;\n\n            if (controller) {\n                controller.abort();\n            }\n\n            apiRequestControllerRef.current = new AbortController();\n            const { signal } = apiRequestControllerRef.current;\n\n            setHasPendingValidationCallback(true);\n\n            apiFetch({\n                path: addQueryArgs(`publishpress-future/v1/settings/validate-expire-offset`),\n                method: 'POST',\n                data: {\n                    offset\n                },\n                signal,\n            }).then((result) => {\n                setHasPendingValidationCallback(false);\n\n                setHasValidDataCallback(result.isValid);\n                setValidationErrorCallback(result.message);\n\n                if (result.isValid) {\n                    setOffsetPreview(result.preview);\n                    setCurrentTime(result.currentTime);\n                } else {\n                    setOffsetPreview('');\n                }\n            }).catch((error) => {\n                if (error.name === 'AbortError') {\n                    return;\n                }\n\n                setHasPendingValidationCallback(false);\n                setHasValidDataCallback(false);\n                setValidationErrorCallback(error.message);\n                setOffsetPreview('');\n            });\n        }\n    }\n\n    useEffect(() => {\n        validateDateOffset();\n    }, [offset]);\n\n    const compactClass = compactView ? ' compact' : '';\n\n    return (\n        <Fragment>\n            { offset && (\n                <div className={'publishpress-future-date-preview' + compactClass}>\n                    <h4>{ label }</h4>\n                    <div className=\"publishpress-future-date-preview-body\">\n                        <div>\n                            <span className=\"publishpress-future-date-preview-label\">{ labelDatePreview }: </span>\n                            <span className=\"publishpress-future-date-preview-value\">{currentTime}</span>\n                        </div>\n                        <div>\n                            <span className=\"publishpress-future-date-preview-label\">{ labelOffsetPreview }: </span>\n                            <span className=\"publishpress-future-date-preview-value\">{offsetPreview}</span>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default DateOffsetPreview;\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\n\nimport {\n    SettingRow,\n    SettingsTable,\n    SelectControl,\n    TextControl,\n    TokensControl,\n    CheckboxControl\n} from './';\nimport { useEffect, useState } from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { applyFilters } from '@wordpress/hooks';\nimport { apiFetch } from '&wp';\nimport DateOffsetPreview from './DateOffsetPreview';\n\nconst { PanelRow } = wp.components;\n\nexport const PostTypeSettingsPanel = function (props) {\n    const originalExpireTypeList = props.expireTypeList[props.postType];\n\n    const [postTypeTaxonomy, setPostTypeTaxonomy] = useState(props.settings.taxonomy);\n    const [termOptions, setTermOptions] = useState([]);\n    const [termsSelectIsLoading, setTermsSelectIsLoading] = useState(false);\n    const [selectedTerms, setSelectedTerms] = useState([]);\n    const [settingHowToExpire, setSettingHowToExpire] = useState(props.settings.howToExpire);\n    const [isActive, setIsActive] = useState(props.settings.active);\n    const [expireOffset, setExpireOffset] = useState(props.settings.defaultExpireOffset);\n    const [emailNotification, setEmailNotification] = useState(props.settings.emailNotification);\n    const [isAutoEnabled, setIsAutoEnabled] = useState(props.settings.autoEnabled);\n    const [hasValidData, setHasValidData] = useState(true);\n    const [validationError, setValidationError] = useState('');\n    const [taxonomyLabel, setTaxonomyLabel] = useState('');\n    const [howToExpireList, setHowToExpireList] = useState(originalExpireTypeList);\n    const [newStatus, setNewStatus] = useState(props.settings.newStatus);\n    const [hasPendingValidation, setHasPendingValidation] = useState(false);\n\n    const offset = expireOffset ? expireOffset : props.settings.globalDefaultExpireOffset;\n\n    const taxonomyRelatedActions = [\n        'category',\n        'category-add',\n        'category-remove',\n        'category-remove-all'\n    ];\n\n    const onChangeTaxonomy = function (value) {\n        setPostTypeTaxonomy(value);\n    };\n\n    const onChangeTerms = (value) => {\n        setSelectedTerms(value);\n    };\n\n    const onChangeHowToExpire = (value) => {\n        setSettingHowToExpire(value);\n    }\n\n    const onChangeActive = (value) => {\n        setIsActive(value);\n    }\n\n    const onChangeExpireOffset = (value) => {\n        setExpireOffset(value);\n    }\n\n    const onChangeEmailNotification = (value) => {\n        setEmailNotification(value);\n    }\n\n    const onChangeAutoEnabled = (value) => {\n        setIsAutoEnabled(value);\n    }\n\n    useEffect(() => {\n        // Remove items from expireTypeList if related to taxonomies and there is no taxonmoy for the post type\n        if (props.taxonomiesList.length === 0) {\n            let newExpireTypeList = [];\n\n            newExpireTypeList = howToExpireList.filter((item) => {\n                return taxonomyRelatedActions.indexOf(item.value) === -1;\n            });\n\n            setHowToExpireList(newExpireTypeList);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!postTypeTaxonomy || !props.taxonomiesList) {\n            return;\n        }\n\n        setTermsSelectIsLoading(true);\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${postTypeTaxonomy}`),\n        }).then((result) => {\n            let options = [];\n\n            let settingsTermsOptions = null;\n            let option;\n\n            result.terms.forEach(term => {\n                option = { value: term.id, label: term.name };\n                options.push(option);\n\n                if (postTypeTaxonomy === props.settings.taxonomy && props.settings.terms.includes(term.id)) {\n                    if (settingsTermsOptions === null) {\n                        settingsTermsOptions = [];\n                    }\n\n                    settingsTermsOptions.push(option.label);\n                }\n            });\n\n            setTermOptions(options);\n            setSelectedTerms(settingsTermsOptions);\n            setTermsSelectIsLoading(false);\n        });\n\n        props.taxonomiesList.forEach((taxonomy) => {\n            if (taxonomy.value === postTypeTaxonomy) {\n                setTaxonomyLabel(taxonomy.label);\n            }\n        });\n    }, [postTypeTaxonomy]);\n\n    useEffect(() => {\n        if (!taxonomyLabel) {\n            return;\n        }\n\n        // Update the list of actions replacing the taxonomy name.\n        let newExpireTypeList = [];\n\n        originalExpireTypeList.forEach((expireType) => {\n            let label = expireType.label;\n\n            if (taxonomyRelatedActions.indexOf(expireType.value) !== -1) {\n                label = label.replace('%s', taxonomyLabel.toLowerCase());\n            }\n\n            newExpireTypeList.push({\n                value: expireType.value,\n                label: label\n            });\n        });\n\n        setHowToExpireList(newExpireTypeList);\n    }, [taxonomyLabel]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid(props.postType);\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid(props.postType);\n        }\n    }, [hasValidData]);\n\n    useEffect(() => {\n        if (hasPendingValidation && props.onValidationStarted) {\n            props.onValidationStarted(props.postType);\n        }\n\n        if (!hasPendingValidation && props.onValidationFinished) {\n            props.onValidationFinished(props.postType);\n        }\n    }, [hasPendingValidation]);\n\n    const termOptionsLabels = termOptions.map((term) => term.label);\n\n    let settingsRows = [\n        <SettingRow label={props.text.fieldActive} key={'expirationdate_activemeta-' + props.postType}>\n            <CheckboxControl\n                name={'expirationdate_activemeta-' + props.postType}\n                checked={isActive || false}\n                label={props.text.fieldActiveLabel}\n                onChange={onChangeActive}\n            />\n        </SettingRow>\n    ];\n\n    if (isActive) {\n        settingsRows.push(\n            <SettingRow label={props.text.fieldAutoEnable} key={'expirationdate_autoenable-' + props.postType}>\n                <CheckboxControl\n                    name={'expirationdate_autoenable-' + props.postType}\n                    checked={isAutoEnabled || false}\n                    label={props.text.fieldAutoEnableLabel}\n                    onChange={onChangeAutoEnabled}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldTaxonomy} key={'expirationdate_taxonomy-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_taxonomy-' + props.postType}\n                    options={props.taxonomiesList}\n                    selected={postTypeTaxonomy}\n                    noItemFoundMessage={props.text.noItemsfound}\n                    description={props.text.fieldTaxonomyDescription}\n                    data={props.postType}\n                    onChange={onChangeTaxonomy}\n                >\n                </SelectControl>\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldHowToExpire} key={'expirationdate_expiretype-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_expiretype-' + props.postType}\n                    className={'pe-howtoexpire'}\n                    options={howToExpireList}\n                    description={props.text.fieldHowToExpireDescription}\n                    selected={settingHowToExpire}\n                    onChange={onChangeHowToExpire}\n                />\n\n                {settingHowToExpire === 'change-status' &&\n                    <SelectControl\n                        name={'expirationdate_newstatus-' + props.postType}\n                        options={props.statusesList}\n                        selected={newStatus}\n                        onChange={setNewStatus}\n                    />\n                }\n\n                {(props.taxonomiesList.length > 0 && (['category', 'category-add', 'category-remove'].indexOf(settingHowToExpire) > -1)) &&\n                    <TokensControl\n                        label={props.text.fieldTerm}\n                        name={'expirationdate_terms-' + props.postType}\n                        options={termOptionsLabels}\n                        value={selectedTerms}\n                        isLoading={termsSelectIsLoading}\n                        onChange={onChangeTerms}\n                        description={props.text.fieldTermDescription}\n                        maxSuggestions={1000}\n                        expandOnFocus={true}\n                        autoSelectFirstMatch={true}\n                    />\n                }\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldDefaultDateTimeOffset} key={'expired-custom-date-' + props.postType}>\n                <TextControl\n                    name={'expired-custom-date-' + props.postType}\n                    value={expireOffset}\n                    loading={hasPendingValidation}\n                    placeholder={props.settings.globalDefaultExpireOffset}\n                    description={props.text.fieldDefaultDateTimeOffsetDescription}\n                    unescapedDescription={true}\n                    onChange={onChangeExpireOffset}\n                />\n\n                <DateOffsetPreview\n                    offset={offset}\n                    label={props.text.datePreview}\n                    labelDatePreview={props.text.datePreviewCurrent}\n                    labelOffsetPreview={props.text.datePreviewComputed}\n                    setValidationErrorCallback={setValidationError}\n                    setHasPendingValidationCallback={setHasPendingValidation}\n                    setHasValidDataCallback={setHasValidData}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldWhoToNotify} key={'expirationdate_emailnotification-' + props.postType}>\n                <TextControl\n                    name={'expirationdate_emailnotification-' + props.postType}\n                    className=\"large-text\"\n                    value={emailNotification}\n                    description={props.text.fieldWhoToNotifyDescription}\n                    onChange={onChangeEmailNotification}\n                />\n            </SettingRow>\n        );\n    }\n\n    settingsRows = applyFilters('expirationdate_settings_posttype', settingsRows, props, isActive, useState);\n\n    const fieldSetClassNames = props.isVisible ? 'pe-settings-fieldset' : 'pe-settings-fieldset hidden';\n\n    return (\n        <div className={fieldSetClassNames}>\n            <SettingsTable bodyChildren={settingsRows} />\n\n            {! hasValidData && (\n                <PanelRow>\n                    <div className=\"publishpress-future-notice publishpress-future-notice-error\">\n                        <strong>{props.text.error}:</strong> {validationError}\n                    </div>\n                </PanelRow>\n            )}\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\n\nimport { PostTypeSettingsPanel } from \"./\";\nimport { useState } from \"@wordpress/element\";\n\nexport const PostTypesSettingsPanels = function (props) {\n    const [currentTab, setCurrentTab] = useState(Object.keys(props.settings)[0]);\n\n    let panels = [];\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        panels.push(\n            <PostTypeSettingsPanel\n                legend={postTypeSettings.label}\n                text={props.text}\n                postType={postType}\n                settings={postTypeSettings}\n                expireTypeList={props.expireTypeList}\n                taxonomiesList={props.taxonomiesList[postType]}\n                statusesList={props.statusesList[postType]}\n                key={`${postType}-panel`}\n                onDataIsValid={props.onDataIsValid}\n                onDataIsInvalid={props.onDataIsInvalid}\n                onValidationStarted={props.onValidationStarted}\n                onValidationFinished={props.onValidationFinished}\n                isVisible={currentTab === postType}\n            />\n        );\n    }\n\n    const onSelectTab = (event) => {\n        event.preventDefault();\n        setCurrentTab(event.target.hash.replace('#', '').replace('-panel', ''));\n    }\n\n    let tabs = [];\n    let selected = false;\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        selected = currentTab === postType;\n        tabs.push(\n            <a href={`#${postType}-panel`}\n                className={\"nav-tab \" + (selected ? 'nav-tab-active':'')}\n                key={`${postType}-tab`}\n                onClick={onSelectTab}\n            >\n                {postTypeSettings.label}\n            </a>\n        );\n    }\n\n    return (\n        <div>\n            <nav className=\"nav-tab-wrapper\">\n                {tabs}\n            </nav>\n            {panels}\n        </div>\n    );\n}\n\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const SettingRow = function (props) {\n    return (\n        <tr valign=\"top\">\n            <th scope=\"row\">\n                <label htmlFor=\"\">{props.label}</label>\n            </th>\n            <td>\n                {props.children}\n            </td>\n        </tr>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\n\nexport const SettingsForm = function (props) {\n    return (\n        <form method=\"post\">\n            {props.children}\n        </form>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const SettingsSection = function (props) {\n    return (\n        <Fragment>\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n            {props.children}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\n\nexport const SettingsTable = function (props) {\n    return (\n        <table className=\"form-table\">\n            <tbody>\n                {props.bodyChildren}\n            </tbody>\n        </table>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\n\nexport const SubmitButton = function (props) {\n    return (\n        <input\n            type=\"submit\"\n            name={props.name}\n            value={props.text}\n            disabled={props.disabled}\n            className=\"button-primary\"\n        />\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment, useState  } from \"@wordpress/element\";\nimport { CheckboxControl as WPCheckboxControl } from \"@wordpress/components\";\n\nexport const CheckboxControl = function (props) {\n    const [checked, setChecked] = useState(props.checked || false);\n\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        setChecked(value);\n\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPCheckboxControl\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                checked={checked || false}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment } from \"@wordpress/element\";\nimport { SelectControl as WPSelectControl } from \"@wordpress/components\";\n\nexport const SelectControl = function (props) {\n    const onChange = (value) => {\n        props.onChange(value);\n    };\n\n    return (\n        <Fragment>\n            {props.options.length === 0 && (\n                <div>{props.noItemFoundMessage}</div>\n            )}\n\n            {props.options.length > 0 && (\n                <WPSelectControl\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.selected}\n                    onChange={onChange}\n                    data-data={props.data}\n                    options={props.options}\n                />\n            )}\n\n            {props.children}\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment } from \"@wordpress/element\";\nimport { TextControl as WPTextControl } from \"@wordpress/components\";\nimport { Spinner } from \"./\";\n\nexport const TextControl = function (props) {\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    let className = props.className ? props.className : '';\n\n    if (props.loading) {\n        className += ' publishpress-future-loading publishpress-future-loading-input';\n    }\n\n    return (\n        <Fragment>\n            <div className={className}>\n                <WPTextControl\n                    type=\"text\"\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.value}\n                    placeholder={props.placeholder}\n                    onChange={onChange}\n                />\n\n                {props.loading && <Spinner/>}\n\n                {description}\n            </div>\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment, useState, useEffect } from \"@wordpress/element\";\nimport { FormTokenField } from \"@wordpress/components\";\n\nexport const TokensControl = (props) => {\n    const [stringValue, setStringValue] = useState('');\n\n    useEffect(() => {\n        if (props.value) {\n            setStringValue(props.value.join(','));\n        }\n    }, [props.value]);\n\n    let description;\n\n    if (props.description) {\n        if (props.unescapedDescription) {\n            // If using this option, the HTML has to be escaped before injected into the JS interface.\n            description = <p className=\"description\" dangerouslySetInnerHTML={{__html: props.description}}></p>;\n        } else {\n            description = <p className=\"description\">{props.description}</p>;\n        }\n    }\n\n    const onChange = (value) => {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n\n        if (typeof value === 'object') {\n            setStringValue(value.join(','));\n        } else {\n            setStringValue('');\n        }\n    }\n\n    const value = props.value ? props.value : [];\n \n    return (\n        <Fragment>\n            <FormTokenField\n                label={props.label}\n                value={value}\n                suggestions={props.options}\n                onChange={onChange}\n                maxSuggestions={props.maxSuggestions}\n                className=\"publishpres-future-token-field\"\n                __experimentalExpandOnFocus={props.expandOnFocus}\n                __experimentalAutoSelectFirstMatch={props.autoSelectFirstMatch}\n            />\n            <input type=\"hidden\" name={props.name} value={stringValue} />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const NonceControl = function (props) {\n    if (! props.name) {\n        props.name = '_wpnonce';\n    }\n\n    if (! props.referrer) {\n        props.referrer = true;\n    }\n\n    return (\n        <Fragment>\n            <input type=\"hidden\" name={props.name} id={props.name} value={props.nonce} />\n\n            {props.referrer &&\n                <input type=\"hidden\" name=\"_wp_http_referer\" value={props.referrer}/>\n            }\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nexport const Spinner = function (props) {\n    return (\n        <span className=\"publishpress-future-spinner\"><div></div><div></div><div></div><div></div></span>\n    );\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = publishpressFutureSettingsConfig;","/*\n * Copyright (c) 2024, Ramble Ventures\n */\n\nimport {\n    SettingsForm,\n    SettingsSection,\n    PostTypesSettingsPanels,\n    SubmitButton,\n    ButtonsPanel,\n    NonceControl\n} from \"./components\";\n\nimport { StrictMode, useState, useEffect } from \"@wordpress/element\";\n\nimport { createRoot } from 'react-dom/client';\n\nimport {\n    nonce,\n    referrer,\n    settings,\n    expireTypeList,\n    taxonomiesList,\n    text,\n    statusesList\n} from \"&config.settings-post-types\";\nimport { render } from \"react-dom\";\n\nconst SettingsFormPanel = (props) => {\n    const [formValidationStatusPerPostType, setFormValidationStatusPerPostType] = useState({});\n    const [pendingValidationPerPostType, setPendingValidationPerPostType] = useState({});\n    const [allValid, setAllValid] = useState(true);\n    const [hasNoPendingValidation, setHasNoPendingValidation] = useState(true);\n\n    useEffect(() => {\n        let allFormsAreValid = true;\n\n        for (const [postType, isValidForPostType] of Object.entries(formValidationStatusPerPostType)) {\n            if (!isValidForPostType) {\n                allFormsAreValid = false;\n                break;\n            }\n        }\n\n        setAllValid(allFormsAreValid);\n    }, [formValidationStatusPerPostType]);\n\n    useEffect(() => {\n        let hasNoPendingValidation = true;\n\n        for (const [postType, hasPending] of Object.entries(pendingValidationPerPostType)) {\n            if (hasPending) {\n                hasNoPendingValidation = false;\n                break;\n            }\n        }\n\n        setHasNoPendingValidation(hasNoPendingValidation);\n    }, [pendingValidationPerPostType]);\n\n    const onDataIsValid = (postType) => {\n        formValidationStatusPerPostType[postType] = true;\n        setFormValidationStatusPerPostType({...formValidationStatusPerPostType});\n    }\n\n    const onDataIsInvalid = (postType) => {\n        formValidationStatusPerPostType[postType] = false;\n        setFormValidationStatusPerPostType({...formValidationStatusPerPostType});\n    }\n\n    const onValidationStarted = (postType) => {\n        pendingValidationPerPostType[postType] = true;\n        setPendingValidationPerPostType({...pendingValidationPerPostType});\n    }\n\n    const onValidationFinished = (postType) => {\n        pendingValidationPerPostType[postType] = false;\n        setPendingValidationPerPostType({...pendingValidationPerPostType});\n    }\n\n    const saveButtonText = hasNoPendingValidation ? text.saveChanges : text.saveChangesPendingValidation;\n\n    return (\n        <StrictMode>\n            <SettingsForm>\n                <NonceControl\n                    name=\"_postExpiratorMenuDefaults_nonce\"\n                    nonce={nonce}\n                    referrer={referrer}\n                />\n                <SettingsSection\n                    title={text.settingsSectionTitle}\n                    description={text.settingsSectionDescription}>\n                    <PostTypesSettingsPanels\n                        settings={settings}\n                        text={text}\n                        expireTypeList={expireTypeList}\n                        taxonomiesList={taxonomiesList}\n                        statusesList={statusesList}\n                        onDataIsValid={onDataIsValid}\n                        onDataIsInvalid={onDataIsInvalid}\n                        onValidationStarted={onValidationStarted}\n                        onValidationFinished={onValidationFinished}\n                    />\n                </SettingsSection>\n\n                <ButtonsPanel>\n                    <SubmitButton\n                        id=\"expirationdateSaveDefaults\"\n                        name=\"expirationdateSaveDefaults\"\n                        disabled={!allValid || !hasNoPendingValidation}\n                        text={saveButtonText}\n                    />\n                </ButtonsPanel>\n            </SettingsForm>\n        </StrictMode>\n    )\n};\n\nconst container = document.getElementById(\"publishpress-future-settings-post-types\");\nconst component = (<SettingsFormPanel />);\n\ncreateRoot(container).render(component);\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","m","createRoot","hydrateRoot","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","attributes","styleElement","nonce","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","ReactDOM","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","nc","ButtonsPanel","props","React","children","wp","components","plugins","_wp$components","_wp$element","PanelRow","CheckboxControl","SelectControl","FormTokenField","Spinner","BaseControl","_wp$data","Fragment","useEffect","useState","htmlEntities","decodeEntities","url","addQueryArgs","useSelect","useDispatch","apiFetch","hooks","require","_ref","offset","label","labelDatePreview","labelOffsetPreview","setValidationErrorCallback","setHasPendingValidationCallback","setHasValidDataCallback","_ref$compactView","compactView","_useState2","_slicedToArray","offsetPreview","setOffsetPreview","_useState4","currentTime","setCurrentTime","apiRequestControllerRef","useRef","AbortController","controller","current","abort","signal","path","method","then","isValid","message","preview","catch","error","name","validateDateOffset","compactClass","className","PostTypeSettingsPanel","originalExpireTypeList","expireTypeList","postType","settings","taxonomy","postTypeTaxonomy","setPostTypeTaxonomy","termOptions","setTermOptions","_useState6","termsSelectIsLoading","setTermsSelectIsLoading","_useState8","selectedTerms","setSelectedTerms","_useState10","howToExpire","settingHowToExpire","setSettingHowToExpire","_useState12","active","isActive","setIsActive","_useState14","defaultExpireOffset","expireOffset","setExpireOffset","_useState16","emailNotification","setEmailNotification","_useState18","autoEnabled","isAutoEnabled","setIsAutoEnabled","_useState20","hasValidData","setHasValidData","_useState22","validationError","setValidationError","_useState24","taxonomyLabel","setTaxonomyLabel","_useState26","howToExpireList","setHowToExpireList","_useState28","newStatus","setNewStatus","_useState30","hasPendingValidation","setHasPendingValidation","globalDefaultExpireOffset","taxonomyRelatedActions","newExpireTypeList","taxonomiesList","filter","indexOf","option","settingsTermsOptions","terms","forEach","term","includes","expireType","replace","toLowerCase","onDataIsValid","onDataIsInvalid","onValidationStarted","onValidationFinished","termOptionsLabels","settingsRows","SettingRow","text","fieldActive","checked","fieldActiveLabel","onChange","fieldAutoEnable","fieldAutoEnableLabel","fieldTaxonomy","selected","noItemFoundMessage","noItemsfound","description","fieldTaxonomyDescription","fieldHowToExpire","fieldHowToExpireDescription","statusesList","TokensControl","fieldTerm","isLoading","fieldTermDescription","maxSuggestions","expandOnFocus","autoSelectFirstMatch","fieldDefaultDateTimeOffset","TextControl","loading","placeholder","fieldDefaultDateTimeOffsetDescription","unescapedDescription","DateOffsetPreview","datePreview","datePreviewCurrent","datePreviewComputed","fieldWhoToNotify","fieldWhoToNotifyDescription","applyFilters","fieldSetClassNames","isVisible","SettingsTable","bodyChildren","PostTypesSettingsPanels","keys","currentTab","setCurrentTab","panels","_Object$entries","entries","_Object$entries$_i","postTypeSettings","legend","onSelectTab","event","preventDefault","hash","tabs","_i2","_Object$entries2","_Object$entries2$_i","href","onClick","valign","scope","htmlFor","SettingsForm","SettingsSection","title","SubmitButton","type","disabled","setChecked","dangerouslySetInnerHTML","__html","WPCheckboxControl","WPSelectControl","WPTextControl","stringValue","setStringValue","suggestions","_typeof","__experimentalExpandOnFocus","__experimentalAutoSelectFirstMatch","NonceControl","referrer","publishpressFutureSettingsConfig","SettingsFormPanel","formValidationStatusPerPostType","setFormValidationStatusPerPostType","pendingValidationPerPostType","setPendingValidationPerPostType","allValid","setAllValid","hasNoPendingValidation","setHasNoPendingValidation","allFormsAreValid","saveButtonText","saveChanges","saveChangesPendingValidation","StrictMode","settingsSectionTitle","settingsSectionDescription","_objectSpread","container","getElementById","component","render"],"sourceRoot":""}