{"version":3,"file":"bulk-edit.js","mappings":"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","sources":["webpack://post-expirator/./assets/jsx/components/css/dateOffsetPreview.css","webpack://post-expirator/./node_modules/css-loader/dist/runtime/api.js","webpack://post-expirator/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://post-expirator/./node_modules/react-dom/client.js","webpack://post-expirator/./assets/jsx/components/css/dateOffsetPreview.css?541a","webpack://post-expirator/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://post-expirator/external var \"ReactDOM\"","webpack://post-expirator/webpack/bootstrap","webpack://post-expirator/webpack/runtime/compat get default export","webpack://post-expirator/webpack/runtime/define property getters","webpack://post-expirator/webpack/runtime/hasOwnProperty shorthand","webpack://post-expirator/webpack/runtime/make namespace object","webpack://post-expirator/webpack/runtime/nonce","webpack://post-expirator/./assets/jsx/utils.jsx","webpack://post-expirator/external var \"wp.components\"","webpack://post-expirator/./assets/jsx/components/ToggleArrowButton.jsx","webpack://post-expirator/./assets/jsx/time.jsx","webpack://post-expirator/./assets/jsx/components/DateTimePicker.jsx","webpack://post-expirator/external var \"wp.element\"","webpack://post-expirator/./assets/jsx/components/ToggleCalendarDatePicker.jsx","webpack://post-expirator/external var \"wp.plugins\"","webpack://post-expirator/./assets/jsx/components/FutureActionPanelAfterActionField.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelTop.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanel.jsx","webpack://post-expirator/external var \"wp.data\"","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBulkEdit.jsx","webpack://post-expirator/external var \"wp.url\"","webpack://post-expirator/external var \"wp.hooks\"","webpack://post-expirator/external var \"wp\"","webpack://post-expirator/./assets/jsx/components/DateOffsetPreview.jsx","webpack://post-expirator/./assets/jsx/components/PostTypeSettingsPanel.jsx","webpack://post-expirator/./assets/jsx/components/CheckboxControl.jsx","webpack://post-expirator/./assets/jsx/components/SelectControl.jsx","webpack://post-expirator/./assets/jsx/data.jsx","webpack://post-expirator/external var \"window\"","webpack://post-expirator/external var \"publishpressFutureBulkEditConfig\"","webpack://post-expirator/./assets/jsx/bulk-edit.jsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.publishpress-future-date-preview .publishpress-future-date-preview-value {\n    font-family: monospace;\n    background-color: #e7e7e7;\n    padding: 2px 4px;\n}\n\n.publishpress-future-date-preview.compact .publishpress-future-date-preview-label {\n    display: block;\n}\n\n.publishpress-future-date-preview.compact {\n    margin-bottom: 8px;\n}\n\n.publishpress-future-date-preview.compact h4 {\n    font-size: 11px;\n    font-weight: 500;\n    line-height: 1.4;\n    text-transform: uppercase;\n    display: inline-block;\n    margin-bottom: calc(8px);\n    padding: 0px;\n    flex-shrink: 0;\n    margin-right: 12px;\n    max-width: 75%;\n    margin-top: 0;\n}\n\n.publishpress-future-notice.publishpress-future-notice-error {\n    color: #dc3232;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./assets/jsx/components/css/dateOffsetPreview.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,yBAAyB;IACzB,qBAAqB;IACrB,wBAAwB;IACxB,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB\",\"sourcesContent\":[\".publishpress-future-date-preview .publishpress-future-date-preview-value {\\n    font-family: monospace;\\n    background-color: #e7e7e7;\\n    padding: 2px 4px;\\n}\\n\\n.publishpress-future-date-preview.compact .publishpress-future-date-preview-label {\\n    display: block;\\n}\\n\\n.publishpress-future-date-preview.compact {\\n    margin-bottom: 8px;\\n}\\n\\n.publishpress-future-date-preview.compact h4 {\\n    font-size: 11px;\\n    font-weight: 500;\\n    line-height: 1.4;\\n    text-transform: uppercase;\\n    display: inline-block;\\n    margin-bottom: calc(8px);\\n    padding: 0px;\\n    flex-shrink: 0;\\n    margin-right: 12px;\\n    max-width: 75%;\\n    margin-top: 0;\\n}\\n\\n.publishpress-future-notice.publishpress-future-notice-error {\\n    color: #dc3232;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js!./dateOffsetPreview.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js!./dateOffsetPreview.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","module.exports = ReactDOM;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","export const compact = (array) => {\n    if (!array) {\n        return [];\n    }\n\n    if (! Array.isArray(array) && typeof array === 'object') {\n        array = Object.values(array);\n    }\n\n    return array.filter((item) => {\n        return item !== null && item !== undefined && item !== '';\n    });\n}\n\nexport const debugLogFactory = (config) => {\n    return (description, ...message) => {\n        if (console && config.isDebugEnabled) {\n            console.debug('[Future]', description, ...message);\n        }\n    }\n}\n\nexport const isGutenbergEnabled = () => {\n    return document.body.classList.contains('block-editor-page');\n}\n\nexport const getElementByName = (name) => {\n    return document.getElementsByName(name)[0];\n}\n\nexport const getFieldByName = (name, postId) => {\n    return document.querySelector(`#the-list tr#post-${postId} .column-expirationdate input#future_action_${name}-${postId}`);\n}\n\nexport const getFieldValueByName = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return null;\n    }\n\n    return field.value;\n};\n\nexport const getFieldValueByNameAsArrayOfInt = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field || !field.value) {\n        return [];\n    }\n\n    if (typeof field.value === 'number') {\n        field.value = field.value.toString();\n    }\n\n    return field.value.split(',').map(term => parseInt(term));\n};\n\nexport const getFieldValueByNameAsBool = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return false;\n    }\n\n    return field.value === '1' || field.value === 'true';\n}\n\nexport const getActionSettingsFromColumnData = (postId) => {\n    const columnData = document.querySelector(`#post-expire-column-${postId}`);\n\n    if (!columnData) {\n        return {};\n    }\n\n    return {\n        enabled: columnData.dataset.actionEnabled === '1',\n        action: columnData.dataset.actionType,\n        date: columnData.dataset.actionDate,\n        dateUnix: columnData.dataset.actionDateUnix,\n        taxonomy: columnData.dataset.actionTaxonomy,\n        terms: columnData.dataset.actionTerms,\n        newStatus: columnData.dataset.actionNewStatus,\n    };\n}\n\n/**\n * This function is used to determine if a value is a number, including strings.\n *\n * @param {*} value\n * @returns\n */\nexport const isNumber = (value) => {\n    return !isNaN(value);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.components;","import { Button } from '@wordpress/components';\n\nexport const ToggleArrowButton = function (props) {\n    const onClick = function () {\n        if (props.onClick) {\n            props.onClick();\n        }\n    };\n\n    const iconExpanded = props.iconExpanded ? props.iconExpanded : 'arrow-up-alt2';\n    const iconCollapsed = props.iconCollapsed ? props.iconCollapsed : 'arrow-down-alt2';\n\n    const icon = props.isExpanded ? iconExpanded : iconCollapsed;\n\n    const title = props.isExpanded ? props.titleExpanded : props.titleCollapsed;\n\n    return (\n        <Button\n            isSmall\n            title={title}\n            icon={icon}\n            onClick={onClick}\n            className={props.className}\n        />\n    )\n}\n","export const getCurrentTimeInSeconds = () => {\n    return normalizeUnixTimeToSeconds(new Date().getTime());\n}\n\nexport const getCurrentTimeAsTimestamp = () => {\n    return formatUnixTimeToTimestamp(getCurrentTimeInSeconds());\n}\n\nexport const formatUnixTimeToTimestamp = (unixTimestamp) => {\n    const date = new Date(\n        normalizeUnixTimeToSeconds(unixTimestamp)\n    );\n\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Months are zero-based\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = (\"0\" + date.getHours()).slice(-2);\n    const minutes = (\"0\" + date.getMinutes()).slice(-2);\n    const seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nexport const formatTimestampToUnixTime = (time) => {\n    const date = new Date(time);\n\n    return normalizeUnixTimeToSeconds(date.getTime());\n}\n\nexport const timeIsInSeconds = (time) => {\n    return parseInt(time).toString().length <= 10;\n}\n\nexport const normalizeUnixTimeToSeconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time : time / 1000;\n}\n\nexport const normalizeUnixTimeToMilliseconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time * 1000 : time;\n}\n","import { normalizeUnixTimeToMilliseconds } from \"../time\";\nimport { DateTimePicker as WPDateTimePicker } from \"@wordpress/components\";\n\n\nexport const DateTimePicker = ({currentDate, onChange, is12Hour, startOfWeek}) => {\n    if (typeof currentDate === 'number') {\n        currentDate = normalizeUnixTimeToMilliseconds(currentDate);\n    }\n\n    return (\n        <WPDateTimePicker\n            currentDate={currentDate}\n            onChange={onChange}\n            __nextRemoveHelpButton={true}\n            is12Hour={is12Hour}\n            startOfWeek={startOfWeek}\n        />\n    )\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.element;","import { ToggleArrowButton } from \"./ToggleArrowButton\";\nimport { DateTimePicker } from \"./DateTimePicker\";\nimport { Fragment, useEffect } from \"@wordpress/element\";\n\nexport const ToggleCalendarDatePicker = (\n    {\n        isExpanded,\n        strings,\n        onToggleCalendar,\n        currentDate,\n        onChangeDate,\n        is12Hour,\n        startOfWeek\n    }\n) => {\n    useEffect(() => {\n        // Move the element of the toggle button to between the time and date elements.\n        const toggleButtonElement = document.querySelector('.future-action-calendar-toggle');\n\n        if (! toggleButtonElement) {\n            return;\n        }\n\n        const dateTimeElement = toggleButtonElement.nextElementSibling;\n\n        if (! dateTimeElement) {\n            return;\n        }\n\n        const timeElement = dateTimeElement.querySelector('.components-datetime__time');\n\n        if (! timeElement) {\n            return;\n        }\n\n        const dateElement = timeElement.nextSibling;\n\n        if (! dateElement) {\n            return;\n        }\n\n        dateTimeElement.insertBefore(toggleButtonElement, dateElement)\n    });\n\n    return (\n        <Fragment>\n            <ToggleArrowButton\n                className=\"future-action-calendar-toggle\"\n                isExpanded={isExpanded}\n                iconExpanded=\"arrow-up-alt2\"\n                iconCollapsed=\"calendar\"\n                titleExpanded={strings.hideCalendar}\n                titleCollapsed={strings.showCalendar}\n                onClick={onToggleCalendar} />\n\n            <DateTimePicker\n                currentDate={currentDate}\n                onChange={onChangeDate}\n                __nextRemoveHelpButton={true}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n            />\n        </Fragment>\n    )\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.plugins;","import { Slot, Fill } from '@wordpress/components';\n\nexport const FutureActionPanelAfterActionField = ({ children }) => (\n    <Fill name=\"FutureActionPanelAfterActionField\">\n        {children}\n    </Fill>\n);\n\nconst FutureActionPanelAfterActionFieldSlot = (props) => (\n    <Slot name=\"FutureActionPanelAfterActionField\" {...props} />\n);\n\nFutureActionPanelAfterActionField.Slot = FutureActionPanelAfterActionFieldSlot;\n\nexport default FutureActionPanelAfterActionField;\n","import { Slot, Fill } from '@wordpress/components';\n\nexport const FutureActionPanelTop = ({ children }) => (\n    <Fill name=\"FutureActionPanelTop\">\n        {children}\n    </Fill>\n);\n\nconst FutureActionPanelTopSlot = (props) => (\n    <Slot name=\"FutureActionPanelTop\" {...props} />\n);\n\nFutureActionPanelTop.Slot = FutureActionPanelTopSlot;\n\nexport default FutureActionPanelTop;\n","import { compact } from '../utils';\nimport { ToggleCalendarDatePicker } from './ToggleCalendarDatePicker';\nimport { PluginArea } from '@wordpress/plugins';\nimport { Fill, Slot, SlotFillProvider } from '@wordpress/components';\nimport { FutureActionPanelAfterActionField } from './FutureActionPanelAfterActionField';\nimport { FutureActionPanelTop } from './FutureActionPanelTop';\n\nconst { PanelRow, CheckboxControl, SelectControl, FormTokenField, Spinner, BaseControl } = wp.components;\nconst { Fragment, useEffect, useState } = wp.element;\nconst { decodeEntities } = wp.htmlEntities;\nconst { addQueryArgs } = wp.url;\nconst {\n    useSelect,\n    useDispatch\n} = wp.data;\nconst { apiFetch } = wp;\n\nexport const FutureActionPanel = (props) => {\n    const {\n        action,\n        date,\n        enabled,\n        terms,\n        taxonomy,\n        taxonomyName,\n        termsListByName,\n        termsListById,\n        isFetchingTerms,\n        calendarIsVisible,\n        hasValidData,\n        newStatus,\n    } = useSelect((select) => {\n        return {\n            action: select(props.storeName).getAction(),\n            date: select(props.storeName).getDate(),\n            enabled: select(props.storeName).getEnabled(),\n            terms: select(props.storeName).getTerms(),\n            taxonomy: select(props.storeName).getTaxonomy(),\n            taxonomyName: select(props.storeName).getTaxonomyName(),\n            termsListByName: select(props.storeName).getTermsListByName(),\n            termsListById: select(props.storeName).getTermsListById(),\n            isFetchingTerms: select(props.storeName).getIsFetchingTerms(),\n            calendarIsVisible: select(props.storeName).getCalendarIsVisible(),\n            hasValidData: select(props.storeName).getHasValidData(),\n            newStatus: select(props.storeName).getNewStatus(),\n        };\n    });\n\n    const [validationError, setValidationError] = useState('');\n\n    const {\n        setAction,\n        setDate,\n        setEnabled,\n        setTerms,\n        setTaxonomy,\n        setTermsListByName,\n        setTermsListById,\n        setTaxonomyName,\n        setIsFetchingTerms,\n        setCalendarIsVisible,\n        setHasValidData,\n        setNewStatus\n    } = useDispatch(props.storeName);\n\n    const mapTermsListById = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            return termsListById[term];\n        });\n    }\n\n    const insertTerm = (term) => {\n        termsListByName[term] = { id: term, count: 0, description: \"\", link: \"\", name: term, slug: term, taxonomy: taxonomy };\n        termsListById[term] = term;\n        setTermsListByName(termsListByName);\n        setTermsListById(termsListById);\n        setTerms([...terms, term]);\n\n    }\n\n    const mapTermsListByName = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            if (termsListByName[term]) {\n                return termsListByName[term].id;\n            }\n\n            insertTerm(term);\n\n            return term;\n        });\n    }\n\n    const callOnChangeData = (attribute, value) => {\n        if (typeof props.onChangeData === 'function') {\n            props.onChangeData(attribute, value);\n        }\n    }\n\n    const handleEnabledChange = (isChecked) => {\n        setEnabled(isChecked);\n\n        if (isChecked) {\n            setAction(props.action);\n            setDate(props.date);\n            setNewStatus(props.newStatus);\n            setTerms(props.terms);\n            setTaxonomy(props.taxonomy);\n\n            fetchTerms();\n        }\n\n        callOnChangeData('enabled', isChecked);\n    }\n\n    const handleActionChange = (value) => {\n        setAction(value);\n\n        callOnChangeData('action', value);\n    }\n\n    const handleNewStatusChange = (value) => {\n        setNewStatus(value);\n\n        callOnChangeData('newStatus', value);\n    }\n\n    const handleDateChange = (value) => {\n        setDate(value);\n\n        callOnChangeData('date', value);\n    }\n\n    const handleTermsChange = (value) => {\n        value = mapTermsListByName(value);\n\n        setTerms(value);\n\n        callOnChangeData('terms', value);\n    }\n\n    const fetchTerms = () => {\n        let termsListByName = {};\n        let termsListById = {};\n\n        if (!taxonomy) {\n            return;\n        }\n\n        setIsFetchingTerms(true);\n\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${taxonomy}`),\n        }).then((result) => {\n            result.terms.forEach(term => {\n                termsListByName[decodeEntities(term.name)] = term;\n                termsListById[term.id] = decodeEntities(term.name);\n            });\n\n            setTermsListByName(termsListByName);\n            setTermsListById(termsListById);\n            setTaxonomyName(decodeEntities(result.taxonomyName));\n            setIsFetchingTerms(false);\n        });\n    }\n\n    const storeCalendarIsVisibleOnStorage = (value) => {\n        localStorage.setItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context, value ? '1' : '0');\n    }\n\n    const getCalendarIsVisibleFromStorage = () => {\n        return localStorage.getItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context);\n    }\n\n    useEffect(() => {\n        if (props.autoEnableAndHideCheckbox) {\n            setEnabled(true);\n        } else {\n            setEnabled(props.enabled);\n        }\n\n        setAction(props.action);\n        setNewStatus(props.newStatus);\n        setDate(props.date);\n        setTerms(props.terms);\n        setTaxonomy(props.taxonomy);\n\n        if (getCalendarIsVisibleFromStorage() === null) {\n            setCalendarIsVisible(props.calendarIsVisible);\n        } else {\n            setCalendarIsVisible(getCalendarIsVisibleFromStorage() === '1' && ! props.hideCalendarByDefault);\n        }\n\n        // We need to get the value directly from the props because the value from the store is not updated yet\n        if (props.enabled) {\n            if (props.isCleanNewPost) {\n                // Force populate the default values\n                handleEnabledChange(true);\n            }\n\n            fetchTerms();\n        }\n    }, []);\n\n    useEffect(() => {\n        storeCalendarIsVisibleOnStorage(calendarIsVisible);\n    }, [calendarIsVisible]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid();\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid();\n        }\n    }, [hasValidData]);\n\n    let selectedTerms = [];\n    if (terms && terms.length > 0 && termsListById) {\n        selectedTerms = compact(mapTermsListById(terms));\n\n        if (typeof selectedTerms === 'string') {\n            selectedTerms = [];\n        }\n    }\n\n    let termsListByNameKeys = [];\n    if (typeof termsListByName === 'object' && termsListByName !== null) {\n        termsListByNameKeys = Object.keys(termsListByName);\n    }\n\n    const panelClass = calendarIsVisible ? 'future-action-panel' : 'future-action-panel hidden-calendar';\n    const contentPanelClass = calendarIsVisible ? 'future-action-panel-content' : 'future-action-panel-content hidden-calendar';\n    const datePanelClass = calendarIsVisible ? 'future-action-date-panel' : 'future-action-date-panel hidden-calendar';\n\n    let is24hour;\n    if (props.timeFormat === 'inherited') {\n        is24hour = !props.is12Hour;\n    } else {\n        is24hour = props.timeFormat === '24h';\n    }\n\n    const replaceCurlyBracketsWithLink = (string, href, target) => {\n        const parts = string.split('{');\n        const result = [];\n\n        result.push(parts.shift());\n\n        for (const part of parts) {\n            const [before, after] = part.split('}');\n\n            result.push(\n                <a href={href} target={target} key={href}>{before}</a>\n            );\n\n            result.push(after);\n        }\n\n        return result;\n    };\n\n    // Remove items from actions list if related to taxonomies and there is no taxonmoy for the post type\n    let actionsSelectOptions = props.actionsSelectOptions;\n    if (!props.taxonomy) {\n        actionsSelectOptions = props.actionsSelectOptions.filter((item) => {\n            return ['category', 'category-add', 'category-remove', 'category-remove-all'].indexOf(item.value) === -1;\n        });\n    }\n\n    const HelpText = replaceCurlyBracketsWithLink(props.strings.timezoneSettingsHelp, '/wp-admin/options-general.php#timezone_string', '_blank');\n    const displayTaxonomyField = String(action).includes('category') && action !== 'category-remove-all';\n\n    let termsFieldLabel = taxonomyName;\n    switch (action) {\n        case 'category':\n            termsFieldLabel = props.strings.newTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-remove':\n            termsFieldLabel = props.strings.removeTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-add':\n            termsFieldLabel = props.strings.addTerms.replace('%s', taxonomyName);\n            break;\n    }\n\n    const validateData = () => {\n        let valid = true;\n\n        if (!enabled) {\n            setValidationError('');\n            return true;\n        }\n\n        if (!action) {\n            setValidationError(props.strings.errorActionRequired);\n            valid = false;\n        }\n\n        if (!date) {\n            setValidationError(props.strings.errorDateRequired);\n            valid = false;\n        }\n\n        // Check if the date is in the past\n        if (date && new Date(date) < new Date()) {\n            setValidationError(props.strings.errorDateInPast);\n            valid = false;\n        }\n\n        const isTermRequired = ['category', 'category-add', 'category-remove'].includes(action);\n        const noTermIsSelected = terms.length === 0 || (terms.length === 1 && (terms[0] === '' || terms[0] === '0'));\n\n        if (isTermRequired && noTermIsSelected) {\n            setValidationError(props.strings.errorTermsRequired);\n            valid = false;\n        }\n\n        if (valid) {\n            setValidationError('');\n        }\n\n        return valid;\n    }\n\n    useEffect(() => {\n        if (!enabled) {\n            setHasValidData(true);\n            setValidationError('');\n\n            return;\n        }\n\n        setHasValidData(validateData());\n    }, [action, date, enabled, terms, taxonomy]);\n\n    // This adds a 'cancel' class to the input when the user clicks on the\n    // field to prevent the form from being submitted. This is a workaround\n    // for the issue on the quick-edit form where the form is submitted when\n    // the user presses the 'Enter' key trying to add a term to the field.\n    const forceIgnoreAutoSubmitOnEnter = (e) => {\n        jQuery(e.target).addClass('cancel');\n    }\n\n    return (\n        <SlotFillProvider>\n            <div className={panelClass}>\n                {props.autoEnableAndHideCheckbox && (\n                    <input type=\"hidden\" name={'future_action_enabled'} value={1} />\n                )}\n\n                <FutureActionPanelTop.Slot fillProps={{ storeName: props.storeName }} />\n\n                {!props.autoEnableAndHideCheckbox && (\n                    <PanelRow>\n                        <CheckboxControl\n                            label={props.strings.enablePostExpiration}\n                            checked={enabled || false}\n                            onChange={handleEnabledChange}\n                            className=\"future-action-enable-checkbox\"\n                        />\n                    </PanelRow>\n                )}\n\n                {enabled && (\n                    <Fragment>\n                        <PanelRow className={contentPanelClass + ' future-action-full-width'}>\n                            <SelectControl\n                                label={props.strings.action}\n                                value={action}\n                                options={actionsSelectOptions}\n                                onChange={handleActionChange}\n                                className=\"future-action-select-action\"\n                            />\n                        </PanelRow>\n\n                        <FutureActionPanelAfterActionField.Slot fillProps={{ storeName: props.storeName }} />\n\n                        {action === 'change-status' &&\n                            <PanelRow className=\"new-status\">\n                                <SelectControl\n                                    label={props.strings.newStatus}\n                                    options={props.statusesSelectOptions}\n                                    value={newStatus}\n                                    onChange={handleNewStatusChange}\n                                    className=\"future-action-select-new-status\"\n                                />\n                            </PanelRow>\n                        }\n\n                        {\n                            displayTaxonomyField && (\n                                isFetchingTerms && (\n                                    <PanelRow>\n                                        <BaseControl label={taxonomyName}>\n                                            {`${props.strings.loading} (${taxonomyName})`}\n                                            <Spinner />\n                                        </BaseControl>\n                                    </PanelRow>\n                                )\n                                || (!taxonomy && (\n                                    <PanelRow>\n                                        <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                            <div>\n                                                <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTaxonomyFound}\n                                            </div>\n                                        </BaseControl>\n                                    </PanelRow>\n                                )\n                                    || (\n                                        termsListByNameKeys.length === 0 && (\n                                            <PanelRow>\n                                                <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                                    <div>\n                                                        <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTermsFound}\n                                                    </div>\n                                                </BaseControl>\n                                            </PanelRow>\n                                        )\n                                        || (\n                                            <PanelRow className=\"future-action-full-width\">\n                                                <BaseControl>\n                                                    <FormTokenField\n                                                        label={termsFieldLabel}\n                                                        value={selectedTerms}\n                                                        suggestions={termsListByNameKeys}\n                                                        onChange={handleTermsChange}\n                                                        placeholder={props.strings.addTermsPlaceholder}\n                                                        className=\"future-action-terms\"\n                                                        maxSuggestions={1000}\n                                                        onFocus={forceIgnoreAutoSubmitOnEnter}\n                                                        __experimentalExpandOnFocus={true}\n                                                        __experimentalAutoSelectFirstMatch={true}\n                                                    />\n                                                </BaseControl>\n                                            </PanelRow>\n                                        )\n                                    )\n                                )\n                            )\n                        }\n\n                        <PanelRow className={datePanelClass}>\n                            <ToggleCalendarDatePicker\n                                currentDate={date}\n                                onChangeDate={handleDateChange}\n                                onToggleCalendar={() => setCalendarIsVisible(!calendarIsVisible)}\n                                is12Hour={!is24hour}\n                                startOfWeek={props.startOfWeek}\n                                isExpanded={calendarIsVisible}\n                                strings={props.strings}\n                            />\n                        </PanelRow>\n\n                        <PanelRow>\n                            <div className=\"future-action-help-text\">\n                                <hr />\n\n                                <span className=\"dashicons dashicons-info\"></span> {HelpText}\n                            </div>\n                        </PanelRow>\n\n                        {!hasValidData && (\n                            <PanelRow>\n                                <BaseControl className=\"notice notice-error\">\n                                    <div>{validationError}</div>\n                                </BaseControl>\n                            </PanelRow>\n                        )}\n                    </Fragment>\n                )}\n            </div>\n            <PluginArea scope='publishpress-future' />\n        </SlotFillProvider>\n    );\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.data;","import { FutureActionPanel, SelectControl } from '.';\nimport { getElementByName } from '../utils';\n\nexport const FutureActionPanelBulkEdit = (props) => {\n    const { useSelect, useDispatch, select } = wp.data;\n    const { useEffect } = wp.element;\n\n    const onChangeData = (attribute, value) => {\n        getElementByName('future_action_bulk_enabled').value = select(props.storeName).getEnabled() ? 1 : 0;\n        getElementByName('future_action_bulk_action').value = select(props.storeName).getAction();\n        getElementByName('future_action_bulk_new_status').value = select(props.storeName).getNewStatus();\n        getElementByName('future_action_bulk_date').value = select(props.storeName).getDate();\n        getElementByName('future_action_bulk_terms').value = select(props.storeName).getTerms().join(',');\n        getElementByName('future_action_bulk_taxonomy').value = select(props.storeName).getTaxonomy();\n    }\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const newStatus = useSelect((select) => select(props.storeName).getNewStatus(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const changeAction = useSelect((select) => select(props.storeName).getChangeAction(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n\n    const {\n        setChangeAction\n    } = useDispatch(props.storeName);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const handleStrategyChange = (value) => {\n        setChangeAction(value);\n    };\n\n    const options = [\n        { value: 'no-change', label: props.strings.noChange },\n        { value: 'change-add', label: props.strings.changeAdd },\n        { value: 'add-only', label: props.strings.addOnly },\n        { value: 'change-only', label: props.strings.changeOnly },\n        { value: 'remove-only', label: props.strings.removeOnly },\n    ];\n\n    const optionsToDisplayPanel = ['change-add', 'add-only', 'change-only'];\n\n    useEffect(() => {\n        // We are not using onDataIsValid and onDataIsInvalid because we need to enable/disable the button\n        // also based on the changeAction value.\n        if (hasValidData || changeAction === 'no-change') {\n            jQuery('#bulk_edit').prop('disabled', false);\n        } else {\n            jQuery('#bulk_edit').prop('disabled', true);\n        }\n    }, [hasValidData, changeAction]);\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <SelectControl\n                label={props.strings.futureActionUpdate}\n                name={'future_action_bulk_change_action'}\n                value={changeAction}\n                options={options}\n                onChange={handleStrategyChange}\n            />\n\n            {optionsToDisplayPanel.includes(changeAction) && (\n                <FutureActionPanel\n                    context={'bulk-edit'}\n                    autoEnableAndHideCheckbox={true}\n                    postType={props.postType}\n                    isCleanNewPost={props.isNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    statusesSelectOptions={props.statusesSelectOptions}\n                    enabled={true}\n                    calendarIsVisible={false}\n                    action={action}\n                    newStatus={newStatus}\n                    date={date}\n                    terms={terms}\n                    taxonomy={taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    hideCalendarByDefault={props.hideCalendarByDefault}\n                    strings={props.strings} />\n            )}\n\n            {/* Bulk edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_bulk_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_bulk_action'} value={action} />\n            <input type=\"hidden\" name={'future_action_bulk_new_status'} value={newStatus} />\n            <input type=\"hidden\" name={'future_action_bulk_date'} value={date} />\n            <input type=\"hidden\" name={'future_action_bulk_terms'} value={termsString} />\n            <input type=\"hidden\" name={'future_action_bulk_taxonomy'} value={taxonomy} />\n            <input type=\"hidden\" name={'future_action_bulk_view'} value=\"bulk-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = wp.url;","const __WEBPACK_NAMESPACE_OBJECT__ = wp.hooks;","const __WEBPACK_NAMESPACE_OBJECT__ = wp;","import {\n    useState,\n    useEffect,\n    useRef,\n    Fragment\n} from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { apiFetch } from '&wp';\n\nrequire('./css/dateOffsetPreview.css');\n\nexport const DateOffsetPreview = ({\n    offset,\n    label,\n    labelDatePreview,\n    labelOffsetPreview,\n    setValidationErrorCallback,\n    setHasPendingValidationCallback,\n    setHasValidDataCallback,\n    compactView = false\n}) => {\n    const [offsetPreview, setOffsetPreview] = useState('');\n    const [currentTime, setCurrentTime] = useState();\n\n    const apiRequestControllerRef = useRef(new AbortController());\n\n    const validateDateOffset = () => {\n        if (offset) {\n            const controller = apiRequestControllerRef.current;\n\n            if (controller) {\n                controller.abort();\n            }\n\n            apiRequestControllerRef.current = new AbortController();\n            const { signal } = apiRequestControllerRef.current;\n\n            setHasPendingValidationCallback(true);\n\n            apiFetch({\n                path: addQueryArgs(`publishpress-future/v1/settings/validate-expire-offset`),\n                method: 'POST',\n                data: {\n                    offset\n                },\n                signal,\n            }).then((result) => {\n                setHasPendingValidationCallback(false);\n\n                setHasValidDataCallback(result.isValid);\n                setValidationErrorCallback(result.message);\n\n                if (result.isValid) {\n                    setOffsetPreview(result.preview);\n                    setCurrentTime(result.currentTime);\n                } else {\n                    setOffsetPreview('');\n                }\n            }).catch((error) => {\n                if (error.name === 'AbortError') {\n                    return;\n                }\n\n                setHasPendingValidationCallback(false);\n                setHasValidDataCallback(false);\n                setValidationErrorCallback(error.message);\n                setOffsetPreview('');\n            });\n        }\n    }\n\n    useEffect(() => {\n        validateDateOffset();\n    }, [offset]);\n\n    const compactClass = compactView ? ' compact' : '';\n\n    return (\n        <Fragment>\n            { offset && (\n                <div className={'publishpress-future-date-preview' + compactClass}>\n                    <h4>{ label }</h4>\n                    <div className=\"publishpress-future-date-preview-body\">\n                        <div>\n                            <span className=\"publishpress-future-date-preview-label\">{ labelDatePreview }: </span>\n                            <span className=\"publishpress-future-date-preview-value\">{currentTime}</span>\n                        </div>\n                        <div>\n                            <span className=\"publishpress-future-date-preview-label\">{ labelOffsetPreview }: </span>\n                            <span className=\"publishpress-future-date-preview-value\">{offsetPreview}</span>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default DateOffsetPreview;\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\n\nimport {\n    SettingRow,\n    SettingsTable,\n    SelectControl,\n    TextControl,\n    TokensControl,\n    CheckboxControl\n} from './';\nimport { useEffect, useState } from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { applyFilters } from '@wordpress/hooks';\nimport { apiFetch } from '&wp';\nimport DateOffsetPreview from './DateOffsetPreview';\n\nconst { PanelRow } = wp.components;\n\nexport const PostTypeSettingsPanel = function (props) {\n    const originalExpireTypeList = props.expireTypeList[props.postType];\n\n    const [postTypeTaxonomy, setPostTypeTaxonomy] = useState(props.settings.taxonomy);\n    const [termOptions, setTermOptions] = useState([]);\n    const [termsSelectIsLoading, setTermsSelectIsLoading] = useState(false);\n    const [selectedTerms, setSelectedTerms] = useState([]);\n    const [settingHowToExpire, setSettingHowToExpire] = useState(props.settings.howToExpire);\n    const [isActive, setIsActive] = useState(props.settings.active);\n    const [expireOffset, setExpireOffset] = useState(props.settings.defaultExpireOffset);\n    const [emailNotification, setEmailNotification] = useState(props.settings.emailNotification);\n    const [isAutoEnabled, setIsAutoEnabled] = useState(props.settings.autoEnabled);\n    const [hasValidData, setHasValidData] = useState(true);\n    const [validationError, setValidationError] = useState('');\n    const [taxonomyLabel, setTaxonomyLabel] = useState('');\n    const [howToExpireList, setHowToExpireList] = useState(originalExpireTypeList);\n    const [newStatus, setNewStatus] = useState(props.settings.newStatus);\n    const [hasPendingValidation, setHasPendingValidation] = useState(false);\n\n    const offset = expireOffset ? expireOffset : props.settings.globalDefaultExpireOffset;\n\n    const taxonomyRelatedActions = [\n        'category',\n        'category-add',\n        'category-remove',\n        'category-remove-all'\n    ];\n\n    const onChangeTaxonomy = function (value) {\n        setPostTypeTaxonomy(value);\n    };\n\n    const onChangeTerms = (value) => {\n        setSelectedTerms(value);\n    };\n\n    const onChangeHowToExpire = (value) => {\n        setSettingHowToExpire(value);\n    }\n\n    const onChangeActive = (value) => {\n        setIsActive(value);\n    }\n\n    const onChangeExpireOffset = (value) => {\n        setExpireOffset(value);\n    }\n\n    const onChangeEmailNotification = (value) => {\n        setEmailNotification(value);\n    }\n\n    const onChangeAutoEnabled = (value) => {\n        setIsAutoEnabled(value);\n    }\n\n    useEffect(() => {\n        // Remove items from expireTypeList if related to taxonomies and there is no taxonmoy for the post type\n        if (props.taxonomiesList.length === 0) {\n            let newExpireTypeList = [];\n\n            newExpireTypeList = howToExpireList.filter((item) => {\n                return taxonomyRelatedActions.indexOf(item.value) === -1;\n            });\n\n            setHowToExpireList(newExpireTypeList);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!postTypeTaxonomy || !props.taxonomiesList) {\n            return;\n        }\n\n        setTermsSelectIsLoading(true);\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${postTypeTaxonomy}`),\n        }).then((result) => {\n            let options = [];\n\n            let settingsTermsOptions = null;\n            let option;\n\n            result.terms.forEach(term => {\n                option = { value: term.id, label: term.name };\n                options.push(option);\n\n                if (postTypeTaxonomy === props.settings.taxonomy && props.settings.terms.includes(term.id)) {\n                    if (settingsTermsOptions === null) {\n                        settingsTermsOptions = [];\n                    }\n\n                    settingsTermsOptions.push(option.label);\n                }\n            });\n\n            setTermOptions(options);\n            setSelectedTerms(settingsTermsOptions);\n            setTermsSelectIsLoading(false);\n        });\n\n        props.taxonomiesList.forEach((taxonomy) => {\n            if (taxonomy.value === postTypeTaxonomy) {\n                setTaxonomyLabel(taxonomy.label);\n            }\n        });\n    }, [postTypeTaxonomy]);\n\n    useEffect(() => {\n        if (!taxonomyLabel) {\n            return;\n        }\n\n        // Update the list of actions replacing the taxonomy name.\n        let newExpireTypeList = [];\n\n        originalExpireTypeList.forEach((expireType) => {\n            let label = expireType.label;\n\n            if (taxonomyRelatedActions.indexOf(expireType.value) !== -1) {\n                label = label.replace('%s', taxonomyLabel.toLowerCase());\n            }\n\n            newExpireTypeList.push({\n                value: expireType.value,\n                label: label\n            });\n        });\n\n        setHowToExpireList(newExpireTypeList);\n    }, [taxonomyLabel]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid(props.postType);\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid(props.postType);\n        }\n    }, [hasValidData]);\n\n    useEffect(() => {\n        if (hasPendingValidation && props.onValidationStarted) {\n            props.onValidationStarted(props.postType);\n        }\n\n        if (!hasPendingValidation && props.onValidationFinished) {\n            props.onValidationFinished(props.postType);\n        }\n    }, [hasPendingValidation]);\n\n    const termOptionsLabels = termOptions.map((term) => term.label);\n\n    let settingsRows = [\n        <SettingRow label={props.text.fieldActive} key={'expirationdate_activemeta-' + props.postType}>\n            <CheckboxControl\n                name={'expirationdate_activemeta-' + props.postType}\n                checked={isActive || false}\n                label={props.text.fieldActiveLabel}\n                onChange={onChangeActive}\n            />\n        </SettingRow>\n    ];\n\n    if (isActive) {\n        settingsRows.push(\n            <SettingRow label={props.text.fieldAutoEnable} key={'expirationdate_autoenable-' + props.postType}>\n                <CheckboxControl\n                    name={'expirationdate_autoenable-' + props.postType}\n                    checked={isAutoEnabled || false}\n                    label={props.text.fieldAutoEnableLabel}\n                    onChange={onChangeAutoEnabled}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldTaxonomy} key={'expirationdate_taxonomy-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_taxonomy-' + props.postType}\n                    options={props.taxonomiesList}\n                    selected={postTypeTaxonomy}\n                    noItemFoundMessage={props.text.noItemsfound}\n                    description={props.text.fieldTaxonomyDescription}\n                    data={props.postType}\n                    onChange={onChangeTaxonomy}\n                >\n                </SelectControl>\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldHowToExpire} key={'expirationdate_expiretype-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_expiretype-' + props.postType}\n                    className={'pe-howtoexpire'}\n                    options={howToExpireList}\n                    description={props.text.fieldHowToExpireDescription}\n                    selected={settingHowToExpire}\n                    onChange={onChangeHowToExpire}\n                />\n\n                {settingHowToExpire === 'change-status' &&\n                    <SelectControl\n                        name={'expirationdate_newstatus-' + props.postType}\n                        options={props.statusesList}\n                        selected={newStatus}\n                        onChange={setNewStatus}\n                    />\n                }\n\n                {(props.taxonomiesList.length > 0 && (['category', 'category-add', 'category-remove'].indexOf(settingHowToExpire) > -1)) &&\n                    <TokensControl\n                        label={props.text.fieldTerm}\n                        name={'expirationdate_terms-' + props.postType}\n                        options={termOptionsLabels}\n                        value={selectedTerms}\n                        isLoading={termsSelectIsLoading}\n                        onChange={onChangeTerms}\n                        description={props.text.fieldTermDescription}\n                        maxSuggestions={1000}\n                        expandOnFocus={true}\n                        autoSelectFirstMatch={true}\n                    />\n                }\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldDefaultDateTimeOffset} key={'expired-custom-date-' + props.postType}>\n                <TextControl\n                    name={'expired-custom-date-' + props.postType}\n                    value={expireOffset}\n                    loading={hasPendingValidation}\n                    placeholder={props.settings.globalDefaultExpireOffset}\n                    description={props.text.fieldDefaultDateTimeOffsetDescription}\n                    unescapedDescription={true}\n                    onChange={onChangeExpireOffset}\n                />\n\n                <DateOffsetPreview\n                    offset={offset}\n                    label={props.text.datePreview}\n                    labelDatePreview={props.text.datePreviewCurrent}\n                    labelOffsetPreview={props.text.datePreviewComputed}\n                    setValidationErrorCallback={setValidationError}\n                    setHasPendingValidationCallback={setHasPendingValidation}\n                    setHasValidDataCallback={setHasValidData}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldWhoToNotify} key={'expirationdate_emailnotification-' + props.postType}>\n                <TextControl\n                    name={'expirationdate_emailnotification-' + props.postType}\n                    className=\"large-text\"\n                    value={emailNotification}\n                    description={props.text.fieldWhoToNotifyDescription}\n                    onChange={onChangeEmailNotification}\n                />\n            </SettingRow>\n        );\n    }\n\n    settingsRows = applyFilters('expirationdate_settings_posttype', settingsRows, props, isActive, useState);\n\n    const fieldSetClassNames = props.isVisible ? 'pe-settings-fieldset' : 'pe-settings-fieldset hidden';\n\n    return (\n        <div className={fieldSetClassNames}>\n            <SettingsTable bodyChildren={settingsRows} />\n\n            {! hasValidData && (\n                <PanelRow>\n                    <div className=\"publishpress-future-notice publishpress-future-notice-error\">\n                        <strong>{props.text.error}:</strong> {validationError}\n                    </div>\n                </PanelRow>\n            )}\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment, useState  } from \"@wordpress/element\";\nimport { CheckboxControl as WPCheckboxControl } from \"@wordpress/components\";\n\nexport const CheckboxControl = function (props) {\n    const [checked, setChecked] = useState(props.checked || false);\n\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        setChecked(value);\n\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPCheckboxControl\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                checked={checked || false}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2024, Ramble Ventures\n */\nimport { Fragment } from \"@wordpress/element\";\nimport { SelectControl as WPSelectControl } from \"@wordpress/components\";\n\nexport const SelectControl = function (props) {\n    const onChange = (value) => {\n        props.onChange(value);\n    };\n\n    return (\n        <Fragment>\n            {props.options.length === 0 && (\n                <div>{props.noItemFoundMessage}</div>\n            )}\n\n            {props.options.length > 0 && (\n                <WPSelectControl\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.selected}\n                    onChange={onChange}\n                    data-data={props.data}\n                    options={props.options}\n                />\n            )}\n\n            {props.children}\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","import { formatUnixTimeToTimestamp, getCurrentTimeAsTimestamp, normalizeUnixTimeToSeconds } from './time';\nimport { isNumber } from './utils';\nimport { register, createReduxStore } from '@wordpress/data';\n\nexport const createStore = (props) => {\n    if (props.defaultState.terms && typeof props.defaultState.terms === 'string') {\n        props.defaultState.terms = props.defaultState.terms.split(',').map(term => parseInt(term));\n    }\n\n    let defaultState = {\n        action: props.defaultState.action,\n        date: props.defaultState.date ? props.defaultState.date : getCurrentTimeAsTimestamp(),\n        enabled: props.defaultState.autoEnable,\n        terms: props.defaultState.terms ? props.defaultState.terms : [],\n        taxonomy: props.defaultState.taxonomy ? props.defaultState.taxonomy : null,\n        newStatus: props.defaultState.newStatus ? props.defaultState.newStatus : 'draft',\n        termsListByName: null,\n        termsListById: null,\n        taxonomyName: null,\n        isFetchingTerms: false,\n        changeAction: 'no-change',\n        calendarIsVisible: true,\n        hasValidData: true,\n        extraData: props.defaultState.extraData ? props.defaultState.extraData : {},\n    }\n\n    const store = createReduxStore(props.name, {\n        reducer(state = defaultState, action) {\n            switch (action.type) {\n                case 'SET_ACTION':\n                    return {\n                        ...state,\n                        action: action.action,\n                    };\n                case 'SET_NEW_STATUS':\n                    return {\n                        ...state,\n                        newStatus: action.newStatus,\n                    };\n                case 'SET_DATE':\n                    // Make sure the date is a number, if it is a string with only numbers\n                    if (typeof action.date !== 'number' && isNumber(action.date)) {\n                        action.date = parseInt(action.date);\n                    }\n\n                    // If string, convert to unix time\n                    if (typeof action.date === 'string') {\n                        action.date = new Date(action.date).getTime();\n                    }\n\n                    // Make sure the time is always in seconds\n                    action.date = normalizeUnixTimeToSeconds(action.date);\n\n                    // Convert to formated string format, considering it is in the site's timezone\n                    action.date = formatUnixTimeToTimestamp(action.date);\n\n                    return {\n                        ...state,\n                        date: action.date,\n                    }\n                case 'SET_ENABLED':\n                    return {\n                        ...state,\n                        enabled: action.enabled,\n                    }\n                case 'SET_TERMS':\n                    return {\n                        ...state,\n                        terms: action.terms,\n                    }\n                case 'SET_TAXONOMY':\n                    return {\n                        ...state,\n                        taxonomy: action.taxonomy,\n                    }\n                case 'SET_TERMS_LIST_BY_NAME':\n                    return {\n                        ...state,\n                        termsListByName: action.termsListByName,\n                    }\n                case 'SET_TERMS_LIST_BY_ID':\n                    return {\n                        ...state,\n                        termsListById: action.termsListById,\n                    }\n                case 'SET_TAXONOMY_NAME':\n                    return {\n                        ...state,\n                        taxonomyName: action.taxonomyName,\n                    }\n                case 'SET_CHANGE_ACTION':\n                    return {\n                        ...state,\n                        changeAction: action.changeAction,\n                    }\n                case 'SET_CALENDAR_IS_VISIBLE':\n                    return {\n                        ...state,\n                        calendarIsVisible: action.calendarIsVisible,\n                    }\n                case 'SET_HAS_VALID_DATA':\n                    return {\n                        ...state,\n                        hasValidData: action.hasValidData,\n                    }\n\n                case 'SET_EXTRA_DATA':\n                    return {\n                        ...state,\n                        extraData: {\n                            ...action.extraData,\n                        }\n                    }\n\n                case 'SET_EXTRA_DATA_BY_NAME':\n                    const extraData = {\n                        ...state.extraData,\n                        [action.name]: action.value\n                    };\n\n                    return {\n                        ...state,\n                        extraData: {...extraData}\n                    }\n            }\n\n            return state;\n        },\n        actions: {\n            setAction(action) {\n                return {\n                    type: 'SET_ACTION',\n                    action: action\n                };\n            },\n            setNewStatus(newStatus) {\n                return {\n                    type: 'SET_NEW_STATUS',\n                    newStatus: newStatus\n                };\n            },\n            setDate(date) {\n                return {\n                    type: 'SET_DATE',\n                    date: date\n                };\n            },\n            setEnabled(enabled) {\n                return {\n                    type: 'SET_ENABLED',\n                    enabled: enabled\n                };\n            },\n            setTerms(terms) {\n                return {\n                    type: 'SET_TERMS',\n                    terms: terms\n                };\n            },\n            setTaxonomy(taxonomy) {\n                return {\n                    type: 'SET_TAXONOMY',\n                    taxonomy: taxonomy\n                };\n            },\n            setTermsListByName(termsListByName) {\n                return {\n                    type: 'SET_TERMS_LIST_BY_NAME',\n                    termsListByName: termsListByName\n                };\n            },\n            setTermsListById(termsListById) {\n                return {\n                    type: 'SET_TERMS_LIST_BY_ID',\n                    termsListById: termsListById\n                };\n            },\n            setTaxonomyName(taxonomyName) {\n                return {\n                    type: 'SET_TAXONOMY_NAME',\n                    taxonomyName: taxonomyName\n                };\n            },\n            setIsFetchingTerms(isFetchingTerms) {\n                return {\n                    type: 'SET_IS_FETCHING_TERMS',\n                    isFetchingTerms: isFetchingTerms\n                }\n            },\n            setChangeAction(changeAction) {\n                return {\n                    type: 'SET_CHANGE_ACTION',\n                    changeAction: changeAction\n                }\n            },\n            setCalendarIsVisible(calendarIsVisible) {\n                return {\n                    type: 'SET_CALENDAR_IS_VISIBLE',\n                    calendarIsVisible: calendarIsVisible\n                }\n            },\n            setHasValidData(hasValidData) {\n                return {\n                    type: 'SET_HAS_VALID_DATA',\n                    hasValidData: hasValidData\n                }\n            },\n            setExtraData(extraData) {\n                return {\n                    type: 'SET_EXTRA_DATA',\n                    extraData: extraData\n                }\n            },\n            setExtraDataByName(name, value) {\n                return {\n                    type: 'SET_EXTRA_DATA_BY_NAME',\n                    name: name,\n                    value: value\n                }\n            }\n        },\n        selectors: {\n            getAction(state) {\n                return state.action;\n            },\n            getNewStatus(state) {\n                return state.newStatus;\n            },\n            getDate(state) {\n                return state.date;\n            },\n            getEnabled(state) {\n                return state.enabled;\n            },\n            getTerms(state) {\n                return state.terms;\n            },\n            getTaxonomy(state) {\n                return state.taxonomy;\n            },\n            getTermsListByName(state) {\n                return state.termsListByName;\n            },\n            getTermsListById(state) {\n                return state.termsListById;\n            },\n            getTaxonomyName(state) {\n                return state.taxonomyName;\n            },\n            getIsFetchingTerms(state) {\n                return state.isFetchingTerms;\n            },\n            getChangeAction(state) {\n                return state.changeAction;\n            },\n            getCalendarIsVisible(state) {\n                return state.calendarIsVisible;\n            },\n            getHasValidData(state) {\n                return state.hasValidData;\n            },\n            getExtraData(state) {\n                return state.extraData;\n            },\n            getExtraDataByName(state, name) {\n                return state.extraData[name] || null;\n            }\n        }\n    });\n\n    register(store);\n\n    return store;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window;","const __WEBPACK_NAMESPACE_OBJECT__ = publishpressFutureBulkEditConfig;","import { FutureActionPanelBulkEdit } from './components';\nimport { createStore } from './data';\nimport { createRoot } from 'react-dom/client';\nimport { select, dispatch } from '@wordpress/data';\nimport { inlineEditPost } from \"&window\";\nimport {\n    postTypeDefaultConfig,\n    defaultDate,\n    postType,\n    isNewPost,\n    actionsSelectOptions,\n    is12Hour,\n    timeFormat,\n    startOfWeek,\n    strings,\n    taxonomyName,\n    nonce,\n    statusesSelectOptions,\n    hideCalendarByDefault\n} from \"&config.bulk-edit\";\n\nconst storeName = 'publishpress-future/future-action-bulk-edit';\nconst delayToUnmountAfterSaving = 1000;\n\n// We create a copy of the WP inline set bulk function\nconst wpInlineSetBulk = inlineEditPost.setBulk;\nconst wpInlineEditRevert = inlineEditPost.revert;\n\nconst getPostId = (id) => {\n    // If id is a string or a number, return it directly\n    if (typeof id === 'string' || typeof id === 'number') {\n        return id;\n    }\n\n    // Otherwise, assume it's an HTML element and extract the post ID\n    const trElement = id.closest('tr');\n    const trId = trElement.id;\n    const postId = trId.split('-')[1];\n\n    return postId;\n}\n\n/**\n * We override the function with our own code so we can detect when\n * the inline edit row is displayed to recreate the React component.\n */\ninlineEditPost.setBulk = function (id) {\n    // Call the original WP edit function.\n    wpInlineSetBulk.apply(this, arguments);\n\n    if (select(storeName)) {\n        dispatch(storeName).setAction(postTypeDefaultConfig.expireType);\n        dispatch(storeName).setDate(postTypeDefaultConfig.defaultDate);\n        dispatch(storeName).setTaxonomy(postTypeDefaultConfig.taxonomy);\n        dispatch(storeName).setTerms(postTypeDefaultConfig.terms);\n        dispatch(storeName).setChangeAction('no-change');\n    } else {\n        createStore({\n            name: storeName,\n            defaultState: {\n                action: postTypeDefaultConfig.expireType,\n                newStatus: postTypeDefaultConfig.newStatus,\n                date: defaultDate,\n                taxonomy: postTypeDefaultConfig.taxonomy,\n                terms: postTypeDefaultConfig.terms,\n                changeAction: 'no-change',\n            }\n        });\n    }\n\n    const container = document.getElementById(\"publishpress-future-bulk-edit\");\n    const root = createRoot(container);\n\n    const saveButton = document.querySelector('#bulk_edit');\n    if (saveButton) {\n        saveButton.onclick = function() {\n            setTimeout(() => {\n                root.unmount();\n            }, delayToUnmountAfterSaving);\n        };\n    }\n\n    const component = (\n        <FutureActionPanelBulkEdit\n            storeName={storeName}\n            postType={postType}\n            isNewPost={isNewPost}\n            actionsSelectOptions={actionsSelectOptions}\n            statusesSelectOptions={statusesSelectOptions}\n            is12Hour={is12Hour}\n            timeFormat={timeFormat}\n            startOfWeek={startOfWeek}\n            strings={strings}\n            taxonomyName={taxonomyName}\n            nonce={nonce}\n            hideCalendarByDefault={hideCalendarByDefault}\n        />\n    );\n\n    root.render(component);\n\n    inlineEditPost.revert = function () {\n        root.unmount();\n\n        // Call the original WP revert function.\n        wpInlineEditRevert.apply(this, arguments);\n    };\n};\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","m","createRoot","hydrateRoot","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","attributes","styleElement","nonce","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","ReactDOM","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","nc","getElementByName","name","getElementsByName","wp","components","ToggleArrowButton","props","iconExpanded","iconCollapsed","icon","isExpanded","title","titleExpanded","titleCollapsed","React","Button","isSmall","onClick","className","formatUnixTimeToTimestamp","unixTimestamp","date","Date","normalizeUnixTimeToSeconds","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeIsInSeconds","time","parseInt","DateTimePicker","_ref","currentDate","onChange","is12Hour","startOfWeek","WPDateTimePicker","__nextRemoveHelpButton","ToggleCalendarDatePicker","strings","onToggleCalendar","onChangeDate","useEffect","toggleButtonElement","dateTimeElement","nextElementSibling","timeElement","dateElement","nextSibling","insertBefore","Fragment","hideCalendar","showCalendar","plugins","FutureActionPanelAfterActionField","children","Fill","Slot","_extends","FutureActionPanelTop","_wp$components","PanelRow","CheckboxControl","SelectControl","FormTokenField","Spinner","BaseControl","_wp$element","useState","decodeEntities","htmlEntities","addQueryArgs","url","_wp$data","useSelect","useDispatch","apiFetch","FutureActionPanel","_useSelect","select","action","storeName","getAction","enabled","getEnabled","terms","getTerms","taxonomy","getTaxonomy","taxonomyName","getTaxonomyName","termsListByName","getTermsListByName","termsListById","getTermsListById","isFetchingTerms","getIsFetchingTerms","calendarIsVisible","getCalendarIsVisible","hasValidData","getHasValidData","newStatus","getNewStatus","_useState2","_slicedToArray","validationError","setValidationError","_useDispatch","setAction","setDate","setEnabled","setTerms","setTaxonomy","setTermsListByName","setTermsListById","setTaxonomyName","setIsFetchingTerms","setCalendarIsVisible","setHasValidData","setNewStatus","insertTerm","term","description","link","slug","callOnChangeData","attribute","onChangeData","handleEnabledChange","isChecked","fetchTerms","path","then","forEach","getCalendarIsVisibleFromStorage","localStorage","getItem","context","autoEnableAndHideCheckbox","hideCalendarByDefault","isCleanNewPost","setItem","onDataIsValid","onDataIsInvalid","array","selectedTerms","_typeof","mapTermsListById","Array","isArray","values","filter","termsListByNameKeys","keys","is24hour","panelClass","contentPanelClass","datePanelClass","timeFormat","actionsSelectOptions","indexOf","HelpText","string","href","parts","split","shift","_step","_iterator","_createForOfIteratorHelper","s","done","_part$split2","before","after","err","f","replaceCurlyBracketsWithLink","timezoneSettingsHelp","displayTaxonomyField","String","includes","termsFieldLabel","newTerms","replace","removeTerms","addTerms","valid","errorActionRequired","errorDateRequired","errorDateInPast","isTermRequired","noTermIsSelected","errorTermsRequired","validateData","SlotFillProvider","type","fillProps","label","enablePostExpiration","checked","statusesSelectOptions","loading","noTaxonomyFound","noTermsFound","suggestions","mapTermsListByName","placeholder","addTermsPlaceholder","maxSuggestions","onFocus","jQuery","addClass","__experimentalExpandOnFocus","__experimentalAutoSelectFirstMatch","PluginArea","scope","FutureActionPanelBulkEdit","changeAction","getChangeAction","setChangeAction","termsString","noChange","changeAdd","addOnly","changeOnly","removeOnly","futureActionUpdate","postType","isNewPost","hooks","require","noItemFoundMessage","WPSelectControl","selected","publishpressFutureBulkEditConfig","wpInlineSetBulk","inlineEditPost","setBulk","wpInlineEditRevert","revert","arguments","dispatch","postTypeDefaultConfig","expireType","defaultDate","defaultState","getTime","autoEnable","extraData","store","createReduxStore","reducer","state","_objectSpread","isNaN","_defineProperty","actions","setExtraData","setExtraDataByName","selectors","getExtraData","getExtraDataByName","register","createStore","container","getElementById","root","saveButton","onclick","setTimeout","unmount","component","render"],"sourceRoot":""}