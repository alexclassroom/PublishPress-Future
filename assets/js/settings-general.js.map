{"version":3,"file":"settings-general.js","mappings":"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AgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA,MAAwG;AACxG,MAA8F;AAC9F,MAAqG;AACrG,MAAwH;AACxH,MAAiH;AACjH,MAAiH;AACjH,MAA4K;AAC5K;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;AACrC,iBAAiB,uGAAa;AAC9B,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,0IAAO;;;;AAIsH;AAC9I,OAAO,iEAAe,0IAAO,IAAI,0IAAO,UAAU,0IAAO,mBAAmB,EAAC;;;;;;;;;;;ACxBhE;;AAEb;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnFa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5Da;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACbA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;;;;;;;;;ypBCAA;;;;AAIA;;AAEA;;AAOA;;AAIA,IAAMqa,oBAAoB,SAApBA,iBAAoB,CAAC9a,KAAD,EAAW;AAAA,oBACK,uBAAS,IAAT,CADL;AAAA;AAAA,QAC1B+a,WAD0B;AAAA,QACbC,cADa;;AAAA,qBAEa,uBAAS,EAAT,CAFb;AAAA;AAAA,QAE1BnV,eAF0B;AAAA,QAETC,kBAFS;;AAAA,qBAGuB,uBAAS,KAAT,CAHvB;AAAA;AAAA,QAG1BmL,oBAH0B;AAAA,QAGJC,uBAHI;;AAAA,qBAIL,uBAAS,EAAT,CAJK;AAAA;AAAA,QAI1BnQ,MAJ0B;AAAA,QAIlBka,SAJkB;;AAMjC,QAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,YAAD,EAAkB;AAC3C,YAAIA,YAAJ,EAAkB;AACdH,2BAAe,KAAf;AACAlV,+BAAmBqV,YAAnB;AACH,SAHD,MAGO;AACHH,2BAAe,IAAf;AACAlV,+BAAmB,EAAnB;AACH;AACJ,KARD;;AAUA,QAAMoM,sBAAsB,SAAtBA,mBAAsB,CAACkJ,UAAD,EAAgB;AACxClK,gCAAwBkK,UAAxB;AACH,KAFD;;AAIA,QAAMjJ,uBAAuB,SAAvBA,oBAAuB,CAAC7P,OAAD,EAAa;AACtC4O,gCAAwB,KAAxB;AACA8J,uBAAe1Y,OAAf;AACH,KAHD;;AAKA,4BAAU,YAAM;AACZmJ,eAAO,iCAAP,EAA0C4P,EAA1C,CAA6C,OAA7C,EAAsD,YAAY;AAC9DJ,sBAAUxP,OAAO,IAAP,EAAa6P,GAAb,EAAV;AACH,SAFD;;AAIAL,kBAAUxP,OAAO,iCAAP,EAA0C6P,GAA1C,EAAV;AACH,KAND,EAMG,EANH;;AAQA,WACI;AAAC,2BAAD;AAAA;AACI,4BAAC,6BAAD;AACI,oBAAQva,MADZ;AAEI,mBAAOuR,aAAKe,WAFhB;AAGI,8BAAkBf,aAAKgB,kBAH3B;AAII,gCAAoBhB,aAAKiB,mBAJ7B;AAKI,wCAA4B2H,oBALhC;AAMI,6CAAiChJ,mBANrC;AAOI,qCAAyBC;AAP7B,UADJ;AAWK,SAAE4I,WAAF,IAAiBlV,eAAjB,IACG;AAAA;AAAA,cAAK,WAAU,6DAAf;AACI;AAAA;AAAA;AAAIyM,6BAAK5P,KAAT;AAAA;AAAkBmD;AAAlB;AADJ;AAZR,KADJ;AAmBH,CApDD;;AAsDA,IAAM0V,YAAY7M,SAAS8M,cAAT,CAAwB,yBAAxB,CAAlB;AACA,IAAMC,YAAa,oBAAC,iBAAD,OAAnB;;AAEA,yBAAWF,SAAX,EAAsBG,MAAtB,CAA6BD,SAA7B,E","sources":["webpack://post-expirator/./assets/jsx/components/ButtonsPanel.jsx","webpack://post-expirator/./assets/jsx/components/CheckboxControl.jsx","webpack://post-expirator/./assets/jsx/components/DateOffsetPreview.jsx","webpack://post-expirator/./assets/jsx/components/DateTimePicker.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanel.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelAfterActionField.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBlockEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelBulkEdit.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelClassicEditor.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelQuickEdit.jsx","webpack://post-expirator/./assets/jsx/components/FutureActionPanelTop.jsx","webpack://post-expirator/./assets/jsx/components/NonceControl.jsx","webpack://post-expirator/./assets/jsx/components/PostTypeSettingsPanel.jsx","webpack://post-expirator/./assets/jsx/components/PostTypesSettingsPanels.jsx","webpack://post-expirator/./assets/jsx/components/SelectControl.jsx","webpack://post-expirator/./assets/jsx/components/SettingRow.jsx","webpack://post-expirator/./assets/jsx/components/SettingsFieldset.jsx","webpack://post-expirator/./assets/jsx/components/SettingsForm.jsx","webpack://post-expirator/./assets/jsx/components/SettingsSection.jsx","webpack://post-expirator/./assets/jsx/components/SettingsTable.jsx","webpack://post-expirator/./assets/jsx/components/Spinner.jsx","webpack://post-expirator/./assets/jsx/components/SubmitButton.jsx","webpack://post-expirator/./assets/jsx/components/TextControl.jsx","webpack://post-expirator/./assets/jsx/components/ToggleArrowButton.jsx","webpack://post-expirator/./assets/jsx/components/ToggleCalendarDatePicker.jsx","webpack://post-expirator/./assets/jsx/components/TokensControl.jsx","webpack://post-expirator/./assets/jsx/components/TrueFalseControl.jsx","webpack://post-expirator/./assets/jsx/components/index.jsx","webpack://post-expirator/./assets/jsx/time.jsx","webpack://post-expirator/./assets/jsx/utils.jsx","webpack://post-expirator/./assets/jsx/components/css/dateOffsetPreview.css","webpack://post-expirator/./node_modules/css-loader/dist/runtime/api.js","webpack://post-expirator/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://post-expirator/./assets/jsx/components/css/dateOffsetPreview.css?541a","webpack://post-expirator/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://post-expirator/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://post-expirator/external var \"publishpressFutureSettingsGeneralConfig\"","webpack://post-expirator/external var \"wp\"","webpack://post-expirator/external var \"wp.components\"","webpack://post-expirator/external var \"wp.data\"","webpack://post-expirator/external var \"wp.element\"","webpack://post-expirator/external var \"wp.hooks\"","webpack://post-expirator/external var \"wp.plugins\"","webpack://post-expirator/external var \"wp.url\"","webpack://post-expirator/webpack/bootstrap","webpack://post-expirator/webpack/runtime/compat get default export","webpack://post-expirator/webpack/runtime/define property getters","webpack://post-expirator/webpack/runtime/hasOwnProperty shorthand","webpack://post-expirator/webpack/runtime/make namespace object","webpack://post-expirator/webpack/runtime/nonce","webpack://post-expirator/./assets/jsx/settings-general.jsx"],"sourcesContent":["/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const ButtonsPanel = function (props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState  } from \"@wordpress/element\";\nimport { CheckboxControl as WPCheckboxControl } from \"@wordpress/components\";\n\nexport const CheckboxControl = function (props) {\n    const [checked, setChecked] = useState(props.checked || false);\n\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        setChecked(value);\n\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPCheckboxControl\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                checked={checked || false}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import {\n    useState,\n    useEffect,\n    useRef,\n    Fragment\n} from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { apiFetch } from '&wp';\n\nrequire('./css/dateOffsetPreview.css');\n\nexport const DateOffsetPreview = ({\n    offset,\n    label,\n    labelDatePreview,\n    labelOffsetPreview,\n    setValidationErrorCallback,\n    setHasPendingValidationCallback,\n    setHasValidDataCallback,\n    compactView = false\n}) => {\n    const [offsetPreview, setOffsetPreview] = useState('');\n    const [currentTime, setCurrentTime] = useState();\n\n    const apiRequestControllerRef = useRef(new AbortController());\n\n    const validateDateOffset = () => {\n        if (offset) {\n            const controller = apiRequestControllerRef.current;\n\n            if (controller) {\n                controller.abort();\n            }\n\n            apiRequestControllerRef.current = new AbortController();\n            const { signal } = apiRequestControllerRef.current;\n\n            setHasPendingValidationCallback(true);\n\n            apiFetch({\n                path: addQueryArgs(`publishpress-future/v1/settings/validate-expire-offset`),\n                method: 'POST',\n                data: {\n                    offset\n                },\n                signal,\n            }).then((result) => {\n                setHasPendingValidationCallback(false);\n\n                setHasValidDataCallback(result.isValid);\n                setValidationErrorCallback(result.message);\n\n                if (result.isValid) {\n                    setOffsetPreview(result.preview);\n                    setCurrentTime(result.currentTime);\n                } else {\n                    setOffsetPreview('');\n                }\n            }).catch((error) => {\n                if (error.name === 'AbortError') {\n                    return;\n                }\n\n                setHasPendingValidationCallback(false);\n                setHasValidDataCallback(false);\n                setValidationErrorCallback(error.message);\n                setOffsetPreview('');\n            });\n        }\n    }\n\n    useEffect(() => {\n        validateDateOffset();\n    }, [offset]);\n\n    const compactClass = compactView ? ' compact' : '';\n\n    return (\n        <Fragment>\n            { offset && (\n                <div className={'publishpress-future-date-preview' + compactClass}>\n                    <h4>{ label }</h4>\n                    <div className=\"publishpress-future-date-preview-body\">\n                        <div>\n                            <span className=\"publishpress-future-date-preview-label\">{ labelDatePreview }: </span>\n                            <span className=\"publishpress-future-date-preview-value\">{currentTime}</span>\n                        </div>\n                        <div>\n                            <span className=\"publishpress-future-date-preview-label\">{ labelOffsetPreview }: </span>\n                            <span className=\"publishpress-future-date-preview-value\">{offsetPreview}</span>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default DateOffsetPreview;\n","import { normalizeUnixTimeToMilliseconds } from \"../time\";\nimport { DateTimePicker as WPDateTimePicker } from \"@wordpress/components\";\n\n\nexport const DateTimePicker = ({currentDate, onChange, is12Hour, startOfWeek}) => {\n    if (typeof currentDate === 'number') {\n        currentDate = normalizeUnixTimeToMilliseconds(currentDate);\n    }\n\n    return (\n        <WPDateTimePicker\n            currentDate={currentDate}\n            onChange={onChange}\n            __nextRemoveHelpButton={true}\n            is12Hour={is12Hour}\n            startOfWeek={startOfWeek}\n        />\n    )\n}\n","import { compact } from '../utils';\nimport { ToggleCalendarDatePicker } from './ToggleCalendarDatePicker';\nimport { PluginArea } from '@wordpress/plugins';\nimport { Fill, Slot, SlotFillProvider } from '@wordpress/components';\nimport { FutureActionPanelAfterActionField } from './FutureActionPanelAfterActionField';\nimport { FutureActionPanelTop } from './FutureActionPanelTop';\n\nconst { PanelRow, CheckboxControl, SelectControl, FormTokenField, Spinner, BaseControl } = wp.components;\nconst { Fragment, useEffect, useState } = wp.element;\nconst { decodeEntities } = wp.htmlEntities;\nconst { addQueryArgs } = wp.url;\nconst {\n    useSelect,\n    useDispatch\n} = wp.data;\nconst { apiFetch } = wp;\n\nexport const FutureActionPanel = (props) => {\n    const {\n        action,\n        date,\n        enabled,\n        terms,\n        taxonomy,\n        taxonomyName,\n        termsListByName,\n        termsListById,\n        isFetchingTerms,\n        calendarIsVisible,\n        hasValidData,\n        newStatus,\n    } = useSelect((select) => {\n        return {\n            action: select(props.storeName).getAction(),\n            date: select(props.storeName).getDate(),\n            enabled: select(props.storeName).getEnabled(),\n            terms: select(props.storeName).getTerms(),\n            taxonomy: select(props.storeName).getTaxonomy(),\n            taxonomyName: select(props.storeName).getTaxonomyName(),\n            termsListByName: select(props.storeName).getTermsListByName(),\n            termsListById: select(props.storeName).getTermsListById(),\n            isFetchingTerms: select(props.storeName).getIsFetchingTerms(),\n            calendarIsVisible: select(props.storeName).getCalendarIsVisible(),\n            hasValidData: select(props.storeName).getHasValidData(),\n            newStatus: select(props.storeName).getNewStatus(),\n        };\n    });\n\n    const [validationError, setValidationError] = useState('');\n\n    const {\n        setAction,\n        setDate,\n        setEnabled,\n        setTerms,\n        setTaxonomy,\n        setTermsListByName,\n        setTermsListById,\n        setTaxonomyName,\n        setIsFetchingTerms,\n        setCalendarIsVisible,\n        setHasValidData,\n        setNewStatus\n    } = useDispatch(props.storeName);\n\n    const mapTermsListById = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            return termsListById[term];\n        });\n    }\n\n    const insertTerm = (term) => {\n        termsListByName[term] = { id: term, count: 0, description: \"\", link: \"\", name: term, slug: term, taxonomy: taxonomy };\n        termsListById[term] = term;\n        setTermsListByName(termsListByName);\n        setTermsListById(termsListById);\n        setTerms([...terms, term]);\n\n    }\n\n    const mapTermsListByName = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            if (termsListByName[term]) {\n                return termsListByName[term].id;\n            }\n\n            insertTerm(term);\n\n            return term;\n        });\n    }\n\n    const callOnChangeData = (attribute, value) => {\n        if (typeof props.onChangeData === 'function') {\n            props.onChangeData(attribute, value);\n        }\n    }\n\n    const handleEnabledChange = (isChecked) => {\n        setEnabled(isChecked);\n\n        if (isChecked) {\n            setAction(props.action);\n            setDate(props.date);\n            setNewStatus(props.newStatus);\n            setTerms(props.terms);\n            setTaxonomy(props.taxonomy);\n\n            fetchTerms();\n        }\n\n        callOnChangeData('enabled', isChecked);\n    }\n\n    const handleActionChange = (value) => {\n        setAction(value);\n\n        callOnChangeData('action', value);\n    }\n\n    const handleNewStatusChange = (value) => {\n        setNewStatus(value);\n\n        callOnChangeData('newStatus', value);\n    }\n\n    const handleDateChange = (value) => {\n        setDate(value);\n\n        callOnChangeData('date', value);\n    }\n\n    const handleTermsChange = (value) => {\n        value = mapTermsListByName(value);\n\n        setTerms(value);\n\n        callOnChangeData('terms', value);\n    }\n\n    const fetchTerms = () => {\n        let termsListByName = {};\n        let termsListById = {};\n\n        if (!taxonomy) {\n            return;\n        }\n\n        setIsFetchingTerms(true);\n\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${taxonomy}`),\n        }).then((result) => {\n            result.terms.forEach(term => {\n                termsListByName[decodeEntities(term.name)] = term;\n                termsListById[term.id] = decodeEntities(term.name);\n            });\n\n            setTermsListByName(termsListByName);\n            setTermsListById(termsListById);\n            setTaxonomyName(decodeEntities(result.taxonomyName));\n            setIsFetchingTerms(false);\n        });\n    }\n\n    const storeCalendarIsVisibleOnStorage = (value) => {\n        localStorage.setItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context, value ? '1' : '0');\n    }\n\n    const getCalendarIsVisibleFromStorage = () => {\n        return localStorage.getItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context);\n    }\n\n    useEffect(() => {\n        if (props.autoEnableAndHideCheckbox) {\n            setEnabled(true);\n        } else {\n            setEnabled(props.enabled);\n        }\n\n        setAction(props.action);\n        setNewStatus(props.newStatus);\n        setDate(props.date);\n        setTerms(props.terms);\n        setTaxonomy(props.taxonomy);\n\n        if (getCalendarIsVisibleFromStorage() === null) {\n            setCalendarIsVisible(props.calendarIsVisible);\n        } else {\n            setCalendarIsVisible(getCalendarIsVisibleFromStorage() === '1' && ! props.hideCalendarByDefault);\n        }\n\n        // We need to get the value directly from the props because the value from the store is not updated yet\n        if (props.enabled) {\n            if (props.isCleanNewPost) {\n                // Force populate the default values\n                handleEnabledChange(true);\n            }\n\n            fetchTerms();\n        }\n    }, []);\n\n    useEffect(() => {\n        storeCalendarIsVisibleOnStorage(calendarIsVisible);\n    }, [calendarIsVisible]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid();\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid();\n        }\n    }, [hasValidData]);\n\n    let selectedTerms = [];\n    if (terms && terms.length > 0 && termsListById) {\n        selectedTerms = compact(mapTermsListById(terms));\n\n        if (typeof selectedTerms === 'string') {\n            selectedTerms = [];\n        }\n    }\n\n    let termsListByNameKeys = [];\n    if (typeof termsListByName === 'object' && termsListByName !== null) {\n        termsListByNameKeys = Object.keys(termsListByName);\n    }\n\n    const panelClass = calendarIsVisible ? 'future-action-panel' : 'future-action-panel hidden-calendar';\n    const contentPanelClass = calendarIsVisible ? 'future-action-panel-content' : 'future-action-panel-content hidden-calendar';\n    const datePanelClass = calendarIsVisible ? 'future-action-date-panel' : 'future-action-date-panel hidden-calendar';\n\n    let is24hour;\n    if (props.timeFormat === 'inherited') {\n        is24hour = !props.is12Hour;\n    } else {\n        is24hour = props.timeFormat === '24h';\n    }\n\n    const replaceCurlyBracketsWithLink = (string, href, target) => {\n        const parts = string.split('{');\n        const result = [];\n\n        result.push(parts.shift());\n\n        for (const part of parts) {\n            const [before, after] = part.split('}');\n\n            result.push(\n                <a href={href} target={target} key={href}>{before}</a>\n            );\n\n            result.push(after);\n        }\n\n        return result;\n    };\n\n    // Remove items from actions list if related to taxonomies and there is no taxonmoy for the post type\n    let actionsSelectOptions = props.actionsSelectOptions;\n    if (!props.taxonomy) {\n        actionsSelectOptions = props.actionsSelectOptions.filter((item) => {\n            return ['category', 'category-add', 'category-remove', 'category-remove-all'].indexOf(item.value) === -1;\n        });\n    }\n\n    const HelpText = replaceCurlyBracketsWithLink(props.strings.timezoneSettingsHelp, '/wp-admin/options-general.php#timezone_string', '_blank');\n    const displayTaxonomyField = String(action).includes('category') && action !== 'category-remove-all';\n\n    let termsFieldLabel = taxonomyName;\n    switch (action) {\n        case 'category':\n            termsFieldLabel = props.strings.newTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-remove':\n            termsFieldLabel = props.strings.removeTerms.replace('%s', taxonomyName);\n            break;\n        case 'category-add':\n            termsFieldLabel = props.strings.addTerms.replace('%s', taxonomyName);\n            break;\n    }\n\n    const validateData = () => {\n        let valid = true;\n\n        if (!enabled) {\n            setValidationError('');\n            return true;\n        }\n\n        if (!action) {\n            setValidationError(props.strings.errorActionRequired);\n            valid = false;\n        }\n\n        if (!date) {\n            setValidationError(props.strings.errorDateRequired);\n            valid = false;\n        }\n\n        // Check if the date is in the past\n        if (date && new Date(date) < new Date()) {\n            setValidationError(props.strings.errorDateInPast);\n            valid = false;\n        }\n\n        const isTermRequired = ['category', 'category-add', 'category-remove'].includes(action);\n        const noTermIsSelected = terms.length === 0 || (terms.length === 1 && (terms[0] === '' || terms[0] === '0'));\n\n        if (isTermRequired && noTermIsSelected) {\n            setValidationError(props.strings.errorTermsRequired);\n            valid = false;\n        }\n\n        if (valid) {\n            setValidationError('');\n        }\n\n        return valid;\n    }\n\n    useEffect(() => {\n        if (!enabled) {\n            setHasValidData(true);\n            setValidationError('');\n\n            return;\n        }\n\n        setHasValidData(validateData());\n    }, [action, date, enabled, terms, taxonomy]);\n\n    // This adds a 'cancel' class to the input when the user clicks on the\n    // field to prevent the form from being submitted. This is a workaround\n    // for the issue on the quick-edit form where the form is submitted when\n    // the user presses the 'Enter' key trying to add a term to the field.\n    const forceIgnoreAutoSubmitOnEnter = (e) => {\n        jQuery(e.target).addClass('cancel');\n    }\n\n    return (\n        <SlotFillProvider>\n            <div className={panelClass}>\n                {props.autoEnableAndHideCheckbox && (\n                    <input type=\"hidden\" name={'future_action_enabled'} value={1} />\n                )}\n\n                <FutureActionPanelTop.Slot fillProps={{ storeName: props.storeName }} />\n\n                {!props.autoEnableAndHideCheckbox && (\n                    <PanelRow>\n                        <CheckboxControl\n                            label={props.strings.enablePostExpiration}\n                            checked={enabled || false}\n                            onChange={handleEnabledChange}\n                        />\n                    </PanelRow>\n                )}\n\n                {enabled && (\n                    <Fragment>\n                        <PanelRow className={contentPanelClass + ' future-action-full-width'}>\n                            <SelectControl\n                                label={props.strings.action}\n                                value={action}\n                                options={actionsSelectOptions}\n                                onChange={handleActionChange}\n                            />\n                        </PanelRow>\n\n                        <FutureActionPanelAfterActionField.Slot fillProps={{ storeName: props.storeName }} />\n\n                        {action === 'change-status' &&\n                            <PanelRow className=\"new-status\">\n                                <SelectControl\n                                    label={props.strings.newStatus}\n                                    options={props.statusesSelectOptions}\n                                    value={newStatus}\n                                    onChange={handleNewStatusChange}\n                                />\n                            </PanelRow>\n                        }\n\n                        {\n                            displayTaxonomyField && (\n                                isFetchingTerms && (\n                                    <PanelRow>\n                                        <BaseControl label={taxonomyName}>\n                                            {`${props.strings.loading} (${taxonomyName})`}\n                                            <Spinner />\n                                        </BaseControl>\n                                    </PanelRow>\n                                )\n                                || (!taxonomy && (\n                                    <PanelRow>\n                                        <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                            <div>\n                                                <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTaxonomyFound}\n                                            </div>\n                                        </BaseControl>\n                                    </PanelRow>\n                                )\n                                    || (\n                                        termsListByNameKeys.length === 0 && (\n                                            <PanelRow>\n                                                <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                                    <div>\n                                                        <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTermsFound}\n                                                    </div>\n                                                </BaseControl>\n                                            </PanelRow>\n                                        )\n                                        || (\n                                            <PanelRow className=\"future-action-full-width\">\n                                                <BaseControl>\n                                                    <FormTokenField\n                                                        label={termsFieldLabel}\n                                                        value={selectedTerms}\n                                                        suggestions={termsListByNameKeys}\n                                                        onChange={handleTermsChange}\n                                                        placeholder={props.strings.addTermsPlaceholder}\n                                                        maxSuggestions={1000}\n                                                        onFocus={forceIgnoreAutoSubmitOnEnter}\n                                                        __experimentalExpandOnFocus={true}\n                                                        __experimentalAutoSelectFirstMatch={true}\n                                                    />\n                                                </BaseControl>\n                                            </PanelRow>\n                                        )\n                                    )\n                                )\n                            )\n                        }\n\n                        <PanelRow className={datePanelClass}>\n                            <ToggleCalendarDatePicker\n                                currentDate={date}\n                                onChangeDate={handleDateChange}\n                                onToggleCalendar={() => setCalendarIsVisible(!calendarIsVisible)}\n                                is12Hour={!is24hour}\n                                startOfWeek={props.startOfWeek}\n                                isExpanded={calendarIsVisible}\n                                strings={props.strings}\n                            />\n                        </PanelRow>\n\n                        <PanelRow>\n                            <div className=\"future-action-help-text\">\n                                <hr />\n\n                                <span className=\"dashicons dashicons-info\"></span> {HelpText}\n                            </div>\n                        </PanelRow>\n\n                        {!hasValidData && (\n                            <PanelRow>\n                                <BaseControl className=\"notice notice-error\">\n                                    <div>{validationError}</div>\n                                </BaseControl>\n                            </PanelRow>\n                        )}\n                    </Fragment>\n                )}\n            </div>\n            <PluginArea scope='publishpress-future' />\n        </SlotFillProvider>\n    );\n};\n","import { Slot, Fill } from '@wordpress/components';\n\nexport const FutureActionPanelAfterActionField = ({ children }) => (\n    <Fill name=\"FutureActionPanelAfterActionField\">\n        {children}\n    </Fill>\n);\n\nconst FutureActionPanelAfterActionFieldSlot = (props) => (\n    <Slot name=\"FutureActionPanelAfterActionField\" {...props} />\n);\n\nFutureActionPanelAfterActionField.Slot = FutureActionPanelAfterActionFieldSlot;\n\nexport default FutureActionPanelAfterActionField;\n","import { FutureActionPanel } from './';\n\nexport const FutureActionPanelBlockEditor = (props) => {\n    const { PluginDocumentSettingPanel } = wp.editPost;\n    const { useDispatch, select } = wp.data;\n\n    const { editPost } = useDispatch('core/editor');\n\n    const editPostAttribute = (newAttribute) => {\n        const attribute = {\n            publishpress_future_action: {}\n        };\n\n        // For each property on newAttribute, set the value on attribute\n        for (const [name, value] of Object.entries(newAttribute)) {\n            attribute.publishpress_future_action[name] = value;\n        }\n\n        editPost(attribute);\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        const newAttribute = {\n            'enabled': store.getEnabled()\n        }\n\n        if (newAttribute.enabled) {\n            newAttribute['action'] = store.getAction();\n            newAttribute['newStatus'] = store.getNewStatus();\n            newAttribute['date'] = store.getDate();\n            newAttribute['terms'] = store.getTerms();\n            newAttribute['taxonomy'] = store.getTaxonomy();\n            newAttribute['extraData'] = store.getExtraData();\n        }\n\n        editPostAttribute(newAttribute);\n    }\n\n    const data = select('core/editor').getEditedPostAttribute('publishpress_future_action');\n\n    const { lockPostSaving, unlockPostSaving } = useDispatch('core/editor');\n\n    const onDataIsValid = () => {\n        unlockPostSaving('future-action');\n    }\n\n    const onDataIsInvalid = () => {\n        lockPostSaving('future-action');\n    }\n\n    return (\n        <PluginDocumentSettingPanel\n            name={'publishpress-future-action-panel'}\n            title={props.strings.panelTitle}\n            initialOpen={props.postTypeDefaultConfig.autoEnable}\n            className={'post-expirator-panel'}>\n            <div id='publishpress-future-block-editor'>\n                <FutureActionPanel\n                    context={'block-editor'}\n                    postType={props.postType}\n                    isCleanNewPost={props.isCleanNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    statusesSelectOptions={props.statusesSelectOptions}\n                    enabled={data.enabled}\n                    calendarIsVisible={true}\n                    action={data.action}\n                    newStatus={data.newStatus}\n                    date={data.date}\n                    terms={data.terms}\n                    taxonomy={data.taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings}\n                    onDataIsValid={onDataIsValid}\n                    hideCalendarByDefault={props.hideCalendarByDefault}\n                    onDataIsInvalid={onDataIsInvalid} />\n            </div>\n        </PluginDocumentSettingPanel>\n    );\n};\n","import { FutureActionPanel, SelectControl } from '.';\nimport { getElementByName } from '../utils';\n\nexport const FutureActionPanelBulkEdit = (props) => {\n    const { useSelect, useDispatch, select } = wp.data;\n    const { useEffect } = wp.element;\n\n    const onChangeData = (attribute, value) => {\n        getElementByName('future_action_bulk_enabled').value = select(props.storeName).getEnabled() ? 1 : 0;\n        getElementByName('future_action_bulk_action').value = select(props.storeName).getAction();\n        getElementByName('future_action_bulk_new_status').value = select(props.storeName).getNewStatus();\n        getElementByName('future_action_bulk_date').value = select(props.storeName).getDate();\n        getElementByName('future_action_bulk_terms').value = select(props.storeName).getTerms().join(',');\n        getElementByName('future_action_bulk_taxonomy').value = select(props.storeName).getTaxonomy();\n    }\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const newStatus = useSelect((select) => select(props.storeName).getNewStatus(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const changeAction = useSelect((select) => select(props.storeName).getChangeAction(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n\n    const {\n        setChangeAction\n    } = useDispatch(props.storeName);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const handleStrategyChange = (value) => {\n        setChangeAction(value);\n    };\n\n    const options = [\n        { value: 'no-change', label: props.strings.noChange },\n        { value: 'change-add', label: props.strings.changeAdd },\n        { value: 'add-only', label: props.strings.addOnly },\n        { value: 'change-only', label: props.strings.changeOnly },\n        { value: 'remove-only', label: props.strings.removeOnly },\n    ];\n\n    const optionsToDisplayPanel = ['change-add', 'add-only', 'change-only'];\n\n    useEffect(() => {\n        // We are not using onDataIsValid and onDataIsInvalid because we need to enable/disable the button\n        // also based on the changeAction value.\n        if (hasValidData || changeAction === 'no-change') {\n            jQuery('#bulk_edit').prop('disabled', false);\n        } else {\n            jQuery('#bulk_edit').prop('disabled', true);\n        }\n    }, [hasValidData, changeAction]);\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <SelectControl\n                label={props.strings.futureActionUpdate}\n                name={'future_action_bulk_change_action'}\n                value={changeAction}\n                options={options}\n                onChange={handleStrategyChange}\n            />\n\n            {optionsToDisplayPanel.includes(changeAction) && (\n                <FutureActionPanel\n                    context={'bulk-edit'}\n                    autoEnableAndHideCheckbox={true}\n                    postType={props.postType}\n                    isCleanNewPost={props.isNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    statusesSelectOptions={props.statusesSelectOptions}\n                    enabled={true}\n                    calendarIsVisible={false}\n                    action={action}\n                    newStatus={newStatus}\n                    date={date}\n                    terms={terms}\n                    taxonomy={taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    hideCalendarByDefault={props.hideCalendarByDefault}\n                    strings={props.strings} />\n            )}\n\n            {/* Bulk edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_bulk_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_bulk_action'} value={action} />\n            <input type=\"hidden\" name={'future_action_bulk_new_status'} value={newStatus} />\n            <input type=\"hidden\" name={'future_action_bulk_date'} value={date} />\n            <input type=\"hidden\" name={'future_action_bulk_terms'} value={termsString} />\n            <input type=\"hidden\" name={'future_action_bulk_taxonomy'} value={taxonomy} />\n            <input type=\"hidden\" name={'future_action_bulk_view'} value=\"bulk-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from \"./\";\nimport { select, useSelect } from \"@wordpress/data\";\nimport { useEffect } from \"@wordpress/element\";\n\nexport const FutureActionPanelClassicEditor = (props) => {\n    const browserTimezoneOffset = new Date().getTimezoneOffset();\n\n    const getElementByName = (name) => {\n        return document.getElementsByName(name)[0];\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        getElementByName('future_action_enabled').value = store.getEnabled() ? 1 : 0;\n        getElementByName('future_action_action').value = store.getAction();\n        getElementByName('future_action_new_status').value = store.getNewStatus();\n        getElementByName('future_action_date').value = store.getDate();\n        getElementByName('future_action_terms').value = store.getTerms().join(',');\n        getElementByName('future_action_taxonomy').value = store.getTaxonomy();\n    }\n\n    const getTermsFromElementByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return [];\n        }\n\n        let terms = element.value.split(',');\n\n        if (terms.length === 1 && terms[0] === '') {\n            terms = [];\n        }\n\n        return terms.map(term => parseInt(term));\n    }\n\n    const getElementValueByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return '';\n        }\n\n        return element.value;\n    }\n\n    const data = {\n        enabled: getElementValueByName('future_action_enabled') === '1',\n        action: getElementValueByName('future_action_action'),\n        newStatus: getElementValueByName('future_action_new_status'),\n        date: getElementValueByName('future_action_date'),\n        terms: getTermsFromElementByName('future_action_terms'),\n        taxonomy: getElementValueByName('future_action_taxonomy'),\n    };\n\n    const onDataIsValid = () => {\n        jQuery('#publish').prop('disabled', false);\n    }\n\n    const onDataIsInvalid = () => {\n        jQuery('#publish').prop('disabled', true);\n    }\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'classic-editor'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                statusesSelectOptions={props.statusesSelectOptions}\n                enabled={data.enabled}\n                calendarIsVisible={true}\n                action={data.action}\n                newStatus={data.newStatus}\n                date={data.date}\n                terms={data.terms}\n                taxonomy={data.taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings}\n                onDataIsValid={onDataIsValid}\n                hideCalendarByDefault={props.hideCalendarByDefault}\n                onDataIsInvalid={onDataIsInvalid} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\nimport { useSelect, select } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\n\nexport const FutureActionPanelQuickEdit = (props) => {\n    const onChangeData = (attribute, value) => {};\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const hasValidData = useSelect((select) => select(props.storeName).getHasValidData(), []);\n    const newStatus = useSelect((select) => select(props.storeName).getNewStatus(), []);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const onDataIsValid = () => {\n        jQuery('.button-primary.save').prop('disabled', false);\n    }\n\n    const onDataIsInvalid = () => {\n        jQuery('.button-primary.save').prop('disabled', true);\n    }\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'quick-edit'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                statusesSelectOptions={props.statusesSelectOptions}\n                enabled={enabled}\n                calendarIsVisible={false}\n                action={action}\n                newStatus={newStatus}\n                date={date}\n                terms={terms}\n                taxonomy={taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings}\n                onDataIsValid={onDataIsValid}\n                hideCalendarByDefault={props.hideCalendarByDefault}\n                onDataIsInvalid={onDataIsInvalid} />\n\n            {/* Quick edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_action'} value={action ? action : ''} />\n            <input type=\"hidden\" name={'future_action_new_status'} value={newStatus ? newStatus : ''} />\n            <input type=\"hidden\" name={'future_action_date'} value={date ? date : ''} />\n            <input type=\"hidden\" name={'future_action_terms'} value={termsString ? termsString : ''} />\n            <input type=\"hidden\" name={'future_action_taxonomy'} value={taxonomy ? taxonomy : ''} />\n            <input type=\"hidden\" name={'future_action_view'} value=\"quick-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","import { Slot, Fill } from '@wordpress/components';\n\nexport const FutureActionPanelTop = ({ children }) => (\n    <Fill name=\"FutureActionPanelTop\">\n        {children}\n    </Fill>\n);\n\nconst FutureActionPanelTopSlot = (props) => (\n    <Slot name=\"FutureActionPanelTop\" {...props} />\n);\n\nFutureActionPanelTop.Slot = FutureActionPanelTopSlot;\n\nexport default FutureActionPanelTop;\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const NonceControl = function (props) {\n    if (! props.name) {\n        props.name = '_wpnonce';\n    }\n\n    if (! props.referrer) {\n        props.referrer = true;\n    }\n\n    return (\n        <Fragment>\n            <input type=\"hidden\" name={props.name} id={props.name} value={props.nonce} />\n\n            {props.referrer &&\n                <input type=\"hidden\" name=\"_wp_http_referer\" value={props.referrer}/>\n            }\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport {\n    SettingRow,\n    SettingsTable,\n    SelectControl,\n    TextControl,\n    TokensControl,\n    CheckboxControl\n} from './';\nimport { useEffect, useState } from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { applyFilters } from '@wordpress/hooks';\nimport { apiFetch } from '&wp';\nimport DateOffsetPreview from './DateOffsetPreview';\n\nconst { PanelRow } = wp.components;\n\nexport const PostTypeSettingsPanel = function (props) {\n    const originalExpireTypeList = props.expireTypeList[props.postType];\n\n    const [postTypeTaxonomy, setPostTypeTaxonomy] = useState(props.settings.taxonomy);\n    const [termOptions, setTermOptions] = useState([]);\n    const [termsSelectIsLoading, setTermsSelectIsLoading] = useState(false);\n    const [selectedTerms, setSelectedTerms] = useState([]);\n    const [settingHowToExpire, setSettingHowToExpire] = useState(props.settings.howToExpire);\n    const [isActive, setIsActive] = useState(props.settings.active);\n    const [expireOffset, setExpireOffset] = useState(props.settings.defaultExpireOffset);\n    const [emailNotification, setEmailNotification] = useState(props.settings.emailNotification);\n    const [isAutoEnabled, setIsAutoEnabled] = useState(props.settings.autoEnabled);\n    const [hasValidData, setHasValidData] = useState(true);\n    const [validationError, setValidationError] = useState('');\n    const [taxonomyLabel, setTaxonomyLabel] = useState('');\n    const [howToExpireList, setHowToExpireList] = useState(originalExpireTypeList);\n    const [newStatus, setNewStatus] = useState(props.settings.newStatus);\n    const [hasPendingValidation, setHasPendingValidation] = useState(false);\n\n    const offset = expireOffset ? expireOffset : props.settings.globalDefaultExpireOffset;\n\n    const taxonomyRelatedActions = [\n        'category',\n        'category-add',\n        'category-remove',\n        'category-remove-all'\n    ];\n\n    const onChangeTaxonomy = function (value) {\n        setPostTypeTaxonomy(value);\n    };\n\n    const onChangeTerms = (value) => {\n        setSelectedTerms(value);\n    };\n\n    const onChangeHowToExpire = (value) => {\n        setSettingHowToExpire(value);\n    }\n\n    const onChangeActive = (value) => {\n        setIsActive(value);\n    }\n\n    const onChangeExpireOffset = (value) => {\n        setExpireOffset(value);\n    }\n\n    const onChangeEmailNotification = (value) => {\n        setEmailNotification(value);\n    }\n\n    const onChangeAutoEnabled = (value) => {\n        setIsAutoEnabled(value);\n    }\n\n    useEffect(() => {\n        // Remove items from expireTypeList if related to taxonomies and there is no taxonmoy for the post type\n        if (props.taxonomiesList.length === 0) {\n            let newExpireTypeList = [];\n\n            newExpireTypeList = howToExpireList.filter((item) => {\n                return taxonomyRelatedActions.indexOf(item.value) === -1;\n            });\n\n            setHowToExpireList(newExpireTypeList);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!postTypeTaxonomy || !props.taxonomiesList) {\n            return;\n        }\n\n        setTermsSelectIsLoading(true);\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${postTypeTaxonomy}`),\n        }).then((result) => {\n            let options = [];\n\n            let settingsTermsOptions = null;\n            let option;\n\n            result.terms.forEach(term => {\n                option = { value: term.id, label: term.name };\n                options.push(option);\n\n                if (postTypeTaxonomy === props.settings.taxonomy && props.settings.terms.includes(term.id)) {\n                    if (settingsTermsOptions === null) {\n                        settingsTermsOptions = [];\n                    }\n\n                    settingsTermsOptions.push(option.label);\n                }\n            });\n\n            setTermOptions(options);\n            setSelectedTerms(settingsTermsOptions);\n            setTermsSelectIsLoading(false);\n        });\n\n        props.taxonomiesList.forEach((taxonomy) => {\n            if (taxonomy.value === postTypeTaxonomy) {\n                setTaxonomyLabel(taxonomy.label);\n            }\n        });\n    }, [postTypeTaxonomy]);\n\n    useEffect(() => {\n        if (!taxonomyLabel) {\n            return;\n        }\n\n        // Update the list of actions replacing the taxonomy name.\n        let newExpireTypeList = [];\n\n        originalExpireTypeList.forEach((expireType) => {\n            let label = expireType.label;\n\n            if (taxonomyRelatedActions.indexOf(expireType.value) !== -1) {\n                label = label.replace('%s', taxonomyLabel.toLowerCase());\n            }\n\n            newExpireTypeList.push({\n                value: expireType.value,\n                label: label\n            });\n        });\n\n        setHowToExpireList(newExpireTypeList);\n    }, [taxonomyLabel]);\n\n    useEffect(() => {\n        if (hasValidData && props.onDataIsValid) {\n            props.onDataIsValid(props.postType);\n        }\n\n        if (!hasValidData && props.onDataIsInvalid) {\n            props.onDataIsInvalid(props.postType);\n        }\n    }, [hasValidData]);\n\n    useEffect(() => {\n        if (hasPendingValidation && props.onValidationStarted) {\n            props.onValidationStarted(props.postType);\n        }\n\n        if (!hasPendingValidation && props.onValidationFinished) {\n            props.onValidationFinished(props.postType);\n        }\n    }, [hasPendingValidation]);\n\n    const termOptionsLabels = termOptions.map((term) => term.label);\n\n    let settingsRows = [\n        <SettingRow label={props.text.fieldActive} key={'expirationdate_activemeta-' + props.postType}>\n            <CheckboxControl\n                name={'expirationdate_activemeta-' + props.postType}\n                checked={isActive || false}\n                label={props.text.fieldActiveLabel}\n                onChange={onChangeActive}\n            />\n        </SettingRow>\n    ];\n\n    if (isActive) {\n        settingsRows.push(\n            <SettingRow label={props.text.fieldAutoEnable} key={'expirationdate_autoenable-' + props.postType}>\n                <CheckboxControl\n                    name={'expirationdate_autoenable-' + props.postType}\n                    checked={isAutoEnabled || false}\n                    label={props.text.fieldAutoEnableLabel}\n                    onChange={onChangeAutoEnabled}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldTaxonomy} key={'expirationdate_taxonomy-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_taxonomy-' + props.postType}\n                    options={props.taxonomiesList}\n                    selected={postTypeTaxonomy}\n                    noItemFoundMessage={props.text.noItemsfound}\n                    description={props.text.fieldTaxonomyDescription}\n                    data={props.postType}\n                    onChange={onChangeTaxonomy}\n                >\n                </SelectControl>\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldHowToExpire} key={'expirationdate_expiretype-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_expiretype-' + props.postType}\n                    className={'pe-howtoexpire'}\n                    options={howToExpireList}\n                    description={props.text.fieldHowToExpireDescription}\n                    selected={settingHowToExpire}\n                    onChange={onChangeHowToExpire}\n                />\n\n                {settingHowToExpire === 'change-status' &&\n                    <SelectControl\n                        name={'expirationdate_newstatus-' + props.postType}\n                        options={props.statusesList}\n                        selected={newStatus}\n                        onChange={setNewStatus}\n                    />\n                }\n\n                {(props.taxonomiesList.length > 0 && (['category', 'category-add', 'category-remove'].indexOf(settingHowToExpire) > -1)) &&\n                    <TokensControl\n                        label={props.text.fieldTerm}\n                        name={'expirationdate_terms-' + props.postType}\n                        options={termOptionsLabels}\n                        value={selectedTerms}\n                        isLoading={termsSelectIsLoading}\n                        onChange={onChangeTerms}\n                        description={props.text.fieldTermDescription}\n                        maxSuggestions={1000}\n                        expandOnFocus={true}\n                        autoSelectFirstMatch={true}\n                    />\n                }\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldDefaultDateTimeOffset} key={'expired-custom-date-' + props.postType}>\n                <TextControl\n                    name={'expired-custom-date-' + props.postType}\n                    value={expireOffset}\n                    loading={hasPendingValidation}\n                    placeholder={props.settings.globalDefaultExpireOffset}\n                    description={props.text.fieldDefaultDateTimeOffsetDescription}\n                    unescapedDescription={true}\n                    onChange={onChangeExpireOffset}\n                />\n\n                <DateOffsetPreview\n                    offset={offset}\n                    label={props.text.datePreview}\n                    labelDatePreview={props.text.datePreviewCurrent}\n                    labelOffsetPreview={props.text.datePreviewComputed}\n                    setValidationErrorCallback={setValidationError}\n                    setHasPendingValidationCallback={setHasPendingValidation}\n                    setHasValidDataCallback={setHasValidData}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldWhoToNotify} key={'expirationdate_emailnotification-' + props.postType}>\n                <TextControl\n                    name={'expirationdate_emailnotification-' + props.postType}\n                    className=\"large-text\"\n                    value={emailNotification}\n                    description={props.text.fieldWhoToNotifyDescription}\n                    onChange={onChangeEmailNotification}\n                />\n            </SettingRow>\n        );\n    }\n\n    settingsRows = applyFilters('expirationdate_settings_posttype', settingsRows, props, isActive, useState);\n\n    const fieldSetClassNames = props.isVisible ? 'pe-settings-fieldset' : 'pe-settings-fieldset hidden';\n\n    return (\n        <div className={fieldSetClassNames}>\n            <SettingsTable bodyChildren={settingsRows} />\n\n            {! hasValidData && (\n                <PanelRow>\n                    <div className=\"publishpress-future-notice publishpress-future-notice-error\">\n                        <strong>{props.text.error}:</strong> {validationError}\n                    </div>\n                </PanelRow>\n            )}\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport { PostTypeSettingsPanel } from \"./\";\nimport { useState } from \"@wordpress/element\";\n\nexport const PostTypesSettingsPanels = function (props) {\n    const [currentTab, setCurrentTab] = useState(Object.keys(props.settings)[0]);\n\n    let panels = [];\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        panels.push(\n            <PostTypeSettingsPanel\n                legend={postTypeSettings.label}\n                text={props.text}\n                postType={postType}\n                settings={postTypeSettings}\n                expireTypeList={props.expireTypeList}\n                taxonomiesList={props.taxonomiesList[postType]}\n                statusesList={props.statusesList[postType]}\n                key={`${postType}-panel`}\n                onDataIsValid={props.onDataIsValid}\n                onDataIsInvalid={props.onDataIsInvalid}\n                onValidationStarted={props.onValidationStarted}\n                onValidationFinished={props.onValidationFinished}\n                isVisible={currentTab === postType}\n            />\n        );\n    }\n\n    const onSelectTab = (event) => {\n        event.preventDefault();\n        setCurrentTab(event.target.hash.replace('#', '').replace('-panel', ''));\n    }\n\n    let tabs = [];\n    let selected = false;\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        selected = currentTab === postType;\n        tabs.push(\n            <a href={`#${postType}-panel`}\n                className={\"nav-tab \" + (selected ? 'nav-tab-active':'')}\n                key={`${postType}-tab`}\n                onClick={onSelectTab}\n            >\n                {postTypeSettings.label}\n            </a>\n        );\n    }\n\n    return (\n        <div>\n            <nav className=\"nav-tab-wrapper\">\n                {tabs}\n            </nav>\n            {panels}\n        </div>\n    );\n}\n\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\nimport { SelectControl as WPSelectControl } from \"@wordpress/components\";\n\nexport const SelectControl = function (props) {\n    const onChange = (value) => {\n        props.onChange(value);\n    };\n\n    return (\n        <Fragment>\n            {props.options.length === 0 && (\n                <div>{props.noItemFoundMessage}</div>\n            )}\n\n            {props.options.length > 0 && (\n                <WPSelectControl\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.selected}\n                    onChange={onChange}\n                    data-data={props.data}\n                    options={props.options}\n                />\n            )}\n\n            {props.children}\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const SettingRow = function (props) {\n    return (\n        <tr valign=\"top\">\n            <th scope=\"row\">\n                <label htmlFor=\"\">{props.label}</label>\n            </th>\n            <td>\n                {props.children}\n            </td>\n        </tr>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsFieldset = function (props) {\n    return (\n        <fieldset className={props.className}>\n                <legend>{props.legend}</legend>\n                {props.children}\n        </fieldset>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsForm = function (props) {\n    return (\n        <form method=\"post\">\n            {props.children}\n        </form>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\n\nexport const SettingsSection = function (props) {\n    return (\n        <Fragment>\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n            {props.children}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsTable = function (props) {\n    return (\n        <table className=\"form-table\">\n            <tbody>\n                {props.bodyChildren}\n            </tbody>\n        </table>\n    )\n}\n","/*\n * Copyright (c) 2024. PublishPress, All rights reserved.\n */\nexport const Spinner = function (props) {\n    return (\n        <span className=\"publishpress-future-spinner\"><div></div><div></div><div></div><div></div></span>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SubmitButton = function (props) {\n    return (\n        <input\n            type=\"submit\"\n            name={props.name}\n            value={props.text}\n            disabled={props.disabled}\n            className=\"button-primary\"\n        />\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"@wordpress/element\";\nimport { TextControl as WPTextControl } from \"@wordpress/components\";\nimport { Spinner } from \"./\";\n\nexport const TextControl = function (props) {\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    let className = props.className ? props.className : '';\n\n    if (props.loading) {\n        className += ' publishpress-future-loading publishpress-future-loading-input';\n    }\n\n    return (\n        <Fragment>\n            <div className={className}>\n                <WPTextControl\n                    type=\"text\"\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.value}\n                    placeholder={props.placeholder}\n                    onChange={onChange}\n                />\n\n                {props.loading && <Spinner/>}\n\n                {description}\n            </div>\n        </Fragment>\n    )\n}\n","import { Button } from '@wordpress/components';\n\nexport const ToggleArrowButton = function (props) {\n    const onClick = function () {\n        if (props.onClick) {\n            props.onClick();\n        }\n    };\n\n    const iconExpanded = props.iconExpanded ? props.iconExpanded : 'arrow-up-alt2';\n    const iconCollapsed = props.iconCollapsed ? props.iconCollapsed : 'arrow-down-alt2';\n\n    const icon = props.isExpanded ? iconExpanded : iconCollapsed;\n\n    const title = props.isExpanded ? props.titleExpanded : props.titleCollapsed;\n\n    return (\n        <Button\n            isSmall\n            title={title}\n            icon={icon}\n            onClick={onClick}\n            className={props.className}\n        />\n    )\n}\n","import { ToggleArrowButton } from \"./ToggleArrowButton\";\nimport { DateTimePicker } from \"./DateTimePicker\";\nimport { Fragment, useEffect } from \"@wordpress/element\";\n\nexport const ToggleCalendarDatePicker = (\n    {\n        isExpanded,\n        strings,\n        onToggleCalendar,\n        currentDate,\n        onChangeDate,\n        is12Hour,\n        startOfWeek\n    }\n) => {\n    useEffect(() => {\n        // Move the element of the toggle button to between the time and date elements.\n        const toggleButtonElement = document.querySelector('.future-action-calendar-toggle');\n\n        if (! toggleButtonElement) {\n            return;\n        }\n\n        const dateTimeElement = toggleButtonElement.nextElementSibling;\n\n        if (! dateTimeElement) {\n            return;\n        }\n\n        const timeElement = dateTimeElement.querySelector('.components-datetime__time');\n\n        if (! timeElement) {\n            return;\n        }\n\n        const dateElement = timeElement.nextSibling;\n\n        if (! dateElement) {\n            return;\n        }\n\n        dateTimeElement.insertBefore(toggleButtonElement, dateElement)\n    });\n\n    return (\n        <Fragment>\n            <ToggleArrowButton\n                className=\"future-action-calendar-toggle\"\n                isExpanded={isExpanded}\n                iconExpanded=\"arrow-up-alt2\"\n                iconCollapsed=\"calendar\"\n                titleExpanded={strings.hideCalendar}\n                titleCollapsed={strings.showCalendar}\n                onClick={onToggleCalendar} />\n\n            <DateTimePicker\n                currentDate={currentDate}\n                onChange={onChangeDate}\n                __nextRemoveHelpButton={true}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n            />\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState, useEffect } from \"@wordpress/element\";\nimport { FormTokenField } from \"@wordpress/components\";\n\nexport const TokensControl = (props) => {\n    const [stringValue, setStringValue] = useState('');\n\n    useEffect(() => {\n        if (props.value) {\n            setStringValue(props.value.join(','));\n        }\n    }, [props.value]);\n\n    let description;\n\n    if (props.description) {\n        if (props.unescapedDescription) {\n            // If using this option, the HTML has to be escaped before injected into the JS interface.\n            description = <p className=\"description\" dangerouslySetInnerHTML={{__html: props.description}}></p>;\n        } else {\n            description = <p className=\"description\">{props.description}</p>;\n        }\n    }\n\n    const onChange = (value) => {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n\n        if (typeof value === 'object') {\n            setStringValue(value.join(','));\n        } else {\n            setStringValue('');\n        }\n    }\n\n    const value = props.value ? props.value : [];\n \n    return (\n        <Fragment>\n            <FormTokenField\n                label={props.label}\n                value={value}\n                suggestions={props.options}\n                onChange={onChange}\n                maxSuggestions={props.maxSuggestions}\n                className=\"publishpres-future-token-field\"\n                __experimentalExpandOnFocus={props.expandOnFocus}\n                __experimentalAutoSelectFirstMatch={props.autoSelectFirstMatch}\n            />\n            <input type=\"hidden\" name={props.name} value={stringValue} />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const TrueFalseControl = function (props) {\n    const { Fragment } = wp.element;\n\n    const onChange = (e) => {\n        if (props.onChange) {\n            props.onChange(\n                e.target.value === props.trueValue && jQuery(e.target).is(':checked')\n            );\n            // Check only the true radio... using the field name? or directly the ID\n        }\n    };\n\n    return (\n        <Fragment>\n            <input\n                type=\"radio\"\n                name={props.name}\n                id={props.name + '-true'}\n                value={props.trueValue}\n                defaultChecked={props.selected}\n                onChange={onChange}\n            />\n\n            <label htmlFor={props.name + '-true'}>{props.trueLabel}</label>\n            &nbsp;&nbsp;\n            <input\n                type=\"radio\"\n                name={props.name}\n                defaultChecked={!props.selected}\n                id={props.name + '-false'}\n                value={props.falseValue}\n                onChange={onChange}\n            />\n            <label\n                htmlFor={props.name + '-false'}>{props.falseLabel}</label>\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","export { ButtonsPanel } from \"./ButtonsPanel\";\nexport { FutureActionPanel } from \"./FutureActionPanel\";\nexport { FutureActionPanelBlockEditor } from \"./FutureActionPanelBlockEditor\";\nexport { FutureActionPanelClassicEditor } from \"./FutureActionPanelClassicEditor\";\nexport { FutureActionPanelQuickEdit } from \"./FutureActionPanelQuickEdit\";\nexport { FutureActionPanelBulkEdit } from \"./FutureActionPanelBulkEdit\";\nexport { PostTypeSettingsPanel } from \"./PostTypeSettingsPanel\";\nexport { PostTypesSettingsPanels } from \"./PostTypesSettingsPanels\";\nexport { SettingRow } from \"./SettingRow\";\nexport { SettingsFieldset } from \"./SettingsFieldset\";\nexport { SettingsForm } from \"./SettingsForm\";\nexport { SettingsSection } from \"./SettingsSection\";\nexport { SettingsTable } from \"./SettingsTable\";\nexport { SubmitButton } from \"./SubmitButton\";\nexport { CheckboxControl } from \"./CheckboxControl\";\nexport { SelectControl } from \"./SelectControl\";\nexport { TextControl } from \"./TextControl\";\nexport { TokensControl } from \"./TokensControl\";\nexport { NonceControl } from \"./NonceControl\";\nexport { TrueFalseControl } from \"./TrueFalseControl\";\nexport { Spinner } from \"./Spinner\";\nexport { DateOffsetPreview } from \"./DateOffsetPreview\";\n","export const getCurrentTimeInSeconds = () => {\n    return normalizeUnixTimeToSeconds(new Date().getTime());\n}\n\nexport const getCurrentTimeAsTimestamp = () => {\n    return formatUnixTimeToTimestamp(getCurrentTimeInSeconds());\n}\n\nexport const formatUnixTimeToTimestamp = (unixTimestamp) => {\n    const date = new Date(\n        normalizeUnixTimeToSeconds(unixTimestamp)\n    );\n\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Months are zero-based\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = (\"0\" + date.getHours()).slice(-2);\n    const minutes = (\"0\" + date.getMinutes()).slice(-2);\n    const seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nexport const formatTimestampToUnixTime = (time) => {\n    const date = new Date(time);\n\n    return normalizeUnixTimeToSeconds(date.getTime());\n}\n\nexport const timeIsInSeconds = (time) => {\n    return parseInt(time).toString().length <= 10;\n}\n\nexport const normalizeUnixTimeToSeconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time : time / 1000;\n}\n\nexport const normalizeUnixTimeToMilliseconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time * 1000 : time;\n}\n","export const compact = (array) => {\n    if (!array) {\n        return [];\n    }\n\n    if (! Array.isArray(array) && typeof array === 'object') {\n        array = Object.values(array);\n    }\n\n    return array.filter((item) => {\n        return item !== null && item !== undefined && item !== '';\n    });\n}\n\nexport const debugLogFactory = (config) => {\n    return (description, ...message) => {\n        if (console && config.isDebugEnabled) {\n            console.debug('[Future]', description, ...message);\n        }\n    }\n}\n\nexport const isGutenbergEnabled = () => {\n    return document.body.classList.contains('block-editor-page');\n}\n\nexport const getElementByName = (name) => {\n    return document.getElementsByName(name)[0];\n}\n\nexport const getFieldByName = (name, postId) => {\n    return document.querySelector(`#the-list tr#post-${postId} .column-expirationdate input#future_action_${name}-${postId}`);\n}\n\nexport const getFieldValueByName = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return null;\n    }\n\n    return field.value;\n};\n\nexport const getFieldValueByNameAsArrayOfInt = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field || !field.value) {\n        return [];\n    }\n\n    if (typeof field.value === 'number') {\n        field.value = field.value.toString();\n    }\n\n    return field.value.split(',').map(term => parseInt(term));\n};\n\nexport const getFieldValueByNameAsBool = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return false;\n    }\n\n    return field.value === '1' || field.value === 'true';\n}\n\nexport const getActionSettingsFromColumnData = (postId) => {\n    const columnData = document.querySelector(`#post-expire-column-${postId}`);\n\n    if (!columnData) {\n        return {};\n    }\n\n    return {\n        enabled: columnData.dataset.actionEnabled === '1',\n        action: columnData.dataset.actionType,\n        date: columnData.dataset.actionDate,\n        dateUnix: columnData.dataset.actionDateUnix,\n        taxonomy: columnData.dataset.actionTaxonomy,\n        terms: columnData.dataset.actionTerms,\n        newStatus: columnData.dataset.actionNewStatus,\n    };\n}\n\n/**\n * This function is used to determine if a value is a number, including strings.\n *\n * @param {*} value\n * @returns\n */\nexport const isNumber = (value) => {\n    return !isNaN(value);\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.publishpress-future-date-preview .publishpress-future-date-preview-value {\n    font-family: monospace;\n    background-color: #e7e7e7;\n    padding: 2px 4px;\n}\n\n.publishpress-future-date-preview.compact .publishpress-future-date-preview-label {\n    display: block;\n}\n\n.publishpress-future-date-preview.compact {\n    margin-bottom: 8px;\n}\n\n.publishpress-future-date-preview.compact h4 {\n    font-size: 11px;\n    font-weight: 500;\n    line-height: 1.4;\n    text-transform: uppercase;\n    display: inline-block;\n    margin-bottom: calc(8px);\n    padding: 0px;\n    flex-shrink: 0;\n    margin-right: 12px;\n    max-width: 75%;\n    margin-top: 0;\n}\n\n.publishpress-future-notice.publishpress-future-notice-error {\n    color: #dc3232;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./assets/jsx/components/css/dateOffsetPreview.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,yBAAyB;IACzB,qBAAqB;IACrB,wBAAwB;IACxB,YAAY;IACZ,cAAc;IACd,kBAAkB;IAClB,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB\",\"sourcesContent\":[\".publishpress-future-date-preview .publishpress-future-date-preview-value {\\n    font-family: monospace;\\n    background-color: #e7e7e7;\\n    padding: 2px 4px;\\n}\\n\\n.publishpress-future-date-preview.compact .publishpress-future-date-preview-label {\\n    display: block;\\n}\\n\\n.publishpress-future-date-preview.compact {\\n    margin-bottom: 8px;\\n}\\n\\n.publishpress-future-date-preview.compact h4 {\\n    font-size: 11px;\\n    font-weight: 500;\\n    line-height: 1.4;\\n    text-transform: uppercase;\\n    display: inline-block;\\n    margin-bottom: calc(8px);\\n    padding: 0px;\\n    flex-shrink: 0;\\n    margin-right: 12px;\\n    max-width: 75%;\\n    margin-top: 0;\\n}\\n\\n.publishpress-future-notice.publishpress-future-notice-error {\\n    color: #dc3232;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js!./dateOffsetPreview.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js!./dateOffsetPreview.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","module.exports = publishpressFutureSettingsGeneralConfig;","module.exports = wp;","module.exports = wp.components;","module.exports = wp.data;","module.exports = wp.element;","module.exports = wp.hooks;","module.exports = wp.plugins;","module.exports = wp.url;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport { DateOffsetPreview } from \"./components\";\n\nimport {\n    StrictMode,\n    createRoot,\n    useState,\n    useEffect\n} from \"@wordpress/element\";\n\nimport {\n    text,\n} from \"&config.settings-general\";\n\nconst SettingsFormPanel = (props) => {\n    const [isValidForm, setIsValidForm] = useState(true);\n    const [validationError, setValidationError] = useState('');\n    const [hasPendingValidation, setHasPendingValidation] = useState(false);\n    const [offset, setOffset] = useState('');\n\n    const onHasValidationError = (errorMessage) => {\n        if (errorMessage) {\n            setIsValidForm(false);\n            setValidationError(errorMessage);\n        } else {\n            setIsValidForm(true);\n            setValidationError('');\n        }\n    }\n\n    const onValidationStarted = (inProgress) => {\n        setHasPendingValidation(inProgress);\n    }\n\n    const onValidationFinished = (isValid) => {\n        setHasPendingValidation(false);\n        setIsValidForm(isValid);\n    }\n\n    useEffect(() => {\n        jQuery('#expired-custom-expiration-date').on('keyup', function () {\n            setOffset(jQuery(this).val());\n        });\n\n        setOffset(jQuery('#expired-custom-expiration-date').val());\n    }, []);\n\n    return (\n        <StrictMode>\n            <DateOffsetPreview\n                offset={offset}\n                label={text.datePreview}\n                labelDatePreview={text.datePreviewCurrent}\n                labelOffsetPreview={text.datePreviewComputed}\n                setValidationErrorCallback={onHasValidationError}\n                setHasPendingValidationCallback={onValidationStarted}\n                setHasValidDataCallback={onValidationFinished}\n                />\n\n            {! isValidForm && validationError && (\n                <div className=\"publishpress-future-notice publishpress-future-notice-error\">\n                    <p>{text.error}: {validationError}</p>\n                </div>\n            )}\n        </StrictMode>\n    )\n};\n\nconst container = document.getElementById(\"expiration-date-preview\");\nconst component = (<SettingsFormPanel />);\n\ncreateRoot(container).render(component);\n"],"names":["ButtonsPanel","props","children","CheckboxControl","checked","setChecked","description","unescapedDescription","__html","onChange","value","label","name","className","require","DateOffsetPreview","offset","labelDatePreview","labelOffsetPreview","setValidationErrorCallback","setHasPendingValidationCallback","setHasValidDataCallback","compactView","offsetPreview","setOffsetPreview","currentTime","setCurrentTime","apiRequestControllerRef","AbortController","validateDateOffset","controller","current","abort","signal","path","method","data","then","result","isValid","message","preview","catch","error","compactClass","DateTimePicker","currentDate","is12Hour","startOfWeek","wp","components","PanelRow","SelectControl","FormTokenField","Spinner","BaseControl","element","Fragment","useEffect","useState","decodeEntities","htmlEntities","addQueryArgs","url","useSelect","useDispatch","apiFetch","FutureActionPanel","select","action","storeName","getAction","date","getDate","enabled","getEnabled","terms","getTerms","taxonomy","getTaxonomy","taxonomyName","getTaxonomyName","termsListByName","getTermsListByName","termsListById","getTermsListById","isFetchingTerms","getIsFetchingTerms","calendarIsVisible","getCalendarIsVisible","hasValidData","getHasValidData","newStatus","getNewStatus","validationError","setValidationError","setAction","setDate","setEnabled","setTerms","setTaxonomy","setTermsListByName","setTermsListById","setTaxonomyName","setIsFetchingTerms","setCalendarIsVisible","setHasValidData","setNewStatus","mapTermsListById","map","term","insertTerm","id","count","link","slug","mapTermsListByName","callOnChangeData","attribute","onChangeData","handleEnabledChange","isChecked","fetchTerms","handleActionChange","handleNewStatusChange","handleDateChange","handleTermsChange","forEach","storeCalendarIsVisibleOnStorage","localStorage","setItem","context","getCalendarIsVisibleFromStorage","getItem","autoEnableAndHideCheckbox","hideCalendarByDefault","isCleanNewPost","onDataIsValid","onDataIsInvalid","selectedTerms","length","termsListByNameKeys","Object","keys","panelClass","contentPanelClass","datePanelClass","is24hour","timeFormat","replaceCurlyBracketsWithLink","string","href","target","parts","split","push","shift","part","before","after","actionsSelectOptions","filter","item","indexOf","HelpText","strings","timezoneSettingsHelp","displayTaxonomyField","String","includes","termsFieldLabel","newTerms","replace","removeTerms","addTerms","validateData","valid","errorActionRequired","errorDateRequired","Date","errorDateInPast","isTermRequired","noTermIsSelected","errorTermsRequired","forceIgnoreAutoSubmitOnEnter","e","jQuery","addClass","enablePostExpiration","statusesSelectOptions","loading","noTaxonomyFound","noTermsFound","addTermsPlaceholder","FutureActionPanelAfterActionField","FutureActionPanelAfterActionFieldSlot","Slot","FutureActionPanelBlockEditor","PluginDocumentSettingPanel","editPost","editPostAttribute","newAttribute","publishpress_future_action","entries","store","getExtraData","getEditedPostAttribute","lockPostSaving","unlockPostSaving","panelTitle","postTypeDefaultConfig","autoEnable","postType","FutureActionPanelBulkEdit","join","changeAction","getChangeAction","setChangeAction","termsString","handleStrategyChange","options","noChange","changeAdd","addOnly","changeOnly","removeOnly","optionsToDisplayPanel","prop","futureActionUpdate","isNewPost","nonce","FutureActionPanelClassicEditor","browserTimezoneOffset","getTimezoneOffset","getElementByName","document","getElementsByName","getTermsFromElementByName","parseInt","getElementValueByName","FutureActionPanelQuickEdit","FutureActionPanelTop","FutureActionPanelTopSlot","NonceControl","referrer","PostTypeSettingsPanel","originalExpireTypeList","expireTypeList","settings","postTypeTaxonomy","setPostTypeTaxonomy","termOptions","setTermOptions","termsSelectIsLoading","setTermsSelectIsLoading","setSelectedTerms","howToExpire","settingHowToExpire","setSettingHowToExpire","active","isActive","setIsActive","defaultExpireOffset","expireOffset","setExpireOffset","emailNotification","setEmailNotification","autoEnabled","isAutoEnabled","setIsAutoEnabled","taxonomyLabel","setTaxonomyLabel","howToExpireList","setHowToExpireList","hasPendingValidation","setHasPendingValidation","globalDefaultExpireOffset","taxonomyRelatedActions","onChangeTaxonomy","onChangeTerms","onChangeHowToExpire","onChangeActive","onChangeExpireOffset","onChangeEmailNotification","onChangeAutoEnabled","taxonomiesList","newExpireTypeList","settingsTermsOptions","option","expireType","toLowerCase","onValidationStarted","onValidationFinished","termOptionsLabels","settingsRows","text","fieldActive","fieldActiveLabel","fieldAutoEnable","fieldAutoEnableLabel","fieldTaxonomy","noItemsfound","fieldTaxonomyDescription","fieldHowToExpire","fieldHowToExpireDescription","statusesList","fieldTerm","fieldTermDescription","fieldDefaultDateTimeOffset","fieldDefaultDateTimeOffsetDescription","datePreview","datePreviewCurrent","datePreviewComputed","fieldWhoToNotify","fieldWhoToNotifyDescription","fieldSetClassNames","isVisible","PostTypesSettingsPanels","currentTab","setCurrentTab","panels","postTypeSettings","onSelectTab","event","preventDefault","hash","tabs","selected","noItemFoundMessage","SettingRow","SettingsFieldset","legend","SettingsForm","SettingsSection","title","SettingsTable","bodyChildren","SubmitButton","disabled","TextControl","placeholder","ToggleArrowButton","onClick","iconExpanded","iconCollapsed","icon","isExpanded","titleExpanded","titleCollapsed","ToggleCalendarDatePicker","onToggleCalendar","onChangeDate","toggleButtonElement","querySelector","dateTimeElement","nextElementSibling","timeElement","dateElement","nextSibling","insertBefore","hideCalendar","showCalendar","TokensControl","stringValue","setStringValue","maxSuggestions","expandOnFocus","autoSelectFirstMatch","TrueFalseControl","trueValue","is","trueLabel","falseValue","falseLabel","getCurrentTimeInSeconds","normalizeUnixTimeToSeconds","getTime","getCurrentTimeAsTimestamp","formatUnixTimeToTimestamp","unixTimestamp","year","getFullYear","month","getMonth","slice","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatTimestampToUnixTime","time","timeIsInSeconds","toString","normalizeUnixTimeToMilliseconds","compact","array","Array","isArray","values","undefined","debugLogFactory","config","console","isDebugEnabled","debug","isGutenbergEnabled","body","classList","contains","getFieldByName","postId","getFieldValueByName","field","getFieldValueByNameAsArrayOfInt","getFieldValueByNameAsBool","getActionSettingsFromColumnData","columnData","dataset","actionEnabled","actionType","actionDate","dateUnix","actionDateUnix","actionTaxonomy","actionTerms","actionNewStatus","isNumber","isNaN","SettingsFormPanel","isValidForm","setIsValidForm","setOffset","onHasValidationError","errorMessage","inProgress","on","val","container","getElementById","component","render"],"sourceRoot":""}